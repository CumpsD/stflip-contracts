{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DOMAIN_SEPARATOR",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burnFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        }
      ],
      "name": "initialize",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "nonces",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "permit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b5061174a806100206000396000f3fe608060405234801561001057600080fd5b50600436106101375760003560e01c806370a08231116100b857806395d89b411161007c57806395d89b4114610279578063a457c2d714610281578063a9059cbb14610294578063d505accf146102a7578063dd62ed3e146102ba578063f2fde38b146102cd57600080fd5b806370a0823114610207578063715018a61461023057806379cc6790146102385780637ecebe001461024b5780638da5cb5b1461025e57600080fd5b80633644e515116100ff5780633644e515146101b157806339509351146101b957806340c10f19146101cc57806342966c68146101e15780634cd88b76146101f457600080fd5b806306fdde031461013c578063095ea7b31461015a57806318160ddd1461017d57806323b872dd1461018f578063313ce567146101a2575b600080fd5b6101446102e0565b6040516101519190611298565b60405180910390f35b61016d610168366004611302565b610372565b6040519015158152602001610151565b6067545b604051908152602001610151565b61016d61019d36600461132c565b61038c565b60405160128152602001610151565b6101816103b0565b61016d6101c7366004611302565b6103bf565b6101df6101da366004611302565b6103e1565b005b6101df6101ef366004611368565b610445565b61016d610202366004611424565b610452565b610181610215366004611488565b6001600160a01b031660009081526065602052604090205490565b6101df6105aa565b6101df610246366004611302565b6105be565b610181610259366004611488565b6105d3565b6033546040516001600160a01b039091168152602001610151565b6101446105f1565b61016d61028f366004611302565b610600565b61016d6102a2366004611302565b61067b565b6101df6102b53660046114aa565b610689565b6101816102c836600461151d565b6107ed565b6101df6102db366004611488565b610818565b6060606880546102ef90611550565b80601f016020809104026020016040519081016040528092919081815260200182805461031b90611550565b80156103685780601f1061033d57610100808354040283529160200191610368565b820191906000526020600020905b81548152906001019060200180831161034b57829003601f168201915b5050505050905090565b60003361038081858561088e565b60019150505b92915050565b60003361039a8582856109b3565b6103a5858585610a2d565b506001949350505050565b60006103ba610bd8565b905090565b6000336103808185856103d283836107ed565b6103dc9190611584565b61088e565b6103e9610c53565b806000036104375760405162461bcd60e51b815260206004820152601660248201527504c50546f6b656e3a2063616e6e6f74206d696e7420360541b60448201526064015b60405180910390fd5b6104418282610cad565b5050565b61044f3382610d6e565b50565b60008054610100900460ff16158080156104735750600054600160ff909116105b8061048d5750303b15801561048d575060005460ff166001145b6104f05760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161042e565b6000805460ff191660011790558015610513576000805461ff0019166101001790555b61051b610e9f565b6105258484610ec6565b61054884604051806040016040528060018152602001603160f81b815250610f06565b61055184610f47565b610559610f6e565b6001915080156105a3576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5092915050565b6105b2610c53565b6105bc6000610f9a565b565b6105c98233836109b3565b6104418282610d6e565b6001600160a01b038116600090815260fd6020526040812054610386565b6060606980546102ef90611550565b6000338161060e82866107ed565b90508381101561066e5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b606482015260840161042e565b6103a5828686840361088e565b600033610380818585610a2d565b834211156106d95760405162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e65000000604482015260640161042e565b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98888886107088c610fec565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e001604051602081830303815290604052805190602001209050600061076382611014565b9050600061077382878787611062565b9050896001600160a01b0316816001600160a01b0316146107d65760405162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e61747572650000604482015260640161042e565b6107e18a8a8a61088e565b50505050505050505050565b6001600160a01b03918216600090815260666020908152604080832093909416825291909152205490565b610820610c53565b6001600160a01b0381166108855760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161042e565b61044f81610f9a565b6001600160a01b0383166108f05760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161042e565b6001600160a01b0382166109515760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161042e565b6001600160a01b0383811660008181526066602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b60006109bf84846107ed565b90506000198114610a275781811015610a1a5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161042e565b610a27848484840361088e565b50505050565b6001600160a01b038316610a915760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161042e565b6001600160a01b038216610af35760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161042e565b6001600160a01b03831660009081526065602052604090205481811015610b6b5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161042e565b6001600160a01b0380851660008181526065602052604080822086860390559286168082529083902080548601905591517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610bcb9086815260200190565b60405180910390a3610a27565b60006103ba7f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f610c0760c95490565b60ca546040805160208101859052908101839052606081018290524660808201523060a082015260009060c0016040516020818303038152906040528051906020012090509392505050565b6033546001600160a01b031633146105bc5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161042e565b6001600160a01b038216610d035760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161042e565b8060676000828254610d159190611584565b90915550506001600160a01b0382166000818152606560209081526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b6001600160a01b038216610dce5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b606482015260840161042e565b6001600160a01b03821660009081526065602052604090205481811015610e425760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b606482015260840161042e565b6001600160a01b03831660008181526065602090815260408083208686039055606780548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91016109a6565b505050565b600054610100900460ff166105bc5760405162461bcd60e51b815260040161042e906115a5565b600054610100900460ff16610eed5760405162461bcd60e51b815260040161042e906115a5565b6068610ef9838261163e565b506069610e9a828261163e565b600054610100900460ff16610f2d5760405162461bcd60e51b815260040161042e906115a5565b81516020928301208151919092012060c99190915560ca55565b600054610100900460ff1661044f5760405162461bcd60e51b815260040161042e906115a5565b600054610100900460ff16610f955760405162461bcd60e51b815260040161042e906115a5565b6105bc335b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038116600090815260fd602052604090208054600181018255905b50919050565b6000610386611021610bd8565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b60008060006110738787878761108a565b915091506110808161114e565b5095945050505050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311156110c15750600090506003611145565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015611115573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811661113e57600060019250925050611145565b9150600090505b94509492505050565b6000816004811115611162576111626116fe565b0361116a5750565b600181600481111561117e5761117e6116fe565b036111cb5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e61747572650000000000000000604482015260640161042e565b60028160048111156111df576111df6116fe565b0361122c5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604482015260640161042e565b6003816004811115611240576112406116fe565b0361044f5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b606482015260840161042e565b600060208083528351808285015260005b818110156112c5578581018301518582016040015282016112a9565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146112fd57600080fd5b919050565b6000806040838503121561131557600080fd5b61131e836112e6565b946020939093013593505050565b60008060006060848603121561134157600080fd5b61134a846112e6565b9250611358602085016112e6565b9150604084013590509250925092565b60006020828403121561137a57600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126113a857600080fd5b813567ffffffffffffffff808211156113c3576113c3611381565b604051601f8301601f19908116603f011681019082821181831017156113eb576113eb611381565b8160405283815286602085880101111561140457600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806040838503121561143757600080fd5b823567ffffffffffffffff8082111561144f57600080fd5b61145b86838701611397565b9350602085013591508082111561147157600080fd5b5061147e85828601611397565b9150509250929050565b60006020828403121561149a57600080fd5b6114a3826112e6565b9392505050565b600080600080600080600060e0888a0312156114c557600080fd5b6114ce886112e6565b96506114dc602089016112e6565b95506040880135945060608801359350608088013560ff8116811461150057600080fd5b9699959850939692959460a0840135945060c09093013592915050565b6000806040838503121561153057600080fd5b611539836112e6565b9150611547602084016112e6565b90509250929050565b600181811c9082168061156457607f821691505b60208210810361100e57634e487b7160e01b600052602260045260246000fd5b8082018082111561038657634e487b7160e01b600052601160045260246000fd5b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b601f821115610e9a57600081815260208120601f850160051c810160208610156116175750805b601f850160051c820191505b8181101561163657828155600101611623565b505050505050565b815167ffffffffffffffff81111561165857611658611381565b61166c816116668454611550565b846115f0565b602080601f8311600181146116a157600084156116895750858301515b600019600386901b1c1916600185901b178555611636565b600085815260208120601f198616915b828110156116d0578886015182559484019460019091019084016116b1565b50858210156116ee5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052602160045260246000fdfea26469706673582212201cd5263f664bf735e99a86dfabd64b395a89683dcd8b7158b7768e848ce8cba364736f6c63430008130033",
    "sourceMap": "410:1194:35:-:0;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106101375760003560e01c806370a08231116100b857806395d89b411161007c57806395d89b4114610279578063a457c2d714610281578063a9059cbb14610294578063d505accf146102a7578063dd62ed3e146102ba578063f2fde38b146102cd57600080fd5b806370a0823114610207578063715018a61461023057806379cc6790146102385780637ecebe001461024b5780638da5cb5b1461025e57600080fd5b80633644e515116100ff5780633644e515146101b157806339509351146101b957806340c10f19146101cc57806342966c68146101e15780634cd88b76146101f457600080fd5b806306fdde031461013c578063095ea7b31461015a57806318160ddd1461017d57806323b872dd1461018f578063313ce567146101a2575b600080fd5b6101446102e0565b6040516101519190611298565b60405180910390f35b61016d610168366004611302565b610372565b6040519015158152602001610151565b6067545b604051908152602001610151565b61016d61019d36600461132c565b61038c565b60405160128152602001610151565b6101816103b0565b61016d6101c7366004611302565b6103bf565b6101df6101da366004611302565b6103e1565b005b6101df6101ef366004611368565b610445565b61016d610202366004611424565b610452565b610181610215366004611488565b6001600160a01b031660009081526065602052604090205490565b6101df6105aa565b6101df610246366004611302565b6105be565b610181610259366004611488565b6105d3565b6033546040516001600160a01b039091168152602001610151565b6101446105f1565b61016d61028f366004611302565b610600565b61016d6102a2366004611302565b61067b565b6101df6102b53660046114aa565b610689565b6101816102c836600461151d565b6107ed565b6101df6102db366004611488565b610818565b6060606880546102ef90611550565b80601f016020809104026020016040519081016040528092919081815260200182805461031b90611550565b80156103685780601f1061033d57610100808354040283529160200191610368565b820191906000526020600020905b81548152906001019060200180831161034b57829003601f168201915b5050505050905090565b60003361038081858561088e565b60019150505b92915050565b60003361039a8582856109b3565b6103a5858585610a2d565b506001949350505050565b60006103ba610bd8565b905090565b6000336103808185856103d283836107ed565b6103dc9190611584565b61088e565b6103e9610c53565b806000036104375760405162461bcd60e51b815260206004820152601660248201527504c50546f6b656e3a2063616e6e6f74206d696e7420360541b60448201526064015b60405180910390fd5b6104418282610cad565b5050565b61044f3382610d6e565b50565b60008054610100900460ff16158080156104735750600054600160ff909116105b8061048d5750303b15801561048d575060005460ff166001145b6104f05760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161042e565b6000805460ff191660011790558015610513576000805461ff0019166101001790555b61051b610e9f565b6105258484610ec6565b61054884604051806040016040528060018152602001603160f81b815250610f06565b61055184610f47565b610559610f6e565b6001915080156105a3576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5092915050565b6105b2610c53565b6105bc6000610f9a565b565b6105c98233836109b3565b6104418282610d6e565b6001600160a01b038116600090815260fd6020526040812054610386565b6060606980546102ef90611550565b6000338161060e82866107ed565b90508381101561066e5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b606482015260840161042e565b6103a5828686840361088e565b600033610380818585610a2d565b834211156106d95760405162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e65000000604482015260640161042e565b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98888886107088c610fec565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e001604051602081830303815290604052805190602001209050600061076382611014565b9050600061077382878787611062565b9050896001600160a01b0316816001600160a01b0316146107d65760405162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e61747572650000604482015260640161042e565b6107e18a8a8a61088e565b50505050505050505050565b6001600160a01b03918216600090815260666020908152604080832093909416825291909152205490565b610820610c53565b6001600160a01b0381166108855760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161042e565b61044f81610f9a565b6001600160a01b0383166108f05760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161042e565b6001600160a01b0382166109515760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161042e565b6001600160a01b0383811660008181526066602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b60006109bf84846107ed565b90506000198114610a275781811015610a1a5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161042e565b610a27848484840361088e565b50505050565b6001600160a01b038316610a915760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161042e565b6001600160a01b038216610af35760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161042e565b6001600160a01b03831660009081526065602052604090205481811015610b6b5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161042e565b6001600160a01b0380851660008181526065602052604080822086860390559286168082529083902080548601905591517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610bcb9086815260200190565b60405180910390a3610a27565b60006103ba7f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f610c0760c95490565b60ca546040805160208101859052908101839052606081018290524660808201523060a082015260009060c0016040516020818303038152906040528051906020012090509392505050565b6033546001600160a01b031633146105bc5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161042e565b6001600160a01b038216610d035760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161042e565b8060676000828254610d159190611584565b90915550506001600160a01b0382166000818152606560209081526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b6001600160a01b038216610dce5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b606482015260840161042e565b6001600160a01b03821660009081526065602052604090205481811015610e425760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b606482015260840161042e565b6001600160a01b03831660008181526065602090815260408083208686039055606780548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91016109a6565b505050565b600054610100900460ff166105bc5760405162461bcd60e51b815260040161042e906115a5565b600054610100900460ff16610eed5760405162461bcd60e51b815260040161042e906115a5565b6068610ef9838261163e565b506069610e9a828261163e565b600054610100900460ff16610f2d5760405162461bcd60e51b815260040161042e906115a5565b81516020928301208151919092012060c99190915560ca55565b600054610100900460ff1661044f5760405162461bcd60e51b815260040161042e906115a5565b600054610100900460ff16610f955760405162461bcd60e51b815260040161042e906115a5565b6105bc335b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038116600090815260fd602052604090208054600181018255905b50919050565b6000610386611021610bd8565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b60008060006110738787878761108a565b915091506110808161114e565b5095945050505050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311156110c15750600090506003611145565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015611115573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811661113e57600060019250925050611145565b9150600090505b94509492505050565b6000816004811115611162576111626116fe565b0361116a5750565b600181600481111561117e5761117e6116fe565b036111cb5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e61747572650000000000000000604482015260640161042e565b60028160048111156111df576111df6116fe565b0361122c5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604482015260640161042e565b6003816004811115611240576112406116fe565b0361044f5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b606482015260840161042e565b600060208083528351808285015260005b818110156112c5578581018301518582016040015282016112a9565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146112fd57600080fd5b919050565b6000806040838503121561131557600080fd5b61131e836112e6565b946020939093013593505050565b60008060006060848603121561134157600080fd5b61134a846112e6565b9250611358602085016112e6565b9150604084013590509250925092565b60006020828403121561137a57600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126113a857600080fd5b813567ffffffffffffffff808211156113c3576113c3611381565b604051601f8301601f19908116603f011681019082821181831017156113eb576113eb611381565b8160405283815286602085880101111561140457600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806040838503121561143757600080fd5b823567ffffffffffffffff8082111561144f57600080fd5b61145b86838701611397565b9350602085013591508082111561147157600080fd5b5061147e85828601611397565b9150509250929050565b60006020828403121561149a57600080fd5b6114a3826112e6565b9392505050565b600080600080600080600060e0888a0312156114c557600080fd5b6114ce886112e6565b96506114dc602089016112e6565b95506040880135945060608801359350608088013560ff8116811461150057600080fd5b9699959850939692959460a0840135945060c09093013592915050565b6000806040838503121561153057600080fd5b611539836112e6565b9150611547602084016112e6565b90509250929050565b600181811c9082168061156457607f821691505b60208210810361100e57634e487b7160e01b600052602260045260246000fd5b8082018082111561038657634e487b7160e01b600052601160045260246000fd5b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b601f821115610e9a57600081815260208120601f850160051c810160208610156116175750805b601f850160051c820191505b8181101561163657828155600101611623565b505050505050565b815167ffffffffffffffff81111561165857611658611381565b61166c816116668454611550565b846115f0565b602080601f8311600181146116a157600084156116895750858301515b600019600386901b1c1916600185901b178555611636565b600085815260208120601f198616915b828110156116d0578886015182559484019460019091019084016116b1565b50858210156116ee5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052602160045260246000fdfea26469706673582212201cd5263f664bf735e99a86dfabd64b395a89683dcd8b7158b7768e848ce8cba364736f6c63430008130033",
    "sourceMap": "410:1194:35:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2491:98:15;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4768:197;;;;;;:::i;:::-;;:::i;:::-;;;1169:14:41;;1162:22;1144:41;;1132:2;1117:18;4768:197:15;1004:187:41;3579:106:15;3666:12;;3579:106;;;1342:25:41;;;1330:2;1315:18;3579:106:15;1196:177:41;5527:286:15;;;;;;:::i;:::-;;:::i;3428:91::-;;;3510:2;1853:36:41;;1841:2;1826:18;3428:91:15;1711:184:41;3276:113:19;;;:::i;6208:234:15:-;;;;;;:::i;:::-;;:::i;1433:168:35:-;;;;;;:::i;:::-;;:::i;:::-;;848:89:17;;;;;;:::i;:::-;;:::i;832:339:35:-;;;;;;:::i;:::-;;:::i;3743:125:15:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3843:18:15;3817:7;3843:18;;;:9;:18;;;;;;;3743:125;2071:101:12;;;:::i;1243:161:17:-;;;;;;:::i;:::-;;:::i;3026:126:19:-;;;;;;:::i;:::-;;:::i;1441:85:12:-;1513:6;;1441:85;;-1:-1:-1;;;;;1513:6:12;;;4008:51:41;;3996:2;3981:18;1441:85:12;3862:203:41;2702:102:15;;;:::i;6929:427::-;;;;;;:::i;:::-;;:::i;4064:189::-;;;;;;:::i;:::-;;:::i;2328:637:19:-;;;;;;:::i;:::-;;:::i;4311:149:15:-;;;;;;:::i;:::-;;:::i;2321:198:12:-;;;;;;:::i;:::-;;:::i;2491:98:15:-;2545:13;2577:5;2570:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2491:98;:::o;4768:197::-;4851:4;929:10:22;4905:32:15;929:10:22;4921:7:15;4930:6;4905:8;:32::i;:::-;4954:4;4947:11;;;4768:197;;;;;:::o;5527:286::-;5654:4;929:10:22;5710:38:15;5726:4;929:10:22;5741:6:15;5710:15;:38::i;:::-;5758:27;5768:4;5774:2;5778:6;5758:9;:27::i;:::-;-1:-1:-1;5802:4:15;;5527:286;-1:-1:-1;;;;5527:286:15:o;3276:113:19:-;3336:7;3362:20;:18;:20::i;:::-;3355:27;;3276:113;:::o;6208:234:15:-;6296:4;929:10:22;6350:64:15;929:10:22;6366:7:15;6403:10;6375:25;929:10:22;6366:7:15;6375:9;:25::i;:::-;:38;;;;:::i;:::-;6350:8;:64::i;1433:168:35:-;1334:13:12;:11;:13::i;:::-;1520:6:35::1;1530:1;1520:11:::0;1512:46:::1;;;::::0;-1:-1:-1;;;1512:46:35;;5847:2:41;1512:46:35::1;::::0;::::1;5829:21:41::0;5886:2;5866:18;;;5859:30;-1:-1:-1;;;5905:18:41;;;5898:52;5967:18;;1512:46:35::1;;;;;;;;;1569:24;1575:9;1586:6;1569:5;:24::i;:::-;1433:168:::0;;:::o;848:89:17:-;903:27;929:10:22;923:6:17;903:5;:27::i;:::-;848:89;:::o;832:339:35:-;924:4;3291:13:13;;;;;;;3290:14;;3336:34;;;;-1:-1:-1;3354:12:13;;3369:1;3354:12;;;;:16;3336:34;3335:108;;;-1:-1:-1;3415:4:13;1476:19:21;:23;;;3376:66:13;;-1:-1:-1;3425:12:13;;;;;:17;3376:66;3314:201;;;;-1:-1:-1;;;3314:201:13;;6198:2:41;3314:201:13;;;6180:21:41;6237:2;6217:18;;;6210:30;6276:34;6256:18;;;6249:62;-1:-1:-1;;;6327:18:41;;;6320:44;6381:19;;3314:201:13;5996:410:41;3314:201:13;3525:12;:16;;-1:-1:-1;;3525:16:13;3540:1;3525:16;;;3551:65;;;;3585:13;:20;;-1:-1:-1;;3585:20:13;;;;;3551:65;941:26:35::1;:24;:26::i;:::-;978:36;1001:4;1007:6;978:22;:36::i;:::-;1025:34;1049:4;1025:34;;;;;;;;;;;;;-1:-1:-1::0;;;1025:34:35::1;;::::0;:23:::1;:34::i;:::-;1070;1099:4;1070:28;:34::i;:::-;1115:26;:24;:26::i;:::-;1159:4;1152:11;;3640:14:13::0;3636:99;;;3686:5;3670:21;;-1:-1:-1;;3670:21:13;;;3710:14;;-1:-1:-1;1853:36:41;;3710:14:13;;1841:2:41;1826:18;3710:14:13;;;;;;;3636:99;3258:483;832:339:35;;;;:::o;2071:101:12:-;1334:13;:11;:13::i;:::-;2135:30:::1;2162:1;2135:18;:30::i;:::-;2071:101::o:0;1243:161:17:-;1319:46;1335:7;929:10:22;1358:6:17;1319:15;:46::i;:::-;1375:22;1381:7;1390:6;1375:5;:22::i;3026:126:19:-;-1:-1:-1;;;;;3121:14:19;;3095:7;3121:14;;;:7;:14;;;;;929::23;3121:24:19;838:112:23;2702:102:15;2758:13;2790:7;2783:14;;;;;:::i;6929:427::-;7022:4;929:10:22;7022:4:15;7103:25;929:10:22;7120:7:15;7103:9;:25::i;:::-;7076:52;;7166:15;7146:16;:35;;7138:85;;;;-1:-1:-1;;;7138:85:15;;6812:2:41;7138:85:15;;;6794:21:41;6851:2;6831:18;;;6824:30;6890:34;6870:18;;;6863:62;-1:-1:-1;;;6941:18:41;;;6934:35;6986:19;;7138:85:15;6610:401:41;7138:85:15;7257:60;7266:5;7273:7;7301:15;7282:16;:34;7257:8;:60::i;4064:189::-;4143:4;929:10:22;4197:28:15;929:10:22;4214:2:15;4218:6;4197:9;:28::i;2328:637:19:-;2563:8;2544:15;:27;;2536:69;;;;-1:-1:-1;;;2536:69:19;;7218:2:41;2536:69:19;;;7200:21:41;7257:2;7237:18;;;7230:30;7296:31;7276:18;;;7269:59;7345:18;;2536:69:19;7016:353:41;2536:69:19;2616:18;1363:95;2676:5;2683:7;2692:5;2699:16;2709:5;2699:9;:16::i;:::-;2647:79;;;;;;7661:25:41;;;;-1:-1:-1;;;;;7760:15:41;;;7740:18;;;7733:43;7812:15;;;;7792:18;;;7785:43;7844:18;;;7837:34;7887:19;;;7880:35;7931:19;;;7924:35;;;7633:19;;2647:79:19;;;;;;;;;;;;2637:90;;;;;;2616:111;;2738:12;2753:28;2770:10;2753:16;:28::i;:::-;2738:43;;2792:14;2809:39;2834:4;2840:1;2843;2846;2809:24;:39::i;:::-;2792:56;;2876:5;-1:-1:-1;;;;;2866:15:19;:6;-1:-1:-1;;;;;2866:15:19;;2858:58;;;;-1:-1:-1;;;2858:58:19;;8172:2:41;2858:58:19;;;8154:21:41;8211:2;8191:18;;;8184:30;8250:32;8230:18;;;8223:60;8300:18;;2858:58:19;7970:354:41;2858:58:19;2927:31;2936:5;2943:7;2952:5;2927:8;:31::i;:::-;2526:439;;;2328:637;;;;;;;:::o;4311:149:15:-;-1:-1:-1;;;;;4426:18:15;;;4400:7;4426:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;4311:149::o;2321:198:12:-;1334:13;:11;:13::i;:::-;-1:-1:-1;;;;;2409:22:12;::::1;2401:73;;;::::0;-1:-1:-1;;;2401:73:12;;8531:2:41;2401:73:12::1;::::0;::::1;8513:21:41::0;8570:2;8550:18;;;8543:30;8609:34;8589:18;;;8582:62;-1:-1:-1;;;8660:18:41;;;8653:36;8706:19;;2401:73:12::1;8329:402:41::0;2401:73:12::1;2484:28;2503:8;2484:18;:28::i;10841:370:15:-:0;-1:-1:-1;;;;;10972:19:15;;10964:68;;;;-1:-1:-1;;;10964:68:15;;8938:2:41;10964:68:15;;;8920:21:41;8977:2;8957:18;;;8950:30;9016:34;8996:18;;;8989:62;-1:-1:-1;;;9067:18:41;;;9060:34;9111:19;;10964:68:15;8736:400:41;10964:68:15;-1:-1:-1;;;;;11050:21:15;;11042:68;;;;-1:-1:-1;;;11042:68:15;;9343:2:41;11042:68:15;;;9325:21:41;9382:2;9362:18;;;9355:30;9421:34;9401:18;;;9394:62;-1:-1:-1;;;9472:18:41;;;9465:32;9514:19;;11042:68:15;9141:398:41;11042:68:15;-1:-1:-1;;;;;11121:18:15;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;11172:32;;1342:25:41;;;11172:32:15;;1315:18:41;11172:32:15;;;;;;;;10841:370;;;:::o;11492:441::-;11622:24;11649:25;11659:5;11666:7;11649:9;:25::i;:::-;11622:52;;-1:-1:-1;;11688:16:15;:37;11684:243;;11769:6;11749:16;:26;;11741:68;;;;-1:-1:-1;;;11741:68:15;;9746:2:41;11741:68:15;;;9728:21:41;9785:2;9765:18;;;9758:30;9824:31;9804:18;;;9797:59;9873:18;;11741:68:15;9544:353:41;11741:68:15;11851:51;11860:5;11867:7;11895:6;11876:16;:25;11851:8;:51::i;:::-;11612:321;11492:441;;;:::o;7810:818::-;-1:-1:-1;;;;;7936:18:15;;7928:68;;;;-1:-1:-1;;;7928:68:15;;10104:2:41;7928:68:15;;;10086:21:41;10143:2;10123:18;;;10116:30;10182:34;10162:18;;;10155:62;-1:-1:-1;;;10233:18:41;;;10226:35;10278:19;;7928:68:15;9902:401:41;7928:68:15;-1:-1:-1;;;;;8014:16:15;;8006:64;;;;-1:-1:-1;;;8006:64:15;;10510:2:41;8006:64:15;;;10492:21:41;10549:2;10529:18;;;10522:30;10588:34;10568:18;;;10561:62;-1:-1:-1;;;10639:18:41;;;10632:33;10682:19;;8006:64:15;10308:399:41;8006:64:15;-1:-1:-1;;;;;8152:15:15;;8130:19;8152:15;;;:9;:15;;;;;;8185:21;;;;8177:72;;;;-1:-1:-1;;;8177:72:15;;10914:2:41;8177:72:15;;;10896:21:41;10953:2;10933:18;;;10926:30;10992:34;10972:18;;;10965:62;-1:-1:-1;;;11043:18:41;;;11036:36;11089:19;;8177:72:15;10712:402:41;8177:72:15;-1:-1:-1;;;;;8283:15:15;;;;;;;:9;:15;;;;;;8301:20;;;8283:38;;8498:13;;;;;;;;;;:23;;;;;;8547:26;;;;;;8315:6;1342:25:41;;1330:2;1315:18;;1196:177;8547:26:15;;;;;;;;8584:37;9759:659;2851:160:26;2904:7;2930:74;1604:95;2964:17;4395:12;;;4311:103;2964:17;4740:15;;3193:73;;;;;;15520:25:41;;;15561:18;;;15554:34;;;15604:18;;;15597:34;;;3237:13:26;15647:18:41;;;15640:34;3260:4:26;15690:19:41;;;15683:61;3157:7:26;;15492:19:41;;3193:73:26;;;;;;;;;;;;3183:84;;;;;;3176:91;;3017:257;;;;;;1599:130:12;1513:6;;-1:-1:-1;;;;;1513:6:12;929:10:22;1662:23:12;1654:68;;;;-1:-1:-1;;;1654:68:12;;11321:2:41;1654:68:12;;;11303:21:41;;;11340:18;;;11333:30;11399:34;11379:18;;;11372:62;11451:18;;1654:68:12;11119:356:41;8904:535:15;-1:-1:-1;;;;;8987:21:15;;8979:65;;;;-1:-1:-1;;;8979:65:15;;11682:2:41;8979:65:15;;;11664:21:41;11721:2;11701:18;;;11694:30;11760:33;11740:18;;;11733:61;11811:18;;8979:65:15;11480:355:41;8979:65:15;9131:6;9115:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;9283:18:15;;;;;;:9;:18;;;;;;;;:28;;;;;;9336:37;1342:25:41;;;9336:37:15;;1315:18:41;9336:37:15;;;;;;;1433:168:35;;:::o;9759:659:15:-;-1:-1:-1;;;;;9842:21:15;;9834:67;;;;-1:-1:-1;;;9834:67:15;;12042:2:41;9834:67:15;;;12024:21:41;12081:2;12061:18;;;12054:30;12120:34;12100:18;;;12093:62;-1:-1:-1;;;12171:18:41;;;12164:31;12212:19;;9834:67:15;11840:397:41;9834:67:15;-1:-1:-1;;;;;9997:18:15;;9972:22;9997:18;;;:9;:18;;;;;;10033:24;;;;10025:71;;;;-1:-1:-1;;;10025:71:15;;12444:2:41;10025:71:15;;;12426:21:41;12483:2;12463:18;;;12456:30;12522:34;12502:18;;;12495:62;-1:-1:-1;;;12573:18:41;;;12566:32;12615:19;;10025:71:15;12242:398:41;10025:71:15;-1:-1:-1;;;;;10130:18:15;;;;;;:9;:18;;;;;;;;10151:23;;;10130:44;;10267:12;:22;;;;;;;10315:37;1342:25:41;;;10130:18:15;;;10315:37;;1315:18:41;10315:37:15;1196:177:41;10363:48:15;9824:594;9759:659;;:::o;776:69:22:-;5363:13:13;;;;;;;5355:69;;;;-1:-1:-1;;;5355:69:13;;;;;;;:::i;2267:159:15:-;5363:13:13;;;;;;;5355:69;;;;-1:-1:-1;;;5355:69:13;;;;;;;:::i;:::-;2379:5:15::1;:13;2387:5:::0;2379;:13:::1;:::i;:::-;-1:-1:-1::0;2402:7:15::1;:17;2412:7:::0;2402;:17:::1;:::i;2468:297:26:-:0;5363:13:13;;;;;;;5355:69;;;;-1:-1:-1;;;5355:69:13;;;;;;;:::i;:::-;2601:22:26;;::::1;::::0;;::::1;::::0;2657:25;;;;;::::1;::::0;2692:12:::1;:25:::0;;;;2727:15:::1;:31:::0;2468:297::o;2186:81:19:-;5363:13:13;;;;;;;5355:69;;;;-1:-1:-1;;;5355:69:13;;;;;;;:::i;1104:111:12:-;5363:13:13;;;;;;;5355:69;;;;-1:-1:-1;;;5355:69:13;;;;;;;:::i;:::-;1176:32:12::1;929:10:22::0;1195:12:12::1;2765:6:::0;;;-1:-1:-1;;;;;2781:17:12;;;-1:-1:-1;;;;;;2781:17:12;;;;;;;2813:40;;2765:6;;;2781:17;2765:6;;2813:40;;2746:16;;2813:40;2736:124;2673:187;:::o;3520:214:19:-;-1:-1:-1;;;;;3651:14:19;;3580:15;3651:14;;;:7;:14;;;;;929::23;;1061:1;1043:19;;;;929:14;3710:17:19;3597:137;3520:214;;;:::o;3899:176:26:-;3976:7;4002:66;4035:20;:18;:20::i;:::-;4057:10;8503:57:25;;-1:-1:-1;;;8503:57:25;;;16013:27:41;16056:11;;;16049:27;;;16092:12;;;16085:28;;;8467:7:25;;16129:12:41;;8503:57:25;;;;;;;;;;;;8493:68;;;;;;8486:75;;8374:194;;;;;6718:270;6841:7;6861:17;6880:18;6902:25;6913:4;6919:1;6922;6925;6902:10;:25::i;:::-;6860:67;;;;6937:18;6949:5;6937:11;:18::i;:::-;-1:-1:-1;6972:9:25;6718:270;-1:-1:-1;;;;;6718:270:25:o;5091:1494::-;5217:7;;6141:66;6128:79;;6124:161;;;-1:-1:-1;6239:1:25;;-1:-1:-1;6243:30:25;6223:51;;6124:161;6396:24;;;6379:14;6396:24;;;;;;;;;16379:25:41;;;16452:4;16440:17;;16420:18;;;16413:45;;;;16474:18;;;16467:34;;;16517:18;;;16510:34;;;6396:24:25;;16351:19:41;;6396:24:25;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6396:24:25;;-1:-1:-1;;6396:24:25;;;-1:-1:-1;;;;;;;6434:20:25;;6430:101;;6486:1;6490:29;6470:50;;;;;;;6430:101;6549:6;-1:-1:-1;6557:20:25;;-1:-1:-1;5091:1494:25;;;;;;;;:::o;592:511::-;669:20;660:5;:29;;;;;;;;:::i;:::-;;656:441;;592:511;:::o;656:441::-;765:29;756:5;:38;;;;;;;;:::i;:::-;;752:345;;810:34;;-1:-1:-1;;;810:34:25;;16889:2:41;810:34:25;;;16871:21:41;16928:2;16908:18;;;16901:30;16967:26;16947:18;;;16940:54;17011:18;;810:34:25;16687:348:41;752:345:25;874:35;865:5;:44;;;;;;;;:::i;:::-;;861:236;;925:41;;-1:-1:-1;;;925:41:25;;17242:2:41;925:41:25;;;17224:21:41;17281:2;17261:18;;;17254:30;17320:33;17300:18;;;17293:61;17371:18;;925:41:25;17040:355:41;861:236:25;996:30;987:5;:39;;;;;;;;:::i;:::-;;983:114;;1042:44;;-1:-1:-1;;;1042:44:25;;17602:2:41;1042:44:25;;;17584:21:41;17641:2;17621:18;;;17614:30;17680:34;17660:18;;;17653:62;-1:-1:-1;;;17731:18:41;;;17724:32;17773:19;;1042:44:25;17400:398:41;14:548;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;553:2;546;542:7;537:2;529:6;525:15;521:29;510:9;506:45;502:54;494:62;;;;14:548;;;;:::o;567:173::-;635:20;;-1:-1:-1;;;;;684:31:41;;674:42;;664:70;;730:1;727;720:12;664:70;567:173;;;:::o;745:254::-;813:6;821;874:2;862:9;853:7;849:23;845:32;842:52;;;890:1;887;880:12;842:52;913:29;932:9;913:29;:::i;:::-;903:39;989:2;974:18;;;;961:32;;-1:-1:-1;;;745:254:41:o;1378:328::-;1455:6;1463;1471;1524:2;1512:9;1503:7;1499:23;1495:32;1492:52;;;1540:1;1537;1530:12;1492:52;1563:29;1582:9;1563:29;:::i;:::-;1553:39;;1611:38;1645:2;1634:9;1630:18;1611:38;:::i;:::-;1601:48;;1696:2;1685:9;1681:18;1668:32;1658:42;;1378:328;;;;;:::o;2082:180::-;2141:6;2194:2;2182:9;2173:7;2169:23;2165:32;2162:52;;;2210:1;2207;2200:12;2162:52;-1:-1:-1;2233:23:41;;2082:180;-1:-1:-1;2082:180:41:o;2267:127::-;2328:10;2323:3;2319:20;2316:1;2309:31;2359:4;2356:1;2349:15;2383:4;2380:1;2373:15;2399:719;2442:5;2495:3;2488:4;2480:6;2476:17;2472:27;2462:55;;2513:1;2510;2503:12;2462:55;2549:6;2536:20;2575:18;2612:2;2608;2605:10;2602:36;;;2618:18;;:::i;:::-;2693:2;2687:9;2661:2;2747:13;;-1:-1:-1;;2743:22:41;;;2767:2;2739:31;2735:40;2723:53;;;2791:18;;;2811:22;;;2788:46;2785:72;;;2837:18;;:::i;:::-;2877:10;2873:2;2866:22;2912:2;2904:6;2897:18;2958:3;2951:4;2946:2;2938:6;2934:15;2930:26;2927:35;2924:55;;;2975:1;2972;2965:12;2924:55;3039:2;3032:4;3024:6;3020:17;3013:4;3005:6;3001:17;2988:54;3086:1;3079:4;3074:2;3066:6;3062:15;3058:26;3051:37;3106:6;3097:15;;;;;;2399:719;;;;:::o;3123:543::-;3211:6;3219;3272:2;3260:9;3251:7;3247:23;3243:32;3240:52;;;3288:1;3285;3278:12;3240:52;3328:9;3315:23;3357:18;3398:2;3390:6;3387:14;3384:34;;;3414:1;3411;3404:12;3384:34;3437:50;3479:7;3470:6;3459:9;3455:22;3437:50;:::i;:::-;3427:60;;3540:2;3529:9;3525:18;3512:32;3496:48;;3569:2;3559:8;3556:16;3553:36;;;3585:1;3582;3575:12;3553:36;;3608:52;3652:7;3641:8;3630:9;3626:24;3608:52;:::i;:::-;3598:62;;;3123:543;;;;;:::o;3671:186::-;3730:6;3783:2;3771:9;3762:7;3758:23;3754:32;3751:52;;;3799:1;3796;3789:12;3751:52;3822:29;3841:9;3822:29;:::i;:::-;3812:39;3671:186;-1:-1:-1;;;3671:186:41:o;4070:693::-;4181:6;4189;4197;4205;4213;4221;4229;4282:3;4270:9;4261:7;4257:23;4253:33;4250:53;;;4299:1;4296;4289:12;4250:53;4322:29;4341:9;4322:29;:::i;:::-;4312:39;;4370:38;4404:2;4393:9;4389:18;4370:38;:::i;:::-;4360:48;;4455:2;4444:9;4440:18;4427:32;4417:42;;4506:2;4495:9;4491:18;4478:32;4468:42;;4560:3;4549:9;4545:19;4532:33;4605:4;4598:5;4594:16;4587:5;4584:27;4574:55;;4625:1;4622;4615:12;4574:55;4070:693;;;;-1:-1:-1;4070:693:41;;;;4648:5;4700:3;4685:19;;4672:33;;-1:-1:-1;4752:3:41;4737:19;;;4724:33;;4070:693;-1:-1:-1;;4070:693:41:o;4768:260::-;4836:6;4844;4897:2;4885:9;4876:7;4872:23;4868:32;4865:52;;;4913:1;4910;4903:12;4865:52;4936:29;4955:9;4936:29;:::i;:::-;4926:39;;4984:38;5018:2;5007:9;5003:18;4984:38;:::i;:::-;4974:48;;4768:260;;;;;:::o;5033:380::-;5112:1;5108:12;;;;5155;;;5176:61;;5230:4;5222:6;5218:17;5208:27;;5176:61;5283:2;5275:6;5272:14;5252:18;5249:38;5246:161;;5329:10;5324:3;5320:20;5317:1;5310:31;5364:4;5361:1;5354:15;5392:4;5389:1;5382:15;5418:222;5483:9;;;5504:10;;;5501:133;;;5556:10;5551:3;5547:20;5544:1;5537:31;5591:4;5588:1;5581:15;5619:4;5616:1;5609:15;12645:407;12847:2;12829:21;;;12886:2;12866:18;;;12859:30;12925:34;12920:2;12905:18;;12898:62;-1:-1:-1;;;12991:2:41;12976:18;;12969:41;13042:3;13027:19;;12645:407::o;13183:545::-;13285:2;13280:3;13277:11;13274:448;;;13321:1;13346:5;13342:2;13335:17;13391:4;13387:2;13377:19;13461:2;13449:10;13445:19;13442:1;13438:27;13432:4;13428:38;13497:4;13485:10;13482:20;13479:47;;;-1:-1:-1;13520:4:41;13479:47;13575:2;13570:3;13566:12;13563:1;13559:20;13553:4;13549:31;13539:41;;13630:82;13648:2;13641:5;13638:13;13630:82;;;13693:17;;;13674:1;13663:13;13630:82;;;13634:3;;;13183:545;;;:::o;13904:1352::-;14030:3;14024:10;14057:18;14049:6;14046:30;14043:56;;;14079:18;;:::i;:::-;14108:97;14198:6;14158:38;14190:4;14184:11;14158:38;:::i;:::-;14152:4;14108:97;:::i;:::-;14260:4;;14324:2;14313:14;;14341:1;14336:663;;;;15043:1;15060:6;15057:89;;;-1:-1:-1;15112:19:41;;;15106:26;15057:89;-1:-1:-1;;13861:1:41;13857:11;;;13853:24;13849:29;13839:40;13885:1;13881:11;;;13836:57;15159:81;;14306:944;;14336:663;13130:1;13123:14;;;13167:4;13154:18;;-1:-1:-1;;14372:20:41;;;14490:236;14504:7;14501:1;14498:14;14490:236;;;14593:19;;;14587:26;14572:42;;14685:27;;;;14653:1;14641:14;;;;14520:19;;14490:236;;;14494:3;14754:6;14745:7;14742:19;14739:201;;;14815:19;;;14809:26;-1:-1:-1;;14898:1:41;14894:14;;;14910:3;14890:24;14886:37;14882:42;14867:58;14852:74;;14739:201;-1:-1:-1;;;;;14986:1:41;14970:14;;;14966:22;14953:36;;-1:-1:-1;13904:1352:41:o;16555:127::-;16616:10;16611:3;16607:20;16604:1;16597:31;16647:4;16644:1;16637:15;16671:4;16668:1;16661:15",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "DOMAIN_SEPARATOR()": "3644e515",
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "burn(uint256)": "42966c68",
    "burnFrom(address,uint256)": "79cc6790",
    "decimals()": "313ce567",
    "decreaseAllowance(address,uint256)": "a457c2d7",
    "increaseAllowance(address,uint256)": "39509351",
    "initialize(string,string)": "4cd88b76",
    "mint(address,uint256)": "40c10f19",
    "name()": "06fdde03",
    "nonces(address)": "7ecebe00",
    "owner()": "8da5cb5b",
    "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
    "renounceOwnership()": "715018a6",
    "symbol()": "95d89b41",
    "totalSupply()": "18160ddd",
    "transfer(address,uint256)": "a9059cbb",
    "transferFrom(address,address,uint256)": "23b872dd",
    "transferOwnership(address)": "f2fde38b"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"name\":\"initialize\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"See {IERC20Permit-DOMAIN_SEPARATOR}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys `amount` tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"initialize(string,string)\":{\"details\":\"The caller of this function will become the owner. A Swap contract should call this in its initializer function.\",\"params\":{\"name\":\"name of this token\",\"symbol\":\"symbol of this token\"}},\"mint(address,uint256)\":{\"details\":\"only owner can call this mint function.\",\"params\":{\"amount\":\"amount of tokens to mint\",\"recipient\":\"address of account to receive the tokens\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"See {IERC20Permit-nonces}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"See {IERC20Permit-permit}.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"initialize(string,string)\":{\"notice\":\"Initializes this LPToken contract with the given name and symbol\"},\"mint(address,uint256)\":{\"notice\":\"Mints the given amount of LPToken to the recipient.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/tenderswap/LiquidityPoolToken.sol\":\"LiquidityPoolToken\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a\",\"dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x037c334add4b033ad3493038c25be1682d78c00992e1acb0e2795caff3925271\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8a313cf42389440e2706837c91370323b85971c06afd6d056d21e2bc86459618\",\"dweb:/ipfs/QmT8XUrUvQ9aZaPKrqgRU2JVGWnaxBcUYJA7Q7K5KcLBSZ\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0xb1d9e69cf8073efa574b31b1f840e20709139c19bfb27e60b16393d6073f3d42\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7c39b800e55781c0f7a644ec9cc615664dbe2f009198e537e6acaad3086ba093\",\"dweb:/ipfs/Qmaugq2wsB1ASX8Kv29NwXqYhZY8HRNqcdvmBe9UUNEq2V\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75b47c3aeca7b66ea6752f8be020ec5c1c502de6ec9065272dae23d3a52196e2\",\"dweb:/ipfs/QmUebPMHv16tYKFh5BmBQkMfRFb5b8UZ2RgVwdjxCeufVF\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":{\"keccak256\":\"0xea2c6f9d434127bf36b1e3e5ebaaf6d28a64dbaeea560508e570014e905a5ad2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3483370aa549810a946ace621a225616bb6d0b9ed22c3a99bbcf80dc4866ec39\",\"dweb:/ipfs/QmdgFnm6X2oQ574eJFLghVXVckwyC3SbiAUxXs934N1qvf\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"keccak256\":\"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d\",\"dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol\":{\"keccak256\":\"0xfe1053f3a6ee4527cde96c8152b8b1dbb98774639a64e819087bc80e618d7f7f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d60039d30fc910757604a2bd75969e47f64833981e66de1f5843a671167f386b\",\"dweb:/ipfs/QmU9d5yDZQpb572GxN1L7EPocjyLjrWksoE8AFb1SEVSUb\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/draft-IERC20PermitUpgradeable.sol\":{\"keccak256\":\"0xcc70d8e2281fb3ff69e8ab242500f10142cd0a7fa8dd9e45882be270d4d09024\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17a4063bc918df0f7bb9cbf04c6f0bb4977afab3f2fc212bc138a178312a221d\",\"dweb:/ipfs/QmZMdvsHP5mDEAAdrK4bNeNh47TfmSFgN9qEBFTbie7zmm\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06\",\"dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/CountersUpgradeable.sol\":{\"keccak256\":\"0x798741e231b22b81e2dd2eddaaf8832dee4baf5cd8e2dbaa5c1dd12a1c053c4d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c41e8a7a906b8f362c8b760a44edadc61782008ea2ecf377ac5b5325bf6c3912\",\"dweb:/ipfs/QmcXr19zuH3YLzD6RZNE6UTzvsKSckdxZQnagPoDGkCHu2\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0x6b9a5d35b744b25529a2856a8093e7c03fb35a34b1c4fb5499e560f8ade140da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://187b5c3a1c9e77678732a2cc5284237f9cfca6bc28ee8bc0a0f4f951d7b3a2f8\",\"dweb:/ipfs/Qmb2KFr7WuQu7btdCiftQG64vTzrG4UyzVmo53EYHcnHYA\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/ECDSAUpgradeable.sol\":{\"keccak256\":\"0x12f297cafe6e2847ae0378502f155654d0764b532a9873c8afe4350950fa7971\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://28074f6df7132e83819042a06ef75ae53c88c53c077b8222b9772b780d58bd58\",\"dweb:/ipfs/QmXXwSxWn4XGCy218fn3f2m3UmFNUiroeQ8sCR3vzNU6Wc\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/EIP712Upgradeable.sol\":{\"keccak256\":\"0x3017aded62c4a2b9707f5f06f92934e592c1c9b6f384b91b51340a6d5f841931\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb693afc2a614ec7afee965caaf5d53c3f32644e33286f60d17ae0e9aca84d44\",\"dweb:/ipfs/QmVJy43EBWvVT5NgpsV8WJfDHtZbnqZGMhmv1WbWaV5dJV\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0xc1bd5b53319c68f84e3becd75694d941e8f4be94049903232cd8bc7c535aaa5a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://056027a78e6f4b78a39be530983551651ee5a052e786ca2c1c6a3bb1222b03b4\",\"dweb:/ipfs/QmXRUpywAqNwAfXS89vrtiE2THRM9dX9pQ4QxAkV1Wx9kt\"]},\"src/tenderswap/LiquidityPoolToken.sol\":{\"keccak256\":\"0xe3a13689f1edd25f26d28b18ea65512344a4dd3ac0e71c59d6ac2a93ee1c2b1a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5680de49d1616e7681eab73e23a7917bd9427ff2e103f2ef311a8ca82dd68909\",\"dweb:/ipfs/QmSrvimPs5eLr14wqP4i5hxs6FN9ZNEeaHnQ9m3FBrSyde\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DOMAIN_SEPARATOR",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burn"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burnFrom"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "subtractedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "decreaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "addedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "increaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "symbol",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mint"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "nonces",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "permit"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "DOMAIN_SEPARATOR()": {
            "details": "See {IERC20Permit-DOMAIN_SEPARATOR}."
          },
          "allowance(address,address)": {
            "details": "See {IERC20-allowance}."
          },
          "approve(address,uint256)": {
            "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
          },
          "balanceOf(address)": {
            "details": "See {IERC20-balanceOf}."
          },
          "burn(uint256)": {
            "details": "Destroys `amount` tokens from the caller. See {ERC20-_burn}."
          },
          "burnFrom(address,uint256)": {
            "details": "Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`."
          },
          "decimals()": {
            "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
          },
          "decreaseAllowance(address,uint256)": {
            "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
          },
          "increaseAllowance(address,uint256)": {
            "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
          },
          "initialize(string,string)": {
            "details": "The caller of this function will become the owner. A Swap contract should call this in its initializer function.",
            "params": {
              "name": "name of this token",
              "symbol": "symbol of this token"
            }
          },
          "mint(address,uint256)": {
            "details": "only owner can call this mint function.",
            "params": {
              "amount": "amount of tokens to mint",
              "recipient": "address of account to receive the tokens"
            }
          },
          "name()": {
            "details": "Returns the name of the token."
          },
          "nonces(address)": {
            "details": "See {IERC20Permit-nonces}."
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
            "details": "See {IERC20Permit-permit}."
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
          },
          "symbol()": {
            "details": "Returns the symbol of the token, usually a shorter version of the name."
          },
          "totalSupply()": {
            "details": "See {IERC20-totalSupply}."
          },
          "transfer(address,uint256)": {
            "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "initialize(string,string)": {
            "notice": "Initializes this LPToken contract with the given name and symbol"
          },
          "mint(address,uint256)": {
            "notice": "Mints the given amount of LPToken to the recipient."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        ":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/tenderswap/LiquidityPoolToken.sol": "LiquidityPoolToken"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol": {
        "keccak256": "0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888",
        "urls": [
          "bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a",
          "dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x037c334add4b033ad3493038c25be1682d78c00992e1acb0e2795caff3925271",
        "urls": [
          "bzz-raw://8a313cf42389440e2706837c91370323b85971c06afd6d056d21e2bc86459618",
          "dweb:/ipfs/QmT8XUrUvQ9aZaPKrqgRU2JVGWnaxBcUYJA7Q7K5KcLBSZ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol": {
        "keccak256": "0xb1d9e69cf8073efa574b31b1f840e20709139c19bfb27e60b16393d6073f3d42",
        "urls": [
          "bzz-raw://7c39b800e55781c0f7a644ec9cc615664dbe2f009198e537e6acaad3086ba093",
          "dweb:/ipfs/Qmaugq2wsB1ASX8Kv29NwXqYhZY8HRNqcdvmBe9UUNEq2V"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/IERC20Upgradeable.sol": {
        "keccak256": "0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff",
        "urls": [
          "bzz-raw://75b47c3aeca7b66ea6752f8be020ec5c1c502de6ec9065272dae23d3a52196e2",
          "dweb:/ipfs/QmUebPMHv16tYKFh5BmBQkMfRFb5b8UZ2RgVwdjxCeufVF"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/ERC20BurnableUpgradeable.sol": {
        "keccak256": "0xea2c6f9d434127bf36b1e3e5ebaaf6d28a64dbaeea560508e570014e905a5ad2",
        "urls": [
          "bzz-raw://3483370aa549810a946ace621a225616bb6d0b9ed22c3a99bbcf80dc4866ec39",
          "dweb:/ipfs/QmdgFnm6X2oQ574eJFLghVXVckwyC3SbiAUxXs934N1qvf"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/IERC20MetadataUpgradeable.sol": {
        "keccak256": "0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb",
        "urls": [
          "bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d",
          "dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol": {
        "keccak256": "0xfe1053f3a6ee4527cde96c8152b8b1dbb98774639a64e819087bc80e618d7f7f",
        "urls": [
          "bzz-raw://d60039d30fc910757604a2bd75969e47f64833981e66de1f5843a671167f386b",
          "dweb:/ipfs/QmU9d5yDZQpb572GxN1L7EPocjyLjrWksoE8AFb1SEVSUb"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/draft-IERC20PermitUpgradeable.sol": {
        "keccak256": "0xcc70d8e2281fb3ff69e8ab242500f10142cd0a7fa8dd9e45882be270d4d09024",
        "urls": [
          "bzz-raw://17a4063bc918df0f7bb9cbf04c6f0bb4977afab3f2fc212bc138a178312a221d",
          "dweb:/ipfs/QmZMdvsHP5mDEAAdrK4bNeNh47TfmSFgN9qEBFTbie7zmm"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183",
        "urls": [
          "bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06",
          "dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/CountersUpgradeable.sol": {
        "keccak256": "0x798741e231b22b81e2dd2eddaaf8832dee4baf5cd8e2dbaa5c1dd12a1c053c4d",
        "urls": [
          "bzz-raw://c41e8a7a906b8f362c8b760a44edadc61782008ea2ecf377ac5b5325bf6c3912",
          "dweb:/ipfs/QmcXr19zuH3YLzD6RZNE6UTzvsKSckdxZQnagPoDGkCHu2"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/StringsUpgradeable.sol": {
        "keccak256": "0x6b9a5d35b744b25529a2856a8093e7c03fb35a34b1c4fb5499e560f8ade140da",
        "urls": [
          "bzz-raw://187b5c3a1c9e77678732a2cc5284237f9cfca6bc28ee8bc0a0f4f951d7b3a2f8",
          "dweb:/ipfs/Qmb2KFr7WuQu7btdCiftQG64vTzrG4UyzVmo53EYHcnHYA"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/ECDSAUpgradeable.sol": {
        "keccak256": "0x12f297cafe6e2847ae0378502f155654d0764b532a9873c8afe4350950fa7971",
        "urls": [
          "bzz-raw://28074f6df7132e83819042a06ef75ae53c88c53c077b8222b9772b780d58bd58",
          "dweb:/ipfs/QmXXwSxWn4XGCy218fn3f2m3UmFNUiroeQ8sCR3vzNU6Wc"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/EIP712Upgradeable.sol": {
        "keccak256": "0x3017aded62c4a2b9707f5f06f92934e592c1c9b6f384b91b51340a6d5f841931",
        "urls": [
          "bzz-raw://bb693afc2a614ec7afee965caaf5d53c3f32644e33286f60d17ae0e9aca84d44",
          "dweb:/ipfs/QmVJy43EBWvVT5NgpsV8WJfDHtZbnqZGMhmv1WbWaV5dJV"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/math/MathUpgradeable.sol": {
        "keccak256": "0xc1bd5b53319c68f84e3becd75694d941e8f4be94049903232cd8bc7c535aaa5a",
        "urls": [
          "bzz-raw://056027a78e6f4b78a39be530983551651ee5a052e786ca2c1c6a3bb1222b03b4",
          "dweb:/ipfs/QmXRUpywAqNwAfXS89vrtiE2THRM9dX9pQ4QxAkV1Wx9kt"
        ],
        "license": "MIT"
      },
      "src/tenderswap/LiquidityPoolToken.sol": {
        "keccak256": "0xe3a13689f1edd25f26d28b18ea65512344a4dd3ac0e71c59d6ac2a93ee1c2b1a",
        "urls": [
          "bzz-raw://5680de49d1616e7681eab73e23a7917bd9427ff2e103f2ef311a8ca82dd68909",
          "dweb:/ipfs/QmSrvimPs5eLr14wqP4i5hxs6FN9ZNEeaHnQ9m3FBrSyde"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/tenderswap/LiquidityPoolToken.sol",
    "id": 28240,
    "exportedSymbols": {
      "AddressUpgradeable": [
        25350
      ],
      "ContextUpgradeable": [
        25392
      ],
      "CountersUpgradeable": [
        25466
      ],
      "ECDSAUpgradeable": [
        26002
      ],
      "EIP712Upgradeable": [
        26152
      ],
      "ERC20BurnableUpgradeable": [
        24814
      ],
      "ERC20PermitUpgradeable": [
        25030
      ],
      "ERC20Upgradeable": [
        24672
      ],
      "IERC20MetadataUpgradeable": [
        24839
      ],
      "IERC20PermitUpgradeable": [
        25066
      ],
      "IERC20Upgradeable": [
        24750
      ],
      "Initializable": [
        23987
      ],
      "LiquidityPoolToken": [
        28239
      ],
      "MathUpgradeable": [
        27017
      ],
      "OwnableUpgradeable": [
        23818
      ],
      "StringsUpgradeable": [
        25641
      ]
    },
    "nodeType": "SourceUnit",
    "src": "100:1506:35",
    "nodes": [
      {
        "id": 28171,
        "nodeType": "PragmaDirective",
        "src": "100:23:35",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 28172,
        "nodeType": "ImportDirective",
        "src": "129:97:35",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/ERC20BurnableUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 28240,
        "sourceUnit": 24815,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 28173,
        "nodeType": "ImportDirective",
        "src": "228:75:35",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 28240,
        "sourceUnit": 23819,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 28174,
        "nodeType": "ImportDirective",
        "src": "305:101:35",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 28240,
        "sourceUnit": 25031,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 28239,
        "nodeType": "ContractDefinition",
        "src": "410:1194:35",
        "nodes": [
          {
            "id": 28215,
            "nodeType": "FunctionDefinition",
            "src": "832:339:35",
            "nodes": [],
            "body": {
              "id": 28214,
              "nodeType": "Block",
              "src": "930:241:35",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 28192,
                      "name": "__Context_init_unchained",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25368,
                      "src": "941:24:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 28193,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "941:26:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28194,
                  "nodeType": "ExpressionStatement",
                  "src": "941:26:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 28196,
                        "name": "name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28183,
                        "src": "1001:4:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 28197,
                        "name": "symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28185,
                        "src": "1007:6:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 28195,
                      "name": "__ERC20_init_unchained",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24125,
                      "src": "978:22:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 28198,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "978:36:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28199,
                  "nodeType": "ExpressionStatement",
                  "src": "978:36:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 28201,
                        "name": "name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28183,
                        "src": "1049:4:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 28202,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1055:3:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6",
                          "typeString": "literal_string \"1\""
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6",
                          "typeString": "literal_string \"1\""
                        }
                      ],
                      "id": 28200,
                      "name": "__EIP712_init_unchained",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26070,
                      "src": "1025:23:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 28203,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1025:34:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28204,
                  "nodeType": "ExpressionStatement",
                  "src": "1025:34:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 28206,
                        "name": "name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28183,
                        "src": "1099:4:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 28205,
                      "name": "__ERC20Permit_init_unchained",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24895,
                      "src": "1070:28:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 28207,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1070:34:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28208,
                  "nodeType": "ExpressionStatement",
                  "src": "1070:34:35"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 28209,
                      "name": "__Ownable_init_unchained",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23724,
                      "src": "1115:24:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 28210,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1115:26:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28211,
                  "nodeType": "ExpressionStatement",
                  "src": "1115:26:35"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 28212,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1159:4:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 28191,
                  "id": 28213,
                  "nodeType": "Return",
                  "src": "1152:11:35"
                }
              ]
            },
            "documentation": {
              "id": 28181,
              "nodeType": "StructuredDocumentation",
              "src": "517:309:35",
              "text": " @notice Initializes this LPToken contract with the given name and symbol\n @dev The caller of this function will become the owner. A Swap contract should call this\n in its initializer function.\n @param name name of this token\n @param symbol symbol of this token"
            },
            "functionSelector": "4cd88b76",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 28188,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 28187,
                  "name": "initializer",
                  "nameLocations": [
                    "903:11:35"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 23889,
                  "src": "903:11:35"
                },
                "nodeType": "ModifierInvocation",
                "src": "903:11:35"
              }
            ],
            "name": "initialize",
            "nameLocation": "841:10:35",
            "parameters": {
              "id": 28186,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28183,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "866:4:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 28215,
                  "src": "852:18:35",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 28182,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "852:6:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28185,
                  "mutability": "mutable",
                  "name": "symbol",
                  "nameLocation": "886:6:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 28215,
                  "src": "872:20:35",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 28184,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "872:6:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "851:42:35"
            },
            "returnParameters": {
              "id": 28191,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28190,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 28215,
                  "src": "924:4:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 28189,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "924:4:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "923:6:35"
            },
            "scope": 28239,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 28238,
            "nodeType": "FunctionDefinition",
            "src": "1433:168:35",
            "nodes": [],
            "body": {
              "id": 28237,
              "nodeType": "Block",
              "src": "1501:100:35",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 28228,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 28226,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28220,
                          "src": "1520:6:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 28227,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1530:1:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1520:11:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4c50546f6b656e3a2063616e6e6f74206d696e742030",
                        "id": 28229,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1533:24:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ed34f82a9e5f1c19797c90dabe69af55fd60996fe9929040c5fdcf768caac1bc",
                          "typeString": "literal_string \"LPToken: cannot mint 0\""
                        },
                        "value": "LPToken: cannot mint 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ed34f82a9e5f1c19797c90dabe69af55fd60996fe9929040c5fdcf768caac1bc",
                          "typeString": "literal_string \"LPToken: cannot mint 0\""
                        }
                      ],
                      "id": 28225,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1512:7:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 28230,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1512:46:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28231,
                  "nodeType": "ExpressionStatement",
                  "src": "1512:46:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 28233,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28218,
                        "src": "1575:9:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 28234,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28220,
                        "src": "1586:6:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 28232,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24484,
                      "src": "1569:5:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 28235,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1569:24:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28236,
                  "nodeType": "ExpressionStatement",
                  "src": "1569:24:35"
                }
              ]
            },
            "documentation": {
              "id": 28216,
              "nodeType": "StructuredDocumentation",
              "src": "1179:246:35",
              "text": " @notice Mints the given amount of LPToken to the recipient.\n @dev only owner can call this mint function.\n @param recipient address of account to receive the tokens\n @param amount amount of tokens to mint"
            },
            "functionSelector": "40c10f19",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 28223,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 28222,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "1491:9:35"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 23732,
                  "src": "1491:9:35"
                },
                "nodeType": "ModifierInvocation",
                "src": "1491:9:35"
              }
            ],
            "name": "mint",
            "nameLocation": "1442:4:35",
            "parameters": {
              "id": 28221,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28218,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "1455:9:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 28238,
                  "src": "1447:17:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 28217,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1447:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28220,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1474:6:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 28238,
                  "src": "1466:14:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 28219,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1466:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1446:35:35"
            },
            "returnParameters": {
              "id": 28224,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1501:0:35"
            },
            "scope": 28239,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 28175,
              "name": "OwnableUpgradeable",
              "nameLocations": [
                "441:18:35"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 23818,
              "src": "441:18:35"
            },
            "id": 28176,
            "nodeType": "InheritanceSpecifier",
            "src": "441:18:35"
          },
          {
            "baseName": {
              "id": 28177,
              "name": "ERC20BurnableUpgradeable",
              "nameLocations": [
                "461:24:35"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 24814,
              "src": "461:24:35"
            },
            "id": 28178,
            "nodeType": "InheritanceSpecifier",
            "src": "461:24:35"
          },
          {
            "baseName": {
              "id": 28179,
              "name": "ERC20PermitUpgradeable",
              "nameLocations": [
                "487:22:35"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 25030,
              "src": "487:22:35"
            },
            "id": 28180,
            "nodeType": "InheritanceSpecifier",
            "src": "487:22:35"
          }
        ],
        "canonicalName": "LiquidityPoolToken",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          28239,
          25030,
          26152,
          25066,
          24814,
          24672,
          24839,
          24750,
          23818,
          25392,
          23987
        ],
        "name": "LiquidityPoolToken",
        "nameLocation": "419:18:35",
        "scope": 28240,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 35
}