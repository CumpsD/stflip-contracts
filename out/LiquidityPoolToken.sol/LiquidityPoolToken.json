{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DOMAIN_SEPARATOR",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burnFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        }
      ],
      "name": "initialize",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "nonces",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "permit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b506116f1806100206000396000f3fe608060405234801561001057600080fd5b50600436106101375760003560e01c806370a08231116100b857806395d89b411161007c57806395d89b4114610279578063a457c2d714610281578063a9059cbb14610294578063d505accf146102a7578063dd62ed3e146102ba578063f2fde38b146102cd57600080fd5b806370a0823114610207578063715018a61461023057806379cc6790146102385780637ecebe001461024b5780638da5cb5b1461025e57600080fd5b80633644e515116100ff5780633644e515146101b157806339509351146101b957806340c10f19146101cc57806342966c68146101e15780634cd88b76146101f457600080fd5b806306fdde031461013c578063095ea7b31461015a57806318160ddd1461017d57806323b872dd1461018f578063313ce567146101a2575b600080fd5b6101446102e0565b6040516101519190611594565b60405180910390f35b61016d6101683660046114ed565b610372565b6040519015158152602001610151565b6067545b604051908152602001610151565b61016d61019d36600461143e565b61038a565b60405160128152602001610151565b6101816103ae565b61016d6101c73660046114ed565b6103bd565b6101df6101da3660046114ed565b6103df565b005b6101df6101ef36600461157b565b610440565b61016d610202366004611517565b61044d565b6101816102153660046113e9565b6001600160a01b031660009081526065602052604090205490565b6101df6105a5565b6101df6102463660046114ed565b6105b9565b6101816102593660046113e9565b6105ce565b6033546040516001600160a01b039091168152602001610151565b6101446105ee565b61016d61028f3660046114ed565b6105fd565b61016d6102a23660046114ed565b610678565b6101df6102b536600461147a565b610686565b6101816102c836600461140b565b6107ea565b6101df6102db3660046113e9565b610815565b6060606880546102ef9061165a565b80601f016020809104026020016040519081016040528092919081815260200182805461031b9061165a565b80156103685780601f1061033d57610100808354040283529160200191610368565b820191906000526020600020905b81548152906001019060200180831161034b57829003601f168201915b5050505050905090565b60003361038081858561088b565b5060019392505050565b6000336103988582856109b0565b6103a3858585610a2a565b506001949350505050565b60006103b8610bd5565b905090565b6000336103808185856103d083836107ea565b6103da9190611634565b61088b565b6103e7610c50565b806104325760405162461bcd60e51b815260206004820152601660248201527504c50546f6b656e3a2063616e6e6f74206d696e7420360541b60448201526064015b60405180910390fd5b61043c8282610caa565b5050565b61044a3382610d6b565b50565b60008054610100900460ff161580801561046e5750600054600160ff909116105b806104885750303b158015610488575060005460ff166001145b6104eb5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610429565b6000805460ff19166001179055801561050e576000805461ff0019166101001790555b610516610e9c565b6105208484610ec3565b61054384604051806040016040528060018152602001603160f81b815250610f11565b61054c84610f52565b610554610f79565b60019150801561059e576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5092915050565b6105ad610c50565b6105b76000610fa5565b565b6105c48233836109b0565b61043c8282610d6b565b6001600160a01b038116600090815260fd60205260408120545b92915050565b6060606980546102ef9061165a565b6000338161060b82866107ea565b90508381101561066b5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610429565b6103a3828686840361088b565b600033610380818585610a2a565b834211156106d65760405162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e650000006044820152606401610429565b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98888886107058c610ff7565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e00160405160208183030381529060405280519060200120905060006107608261101f565b905060006107708287878761106d565b9050896001600160a01b0316816001600160a01b0316146107d35760405162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e617475726500006044820152606401610429565b6107de8a8a8a61088b565b50505050505050505050565b6001600160a01b03918216600090815260666020908152604080832093909416825291909152205490565b61081d610c50565b6001600160a01b0381166108825760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610429565b61044a81610fa5565b6001600160a01b0383166108ed5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610429565b6001600160a01b03821661094e5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610429565b6001600160a01b0383811660008181526066602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b60006109bc84846107ea565b90506000198114610a245781811015610a175760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610429565b610a24848484840361088b565b50505050565b6001600160a01b038316610a8e5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610429565b6001600160a01b038216610af05760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610429565b6001600160a01b03831660009081526065602052604090205481811015610b685760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610429565b6001600160a01b0380851660008181526065602052604080822086860390559286168082529083902080548601905591517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610bc89086815260200190565b60405180910390a3610a24565b60006103b87f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f610c0460c95490565b60ca546040805160208101859052908101839052606081018290524660808201523060a082015260009060c0016040516020818303038152906040528051906020012090509392505050565b6033546001600160a01b031633146105b75760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610429565b6001600160a01b038216610d005760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610429565b8060676000828254610d129190611634565b90915550506001600160a01b0382166000818152606560209081526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b6001600160a01b038216610dcb5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610429565b6001600160a01b03821660009081526065602052604090205481811015610e3f5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610429565b6001600160a01b03831660008181526065602090815260408083208686039055606780548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91016109a3565b505050565b600054610100900460ff166105b75760405162461bcd60e51b8152600401610429906115e9565b600054610100900460ff16610eea5760405162461bcd60e51b8152600401610429906115e9565b8151610efd9060689060208501906112a7565b508051610e979060699060208401906112a7565b600054610100900460ff16610f385760405162461bcd60e51b8152600401610429906115e9565b81516020928301208151919092012060c99190915560ca55565b600054610100900460ff1661044a5760405162461bcd60e51b8152600401610429906115e9565b600054610100900460ff16610fa05760405162461bcd60e51b8152600401610429906115e9565b6105b7335b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038116600090815260fd602052604090208054600181018255905b50919050565b60006105e861102c610bd5565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b600080600061107e87878787611095565b9150915061108b81611159565b5095945050505050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311156110cc5750600090506003611150565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015611120573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811661114957600060019250925050611150565b9150600090505b94509492505050565b600081600481111561116d5761116d61168f565b14156111765750565b600181600481111561118a5761118a61168f565b14156111d85760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606401610429565b60028160048111156111ec576111ec61168f565b141561123a5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610429565b600381600481111561124e5761124e61168f565b141561044a5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610429565b8280546112b39061165a565b90600052602060002090601f0160209004810192826112d5576000855561131b565b82601f106112ee57805160ff191683800117855561131b565b8280016001018555821561131b579182015b8281111561131b578251825591602001919060010190611300565b5061132792915061132b565b5090565b5b80821115611327576000815560010161132c565b80356001600160a01b038116811461135757600080fd5b919050565b600082601f83011261136d57600080fd5b813567ffffffffffffffff80821115611388576113886116a5565b604051601f8301601f19908116603f011681019082821181831017156113b0576113b06116a5565b816040528381528660208588010111156113c957600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000602082840312156113fb57600080fd5b61140482611340565b9392505050565b6000806040838503121561141e57600080fd5b61142783611340565b915061143560208401611340565b90509250929050565b60008060006060848603121561145357600080fd5b61145c84611340565b925061146a60208501611340565b9150604084013590509250925092565b600080600080600080600060e0888a03121561149557600080fd5b61149e88611340565b96506114ac60208901611340565b95506040880135945060608801359350608088013560ff811681146114d057600080fd5b9699959850939692959460a0840135945060c09093013592915050565b6000806040838503121561150057600080fd5b61150983611340565b946020939093013593505050565b6000806040838503121561152a57600080fd5b823567ffffffffffffffff8082111561154257600080fd5b61154e8683870161135c565b9350602085013591508082111561156457600080fd5b506115718582860161135c565b9150509250929050565b60006020828403121561158d57600080fd5b5035919050565b600060208083528351808285015260005b818110156115c1578581018301518582016040015282016115a5565b818111156115d3576000604083870101525b50601f01601f1916929092016040019392505050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b6000821982111561165557634e487b7160e01b600052601160045260246000fd5b500190565b600181811c9082168061166e57607f821691505b6020821081141561101957634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052604160045260246000fdfea26469706673582212200354ae2f0b1c93bad9cf5af8f0d4dd9aafc80ce2fdb0ec8932e04c9fd0de893064736f6c63430008070033",
    "sourceMap": "410:1194:46:-:0;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106101375760003560e01c806370a08231116100b857806395d89b411161007c57806395d89b4114610279578063a457c2d714610281578063a9059cbb14610294578063d505accf146102a7578063dd62ed3e146102ba578063f2fde38b146102cd57600080fd5b806370a0823114610207578063715018a61461023057806379cc6790146102385780637ecebe001461024b5780638da5cb5b1461025e57600080fd5b80633644e515116100ff5780633644e515146101b157806339509351146101b957806340c10f19146101cc57806342966c68146101e15780634cd88b76146101f457600080fd5b806306fdde031461013c578063095ea7b31461015a57806318160ddd1461017d57806323b872dd1461018f578063313ce567146101a2575b600080fd5b6101446102e0565b6040516101519190611594565b60405180910390f35b61016d6101683660046114ed565b610372565b6040519015158152602001610151565b6067545b604051908152602001610151565b61016d61019d36600461143e565b61038a565b60405160128152602001610151565b6101816103ae565b61016d6101c73660046114ed565b6103bd565b6101df6101da3660046114ed565b6103df565b005b6101df6101ef36600461157b565b610440565b61016d610202366004611517565b61044d565b6101816102153660046113e9565b6001600160a01b031660009081526065602052604090205490565b6101df6105a5565b6101df6102463660046114ed565b6105b9565b6101816102593660046113e9565b6105ce565b6033546040516001600160a01b039091168152602001610151565b6101446105ee565b61016d61028f3660046114ed565b6105fd565b61016d6102a23660046114ed565b610678565b6101df6102b536600461147a565b610686565b6101816102c836600461140b565b6107ea565b6101df6102db3660046113e9565b610815565b6060606880546102ef9061165a565b80601f016020809104026020016040519081016040528092919081815260200182805461031b9061165a565b80156103685780601f1061033d57610100808354040283529160200191610368565b820191906000526020600020905b81548152906001019060200180831161034b57829003601f168201915b5050505050905090565b60003361038081858561088b565b5060019392505050565b6000336103988582856109b0565b6103a3858585610a2a565b506001949350505050565b60006103b8610bd5565b905090565b6000336103808185856103d083836107ea565b6103da9190611634565b61088b565b6103e7610c50565b806104325760405162461bcd60e51b815260206004820152601660248201527504c50546f6b656e3a2063616e6e6f74206d696e7420360541b60448201526064015b60405180910390fd5b61043c8282610caa565b5050565b61044a3382610d6b565b50565b60008054610100900460ff161580801561046e5750600054600160ff909116105b806104885750303b158015610488575060005460ff166001145b6104eb5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610429565b6000805460ff19166001179055801561050e576000805461ff0019166101001790555b610516610e9c565b6105208484610ec3565b61054384604051806040016040528060018152602001603160f81b815250610f11565b61054c84610f52565b610554610f79565b60019150801561059e576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5092915050565b6105ad610c50565b6105b76000610fa5565b565b6105c48233836109b0565b61043c8282610d6b565b6001600160a01b038116600090815260fd60205260408120545b92915050565b6060606980546102ef9061165a565b6000338161060b82866107ea565b90508381101561066b5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610429565b6103a3828686840361088b565b600033610380818585610a2a565b834211156106d65760405162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e650000006044820152606401610429565b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98888886107058c610ff7565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e00160405160208183030381529060405280519060200120905060006107608261101f565b905060006107708287878761106d565b9050896001600160a01b0316816001600160a01b0316146107d35760405162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e617475726500006044820152606401610429565b6107de8a8a8a61088b565b50505050505050505050565b6001600160a01b03918216600090815260666020908152604080832093909416825291909152205490565b61081d610c50565b6001600160a01b0381166108825760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610429565b61044a81610fa5565b6001600160a01b0383166108ed5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610429565b6001600160a01b03821661094e5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610429565b6001600160a01b0383811660008181526066602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b60006109bc84846107ea565b90506000198114610a245781811015610a175760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610429565b610a24848484840361088b565b50505050565b6001600160a01b038316610a8e5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610429565b6001600160a01b038216610af05760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610429565b6001600160a01b03831660009081526065602052604090205481811015610b685760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610429565b6001600160a01b0380851660008181526065602052604080822086860390559286168082529083902080548601905591517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610bc89086815260200190565b60405180910390a3610a24565b60006103b87f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f610c0460c95490565b60ca546040805160208101859052908101839052606081018290524660808201523060a082015260009060c0016040516020818303038152906040528051906020012090509392505050565b6033546001600160a01b031633146105b75760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610429565b6001600160a01b038216610d005760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610429565b8060676000828254610d129190611634565b90915550506001600160a01b0382166000818152606560209081526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b6001600160a01b038216610dcb5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610429565b6001600160a01b03821660009081526065602052604090205481811015610e3f5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610429565b6001600160a01b03831660008181526065602090815260408083208686039055606780548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91016109a3565b505050565b600054610100900460ff166105b75760405162461bcd60e51b8152600401610429906115e9565b600054610100900460ff16610eea5760405162461bcd60e51b8152600401610429906115e9565b8151610efd9060689060208501906112a7565b508051610e979060699060208401906112a7565b600054610100900460ff16610f385760405162461bcd60e51b8152600401610429906115e9565b81516020928301208151919092012060c99190915560ca55565b600054610100900460ff1661044a5760405162461bcd60e51b8152600401610429906115e9565b600054610100900460ff16610fa05760405162461bcd60e51b8152600401610429906115e9565b6105b7335b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038116600090815260fd602052604090208054600181018255905b50919050565b60006105e861102c610bd5565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b600080600061107e87878787611095565b9150915061108b81611159565b5095945050505050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311156110cc5750600090506003611150565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015611120573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811661114957600060019250925050611150565b9150600090505b94509492505050565b600081600481111561116d5761116d61168f565b14156111765750565b600181600481111561118a5761118a61168f565b14156111d85760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606401610429565b60028160048111156111ec576111ec61168f565b141561123a5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610429565b600381600481111561124e5761124e61168f565b141561044a5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610429565b8280546112b39061165a565b90600052602060002090601f0160209004810192826112d5576000855561131b565b82601f106112ee57805160ff191683800117855561131b565b8280016001018555821561131b579182015b8281111561131b578251825591602001919060010190611300565b5061132792915061132b565b5090565b5b80821115611327576000815560010161132c565b80356001600160a01b038116811461135757600080fd5b919050565b600082601f83011261136d57600080fd5b813567ffffffffffffffff80821115611388576113886116a5565b604051601f8301601f19908116603f011681019082821181831017156113b0576113b06116a5565b816040528381528660208588010111156113c957600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000602082840312156113fb57600080fd5b61140482611340565b9392505050565b6000806040838503121561141e57600080fd5b61142783611340565b915061143560208401611340565b90509250929050565b60008060006060848603121561145357600080fd5b61145c84611340565b925061146a60208501611340565b9150604084013590509250925092565b600080600080600080600060e0888a03121561149557600080fd5b61149e88611340565b96506114ac60208901611340565b95506040880135945060608801359350608088013560ff811681146114d057600080fd5b9699959850939692959460a0840135945060c09093013592915050565b6000806040838503121561150057600080fd5b61150983611340565b946020939093013593505050565b6000806040838503121561152a57600080fd5b823567ffffffffffffffff8082111561154257600080fd5b61154e8683870161135c565b9350602085013591508082111561156457600080fd5b506115718582860161135c565b9150509250929050565b60006020828403121561158d57600080fd5b5035919050565b600060208083528351808285015260005b818110156115c1578581018301518582016040015282016115a5565b818111156115d3576000604083870101525b50601f01601f1916929092016040019392505050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b6000821982111561165557634e487b7160e01b600052601160045260246000fd5b500190565b600181811c9082168061166e57607f821691505b6020821081141561101957634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052604160045260246000fdfea26469706673582212200354ae2f0b1c93bad9cf5af8f0d4dd9aafc80ce2fdb0ec8932e04c9fd0de893064736f6c63430008070033",
    "sourceMap": "410:1194:46:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2491:98:21;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4768:197;;;;;;:::i;:::-;;:::i;:::-;;;4165:14:64;;4158:22;4140:41;;4128:2;4113:18;4768:197:21;4000:187:64;3579:106:21;3666:12;;3579:106;;;4338:25:64;;;4326:2;4311:18;3579:106:21;4192:177:64;5527:286:21;;;;;;:::i;:::-;;:::i;3428:91::-;;;3510:2;6019:36:64;;6007:2;5992:18;3428:91:21;5867:194:64;3276:113:25;;;:::i;6208:234:21:-;;;;;;:::i;:::-;;:::i;1433:168:46:-;;;;;;:::i;:::-;;:::i;:::-;;848:89:23;;;;;;:::i;:::-;;:::i;832:339:46:-;;;;;;:::i;:::-;;:::i;3743:125:21:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3843:18:21;3817:7;3843:18;;;:9;:18;;;;;;;3743:125;2071:101:18;;;:::i;1243:161:23:-;;;;;;:::i;:::-;;:::i;3026:126:25:-;;;;;;:::i;:::-;;:::i;1441:85:18:-;1513:6;;1441:85;;-1:-1:-1;;;;;1513:6:18;;;3938:51:64;;3926:2;3911:18;1441:85:18;3792:203:64;2702:102:21;;;:::i;6929:427::-;;;;;;:::i;:::-;;:::i;4064:189::-;;;;;;:::i;:::-;;:::i;2328:637:25:-;;;;;;:::i;:::-;;:::i;4311:149:21:-;;;;;;:::i;:::-;-1:-1:-1;;;;;4426:18:21;;;4400:7;4426:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;4311:149;2321:198:18;;;;;;:::i;:::-;;:::i;2491:98:21:-;2545:13;2577:5;2570:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2491:98;:::o;4768:197::-;4851:4;929:10:28;4905:32:21;929:10:28;4921:7:21;4930:6;4905:8;:32::i;:::-;-1:-1:-1;4954:4:21;;4768:197;-1:-1:-1;;;4768:197:21:o;5527:286::-;5654:4;929:10:28;5710:38:21;5726:4;929:10:28;5741:6:21;5710:15;:38::i;:::-;5758:27;5768:4;5774:2;5778:6;5758:9;:27::i;:::-;-1:-1:-1;5802:4:21;;5527:286;-1:-1:-1;;;;5527:286:21:o;3276:113:25:-;3336:7;3362:20;:18;:20::i;:::-;3355:27;;3276:113;:::o;6208:234:21:-;929:10:28;6296:4:21;4426:18;;;:11;:18;;;;;;;;-1:-1:-1;;;;;4426:27:21;;;;;;;;;;6296:4;;929:10:28;6350:64:21;;929:10:28;;4426:27:21;;6375:38;;6403:10;;6375:38;:::i;:::-;6350:8;:64::i;1433:168:46:-;1334:13:18;:11;:13::i;:::-;1520:11:46;1512:46:::1;;;::::0;-1:-1:-1;;;1512:46:46;;13486:2:64;1512:46:46::1;::::0;::::1;13468:21:64::0;13525:2;13505:18;;;13498:30;-1:-1:-1;;;13544:18:64;;;13537:52;13606:18;;1512:46:46::1;;;;;;;;;1569:24;1575:9;1586:6;1569:5;:24::i;:::-;1433:168:::0;;:::o;848:89:23:-;903:27;929:10:28;923:6:23;903:5;:27::i;:::-;848:89;:::o;832:339:46:-;924:4;3291:13:19;;;;;;;3290:14;;3336:34;;;;-1:-1:-1;3354:12:19;;3369:1;3354:12;;;;:16;3336:34;3335:108;;;-1:-1:-1;3415:4:19;1476:19:27;:23;;;3376:66:19;;-1:-1:-1;3425:12:19;;;;;:17;3376:66;3314:201;;;;-1:-1:-1;;;3314:201:19;;10726:2:64;3314:201:19;;;10708:21:64;10765:2;10745:18;;;10738:30;10804:34;10784:18;;;10777:62;-1:-1:-1;;;10855:18:64;;;10848:44;10909:19;;3314:201:19;10524:410:64;3314:201:19;3525:12;:16;;-1:-1:-1;;3525:16:19;3540:1;3525:16;;;3551:65;;;;3585:13;:20;;-1:-1:-1;;3585:20:19;;;;;3551:65;941:26:46::1;:24;:26::i;:::-;978:36;1001:4;1007:6;978:22;:36::i;:::-;1025:34;1049:4;1025:34;;;;;;;;;;;;;-1:-1:-1::0;;;1025:34:46::1;;::::0;:23:::1;:34::i;:::-;1070;1099:4;1070:28;:34::i;:::-;1115:26;:24;:26::i;:::-;1159:4;1152:11;;3640:14:19::0;3636:99;;;3686:5;3670:21;;-1:-1:-1;;3670:21:19;;;3710:14;;-1:-1:-1;6019:36:64;;3710:14:19;;6007:2:64;5992:18;3710:14:19;;;;;;;3636:99;3258:483;832:339:46;;;;:::o;2071:101:18:-;1334:13;:11;:13::i;:::-;2135:30:::1;2162:1;2135:18;:30::i;:::-;2071:101::o:0;1243:161:23:-;1319:46;1335:7;929:10:28;1358:6:23;1319:15;:46::i;:::-;1375:22;1381:7;1390:6;1375:5;:22::i;3026:126:25:-;-1:-1:-1;;;;;3121:14:25;;3095:7;3121:14;;;:7;:14;;;;;929::29;3121:24:25;3114:31;3026:126;-1:-1:-1;;3026:126:25:o;2702:102:21:-;2758:13;2790:7;2783:14;;;;;:::i;6929:427::-;929:10:28;7022:4:21;4426:18;;;:11;:18;;;;;;;;-1:-1:-1;;;;;4426:27:21;;;;;;;;;;7022:4;;929:10:28;7146:35:21;;;;7138:85;;;;-1:-1:-1;;;7138:85:21;;13837:2:64;7138:85:21;;;13819:21:64;13876:2;13856:18;;;13849:30;13915:34;13895:18;;;13888:62;-1:-1:-1;;;13966:18:64;;;13959:35;14011:19;;7138:85:21;13635:401:64;7138:85:21;7257:60;7266:5;7273:7;7301:15;7282:16;:34;7257:8;:60::i;4064:189::-;4143:4;929:10:28;4197:28:21;929:10:28;4214:2:21;4218:6;4197:9;:28::i;2328:637:25:-;2563:8;2544:15;:27;;2536:69;;;;-1:-1:-1;;;2536:69:25;;9558:2:64;2536:69:25;;;9540:21:64;9597:2;9577:18;;;9570:30;9636:31;9616:18;;;9609:59;9685:18;;2536:69:25;9356:353:64;2536:69:25;2616:18;1363:95;2676:5;2683:7;2692:5;2699:16;2709:5;2699:9;:16::i;:::-;2647:79;;;;;;4661:25:64;;;;-1:-1:-1;;;;;4760:15:64;;;4740:18;;;4733:43;4812:15;;;;4792:18;;;4785:43;4844:18;;;4837:34;4887:19;;;4880:35;4931:19;;;4924:35;;;4633:19;;2647:79:25;;;;;;;;;;;;2637:90;;;;;;2616:111;;2738:12;2753:28;2770:10;2753:16;:28::i;:::-;2738:43;;2792:14;2809:39;2834:4;2840:1;2843;2846;2809:24;:39::i;:::-;2792:56;-1:-1:-1;;;;;;2866:15:25;;;;;;;2858:58;;;;-1:-1:-1;;;2858:58:25;;11141:2:64;2858:58:25;;;11123:21:64;11180:2;11160:18;;;11153:30;11219:32;11199:18;;;11192:60;11269:18;;2858:58:25;10939:354:64;2858:58:25;2927:31;2936:5;2943:7;2952:5;2927:8;:31::i;:::-;2526:439;;;2328:637;;;;;;;:::o;2321:198:18:-;1334:13;:11;:13::i;:::-;-1:-1:-1;;;;;2409:22:18;::::1;2401:73;;;::::0;-1:-1:-1;;;2401:73:18;;8390:2:64;2401:73:18::1;::::0;::::1;8372:21:64::0;8429:2;8409:18;;;8402:30;8468:34;8448:18;;;8441:62;-1:-1:-1;;;8519:18:64;;;8512:36;8565:19;;2401:73:18::1;8188:402:64::0;2401:73:18::1;2484:28;2503:8;2484:18;:28::i;10841:370:21:-:0;-1:-1:-1;;;;;10972:19:21;;10964:68;;;;-1:-1:-1;;;10964:68:21;;12669:2:64;10964:68:21;;;12651:21:64;12708:2;12688:18;;;12681:30;12747:34;12727:18;;;12720:62;-1:-1:-1;;;12798:18:64;;;12791:34;12842:19;;10964:68:21;12467:400:64;10964:68:21;-1:-1:-1;;;;;11050:21:21;;11042:68;;;;-1:-1:-1;;;11042:68:21;;8797:2:64;11042:68:21;;;8779:21:64;8836:2;8816:18;;;8809:30;8875:34;8855:18;;;8848:62;-1:-1:-1;;;8926:18:64;;;8919:32;8968:19;;11042:68:21;8595:398:64;11042:68:21;-1:-1:-1;;;;;11121:18:21;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;11172:32;;4338:25:64;;;11172:32:21;;4311:18:64;11172:32:21;;;;;;;;10841:370;;;:::o;11492:441::-;-1:-1:-1;;;;;4426:18:21;;;11622:24;4426:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;11688:37:21;;11684:243;;11769:6;11749:16;:26;;11741:68;;;;-1:-1:-1;;;11741:68:21;;9200:2:64;11741:68:21;;;9182:21:64;9239:2;9219:18;;;9212:30;9278:31;9258:18;;;9251:59;9327:18;;11741:68:21;8998:353:64;11741:68:21;11851:51;11860:5;11867:7;11895:6;11876:16;:25;11851:8;:51::i;:::-;11612:321;11492:441;;;:::o;7810:818::-;-1:-1:-1;;;;;7936:18:21;;7928:68;;;;-1:-1:-1;;;7928:68:21;;12263:2:64;7928:68:21;;;12245:21:64;12302:2;12282:18;;;12275:30;12341:34;12321:18;;;12314:62;-1:-1:-1;;;12392:18:64;;;12385:35;12437:19;;7928:68:21;12061:401:64;7928:68:21;-1:-1:-1;;;;;8014:16:21;;8006:64;;;;-1:-1:-1;;;8006:64:21;;7223:2:64;8006:64:21;;;7205:21:64;7262:2;7242:18;;;7235:30;7301:34;7281:18;;;7274:62;-1:-1:-1;;;7352:18:64;;;7345:33;7395:19;;8006:64:21;7021:399:64;8006:64:21;-1:-1:-1;;;;;8152:15:21;;8130:19;8152:15;;;:9;:15;;;;;;8185:21;;;;8177:72;;;;-1:-1:-1;;;8177:72:21;;9916:2:64;8177:72:21;;;9898:21:64;9955:2;9935:18;;;9928:30;9994:34;9974:18;;;9967:62;-1:-1:-1;;;10045:18:64;;;10038:36;10091:19;;8177:72:21;9714:402:64;8177:72:21;-1:-1:-1;;;;;8283:15:21;;;;;;;:9;:15;;;;;;;;8301:20;;;8283:38;;8498:13;;;;;;;;;;:23;;;;;;8547:26;;4338:25:64;;;8547:26:21;;8498:13;;8547:26;;;;;;;;;;;8584:37;9759:659;2851:160:32;2904:7;2930:74;1604:95;2964:17;4395:12;;;4311:103;2964:17;4740:15;;3193:73;;;;;;5229:25:64;;;5270:18;;;5263:34;;;5313:18;;;5306:34;;;3237:13:32;5356:18:64;;;5349:34;3260:4:32;5399:19:64;;;5392:61;3157:7:32;;5201:19:64;;3193:73:32;;;;;;;;;;;;3183:84;;;;;;3176:91;;3017:257;;;;;;1599:130:18;1513:6;;-1:-1:-1;;;;;1513:6:18;929:10:28;1662:23:18;1654:68;;;;-1:-1:-1;;;1654:68:18;;11500:2:64;1654:68:18;;;11482:21:64;;;11519:18;;;11512:30;11578:34;11558:18;;;11551:62;11630:18;;1654:68:18;11298:356:64;8904:535:21;-1:-1:-1;;;;;8987:21:21;;8979:65;;;;-1:-1:-1;;;8979:65:21;;14243:2:64;8979:65:21;;;14225:21:64;14282:2;14262:18;;;14255:30;14321:33;14301:18;;;14294:61;14372:18;;8979:65:21;14041:355:64;8979:65:21;9131:6;9115:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;9283:18:21;;;;;;:9;:18;;;;;;;;:28;;;;;;9336:37;4338:25:64;;;9336:37:21;;4311:18:64;9336:37:21;;;;;;;1433:168:46;;:::o;9759:659:21:-;-1:-1:-1;;;;;9842:21:21;;9834:67;;;;-1:-1:-1;;;9834:67:21;;11861:2:64;9834:67:21;;;11843:21:64;11900:2;11880:18;;;11873:30;11939:34;11919:18;;;11912:62;-1:-1:-1;;;11990:18:64;;;11983:31;12031:19;;9834:67:21;11659:397:64;9834:67:21;-1:-1:-1;;;;;9997:18:21;;9972:22;9997:18;;;:9;:18;;;;;;10033:24;;;;10025:71;;;;-1:-1:-1;;;10025:71:21;;7627:2:64;10025:71:21;;;7609:21:64;7666:2;7646:18;;;7639:30;7705:34;7685:18;;;7678:62;-1:-1:-1;;;7756:18:64;;;7749:32;7798:19;;10025:71:21;7425:398:64;10025:71:21;-1:-1:-1;;;;;10130:18:21;;;;;;:9;:18;;;;;;;;10151:23;;;10130:44;;10267:12;:22;;;;;;;10315:37;4338:25:64;;;10130:18:21;;;10315:37;;4311:18:64;10315:37:21;4192:177:64;10363:48:21;9824:594;9759:659;;:::o;776:69:28:-;5363:13:19;;;;;;;5355:69;;;;-1:-1:-1;;;5355:69:19;;;;;;;:::i;2267:159:21:-;5363:13:19;;;;;;;5355:69;;;;-1:-1:-1;;;5355:69:19;;;;;;;:::i;:::-;2379:13:21;;::::1;::::0;:5:::1;::::0;:13:::1;::::0;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;2402:17:21;;::::1;::::0;:7:::1;::::0;:17:::1;::::0;::::1;::::0;::::1;:::i;2468:297:32:-:0;5363:13:19;;;;;;;5355:69;;;;-1:-1:-1;;;5355:69:19;;;;;;;:::i;:::-;2601:22:32;;::::1;::::0;;::::1;::::0;2657:25;;;;;::::1;::::0;2692:12:::1;:25:::0;;;;2727:15:::1;:31:::0;2468:297::o;2186:81:25:-;5363:13:19;;;;;;;5355:69;;;;-1:-1:-1;;;5355:69:19;;;;;;;:::i;1104:111:18:-;5363:13:19;;;;;;;5355:69;;;;-1:-1:-1;;;5355:69:19;;;;;;;:::i;:::-;1176:32:18::1;929:10:28::0;1195:12:18::1;2765:6:::0;;;-1:-1:-1;;;;;2781:17:18;;;-1:-1:-1;;;;;;2781:17:18;;;;;;;2813:40;;2765:6;;;2781:17;2765:6;;2813:40;;-1:-1:-1;;2813:40:18;2736:124;2673:187;:::o;3520:214:25:-;-1:-1:-1;;;;;3651:14:25;;3580:15;3651:14;;;:7;:14;;;;;929::29;;-1:-1:-1;1043:19:29;;;;929:14;3710:17:25;3597:137;3520:214;;;:::o;3899:176:32:-;3976:7;4002:66;4035:20;:18;:20::i;:::-;8503:57:31;;;-1:-1:-1;;;8503:57:31;;;;3653:27:64;;;;3696:11;;;3689:27;;;;3732:12;;;;3725:28;;;8503:57:31;;;;;;;;;;3769:12:64;;;;8503:57:31;;;8493:68;;;;;;8374:194;6718:270;6841:7;6861:17;6880:18;6902:25;6913:4;6919:1;6922;6925;6902:10;:25::i;:::-;6860:67;;;;6937:18;6949:5;6937:11;:18::i;:::-;-1:-1:-1;6972:9:31;6718:270;-1:-1:-1;;;;;6718:270:31:o;5091:1494::-;5217:7;;6141:66;6128:79;;6124:161;;;-1:-1:-1;6239:1:31;;-1:-1:-1;6243:30:31;6223:51;;6124:161;6396:24;;;6379:14;6396:24;;;;;;;;;5691:25:64;;;5764:4;5752:17;;5732:18;;;5725:45;;;;5786:18;;;5779:34;;;5829:18;;;5822:34;;;6396:24:31;;5663:19:64;;6396:24:31;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6396:24:31;;-1:-1:-1;;6396:24:31;;;-1:-1:-1;;;;;;;6434:20:31;;6430:101;;6486:1;6490:29;6470:50;;;;;;;6430:101;6549:6;-1:-1:-1;6557:20:31;;-1:-1:-1;5091:1494:31;;;;;;;;:::o;592:511::-;669:20;660:5;:29;;;;;;;;:::i;:::-;;656:441;;;592:511;:::o;656:441::-;765:29;756:5;:38;;;;;;;;:::i;:::-;;752:345;;;810:34;;-1:-1:-1;;;810:34:31;;6870:2:64;810:34:31;;;6852:21:64;6909:2;6889:18;;;6882:30;6948:26;6928:18;;;6921:54;6992:18;;810:34:31;6668:348:64;752:345:31;874:35;865:5;:44;;;;;;;;:::i;:::-;;861:236;;;925:41;;-1:-1:-1;;;925:41:31;;8030:2:64;925:41:31;;;8012:21:64;8069:2;8049:18;;;8042:30;8108:33;8088:18;;;8081:61;8159:18;;925:41:31;7828:355:64;861:236:31;996:30;987:5;:39;;;;;;;;:::i;:::-;;983:114;;;1042:44;;-1:-1:-1;;;1042:44:31;;10323:2:64;1042:44:31;;;10305:21:64;10362:2;10342:18;;;10335:30;10401:34;10381:18;;;10374:62;-1:-1:-1;;;10452:18:64;;;10445:32;10494:19;;1042:44:31;10121:398:64;-1:-1:-1;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:173:64;82:20;;-1:-1:-1;;;;;131:31:64;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:719::-;235:5;288:3;281:4;273:6;269:17;265:27;255:55;;306:1;303;296:12;255:55;342:6;329:20;368:18;405:2;401;398:10;395:36;;;411:18;;:::i;:::-;486:2;480:9;454:2;540:13;;-1:-1:-1;;536:22:64;;;560:2;532:31;528:40;516:53;;;584:18;;;604:22;;;581:46;578:72;;;630:18;;:::i;:::-;670:10;666:2;659:22;705:2;697:6;690:18;751:3;744:4;739:2;731:6;727:15;723:26;720:35;717:55;;;768:1;765;758:12;717:55;832:2;825:4;817:6;813:17;806:4;798:6;794:17;781:54;879:1;872:4;867:2;859:6;855:15;851:26;844:37;899:6;890:15;;;;;;192:719;;;;:::o;916:186::-;975:6;1028:2;1016:9;1007:7;1003:23;999:32;996:52;;;1044:1;1041;1034:12;996:52;1067:29;1086:9;1067:29;:::i;:::-;1057:39;916:186;-1:-1:-1;;;916:186:64:o;1107:260::-;1175:6;1183;1236:2;1224:9;1215:7;1211:23;1207:32;1204:52;;;1252:1;1249;1242:12;1204:52;1275:29;1294:9;1275:29;:::i;:::-;1265:39;;1323:38;1357:2;1346:9;1342:18;1323:38;:::i;:::-;1313:48;;1107:260;;;;;:::o;1372:328::-;1449:6;1457;1465;1518:2;1506:9;1497:7;1493:23;1489:32;1486:52;;;1534:1;1531;1524:12;1486:52;1557:29;1576:9;1557:29;:::i;:::-;1547:39;;1605:38;1639:2;1628:9;1624:18;1605:38;:::i;:::-;1595:48;;1690:2;1679:9;1675:18;1662:32;1652:42;;1372:328;;;;;:::o;1705:693::-;1816:6;1824;1832;1840;1848;1856;1864;1917:3;1905:9;1896:7;1892:23;1888:33;1885:53;;;1934:1;1931;1924:12;1885:53;1957:29;1976:9;1957:29;:::i;:::-;1947:39;;2005:38;2039:2;2028:9;2024:18;2005:38;:::i;:::-;1995:48;;2090:2;2079:9;2075:18;2062:32;2052:42;;2141:2;2130:9;2126:18;2113:32;2103:42;;2195:3;2184:9;2180:19;2167:33;2240:4;2233:5;2229:16;2222:5;2219:27;2209:55;;2260:1;2257;2250:12;2209:55;1705:693;;;;-1:-1:-1;1705:693:64;;;;2283:5;2335:3;2320:19;;2307:33;;-1:-1:-1;2387:3:64;2372:19;;;2359:33;;1705:693;-1:-1:-1;;1705:693:64:o;2403:254::-;2471:6;2479;2532:2;2520:9;2511:7;2507:23;2503:32;2500:52;;;2548:1;2545;2538:12;2500:52;2571:29;2590:9;2571:29;:::i;:::-;2561:39;2647:2;2632:18;;;;2619:32;;-1:-1:-1;;;2403:254:64:o;2662:543::-;2750:6;2758;2811:2;2799:9;2790:7;2786:23;2782:32;2779:52;;;2827:1;2824;2817:12;2779:52;2867:9;2854:23;2896:18;2937:2;2929:6;2926:14;2923:34;;;2953:1;2950;2943:12;2923:34;2976:50;3018:7;3009:6;2998:9;2994:22;2976:50;:::i;:::-;2966:60;;3079:2;3068:9;3064:18;3051:32;3035:48;;3108:2;3098:8;3095:16;3092:36;;;3124:1;3121;3114:12;3092:36;;3147:52;3191:7;3180:8;3169:9;3165:24;3147:52;:::i;:::-;3137:62;;;2662:543;;;;;:::o;3210:180::-;3269:6;3322:2;3310:9;3301:7;3297:23;3293:32;3290:52;;;3338:1;3335;3328:12;3290:52;-1:-1:-1;3361:23:64;;3210:180;-1:-1:-1;3210:180:64:o;6066:597::-;6178:4;6207:2;6236;6225:9;6218:21;6268:6;6262:13;6311:6;6306:2;6295:9;6291:18;6284:34;6336:1;6346:140;6360:6;6357:1;6354:13;6346:140;;;6455:14;;;6451:23;;6445:30;6421:17;;;6440:2;6417:26;6410:66;6375:10;;6346:140;;;6504:6;6501:1;6498:13;6495:91;;;6574:1;6569:2;6560:6;6549:9;6545:22;6541:31;6534:42;6495:91;-1:-1:-1;6647:2:64;6626:15;-1:-1:-1;;6622:29:64;6607:45;;;;6654:2;6603:54;;6066:597;-1:-1:-1;;;6066:597:64:o;12872:407::-;13074:2;13056:21;;;13113:2;13093:18;;;13086:30;13152:34;13147:2;13132:18;;13125:62;-1:-1:-1;;;13218:2:64;13203:18;;13196:41;13269:3;13254:19;;12872:407::o;14772:225::-;14812:3;14843:1;14839:6;14836:1;14833:13;14830:136;;;14888:10;14883:3;14879:20;14876:1;14869:31;14923:4;14920:1;14913:15;14951:4;14948:1;14941:15;14830:136;-1:-1:-1;14982:9:64;;14772:225::o;15002:380::-;15081:1;15077:12;;;;15124;;;15145:61;;15199:4;15191:6;15187:17;15177:27;;15145:61;15252:2;15244:6;15241:14;15221:18;15218:38;15215:161;;;15298:10;15293:3;15289:20;15286:1;15279:31;15333:4;15330:1;15323:15;15361:4;15358:1;15351:15;15387:127;15448:10;15443:3;15439:20;15436:1;15429:31;15479:4;15476:1;15469:15;15503:4;15500:1;15493:15;15519:127;15580:10;15575:3;15571:20;15568:1;15561:31;15611:4;15608:1;15601:15;15635:4;15632:1;15625:15",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "DOMAIN_SEPARATOR()": "3644e515",
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "burn(uint256)": "42966c68",
    "burnFrom(address,uint256)": "79cc6790",
    "decimals()": "313ce567",
    "decreaseAllowance(address,uint256)": "a457c2d7",
    "increaseAllowance(address,uint256)": "39509351",
    "initialize(string,string)": "4cd88b76",
    "mint(address,uint256)": "40c10f19",
    "name()": "06fdde03",
    "nonces(address)": "7ecebe00",
    "owner()": "8da5cb5b",
    "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
    "renounceOwnership()": "715018a6",
    "symbol()": "95d89b41",
    "totalSupply()": "18160ddd",
    "transfer(address,uint256)": "a9059cbb",
    "transferFrom(address,address,uint256)": "23b872dd",
    "transferOwnership(address)": "f2fde38b"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"name\":\"initialize\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"See {IERC20Permit-DOMAIN_SEPARATOR}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys `amount` tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"initialize(string,string)\":{\"details\":\"The caller of this function will become the owner. A Swap contract should call this in its initializer function.\",\"params\":{\"name\":\"name of this token\",\"symbol\":\"symbol of this token\"}},\"mint(address,uint256)\":{\"details\":\"only owner can call this mint function.\",\"params\":{\"amount\":\"amount of tokens to mint\",\"recipient\":\"address of account to receive the tokens\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"See {IERC20Permit-nonces}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"See {IERC20Permit-permit}.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"initialize(string,string)\":{\"notice\":\"Initializes this LPToken contract with the given name and symbol\"},\"mint(address,uint256)\":{\"notice\":\"Mints the given amount of LPToken to the recipient.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/tenderswap/LiquidityPoolToken.sol\":\"LiquidityPoolToken\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a\",\"dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x037c334add4b033ad3493038c25be1682d78c00992e1acb0e2795caff3925271\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8a313cf42389440e2706837c91370323b85971c06afd6d056d21e2bc86459618\",\"dweb:/ipfs/QmT8XUrUvQ9aZaPKrqgRU2JVGWnaxBcUYJA7Q7K5KcLBSZ\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0xb1d9e69cf8073efa574b31b1f840e20709139c19bfb27e60b16393d6073f3d42\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7c39b800e55781c0f7a644ec9cc615664dbe2f009198e537e6acaad3086ba093\",\"dweb:/ipfs/Qmaugq2wsB1ASX8Kv29NwXqYhZY8HRNqcdvmBe9UUNEq2V\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75b47c3aeca7b66ea6752f8be020ec5c1c502de6ec9065272dae23d3a52196e2\",\"dweb:/ipfs/QmUebPMHv16tYKFh5BmBQkMfRFb5b8UZ2RgVwdjxCeufVF\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":{\"keccak256\":\"0xea2c6f9d434127bf36b1e3e5ebaaf6d28a64dbaeea560508e570014e905a5ad2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3483370aa549810a946ace621a225616bb6d0b9ed22c3a99bbcf80dc4866ec39\",\"dweb:/ipfs/QmdgFnm6X2oQ574eJFLghVXVckwyC3SbiAUxXs934N1qvf\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"keccak256\":\"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d\",\"dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol\":{\"keccak256\":\"0xfe1053f3a6ee4527cde96c8152b8b1dbb98774639a64e819087bc80e618d7f7f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d60039d30fc910757604a2bd75969e47f64833981e66de1f5843a671167f386b\",\"dweb:/ipfs/QmU9d5yDZQpb572GxN1L7EPocjyLjrWksoE8AFb1SEVSUb\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/draft-IERC20PermitUpgradeable.sol\":{\"keccak256\":\"0xcc70d8e2281fb3ff69e8ab242500f10142cd0a7fa8dd9e45882be270d4d09024\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17a4063bc918df0f7bb9cbf04c6f0bb4977afab3f2fc212bc138a178312a221d\",\"dweb:/ipfs/QmZMdvsHP5mDEAAdrK4bNeNh47TfmSFgN9qEBFTbie7zmm\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06\",\"dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/CountersUpgradeable.sol\":{\"keccak256\":\"0x798741e231b22b81e2dd2eddaaf8832dee4baf5cd8e2dbaa5c1dd12a1c053c4d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c41e8a7a906b8f362c8b760a44edadc61782008ea2ecf377ac5b5325bf6c3912\",\"dweb:/ipfs/QmcXr19zuH3YLzD6RZNE6UTzvsKSckdxZQnagPoDGkCHu2\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0x6b9a5d35b744b25529a2856a8093e7c03fb35a34b1c4fb5499e560f8ade140da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://187b5c3a1c9e77678732a2cc5284237f9cfca6bc28ee8bc0a0f4f951d7b3a2f8\",\"dweb:/ipfs/Qmb2KFr7WuQu7btdCiftQG64vTzrG4UyzVmo53EYHcnHYA\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/ECDSAUpgradeable.sol\":{\"keccak256\":\"0x12f297cafe6e2847ae0378502f155654d0764b532a9873c8afe4350950fa7971\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://28074f6df7132e83819042a06ef75ae53c88c53c077b8222b9772b780d58bd58\",\"dweb:/ipfs/QmXXwSxWn4XGCy218fn3f2m3UmFNUiroeQ8sCR3vzNU6Wc\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/EIP712Upgradeable.sol\":{\"keccak256\":\"0x3017aded62c4a2b9707f5f06f92934e592c1c9b6f384b91b51340a6d5f841931\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb693afc2a614ec7afee965caaf5d53c3f32644e33286f60d17ae0e9aca84d44\",\"dweb:/ipfs/QmVJy43EBWvVT5NgpsV8WJfDHtZbnqZGMhmv1WbWaV5dJV\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0xc1bd5b53319c68f84e3becd75694d941e8f4be94049903232cd8bc7c535aaa5a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://056027a78e6f4b78a39be530983551651ee5a052e786ca2c1c6a3bb1222b03b4\",\"dweb:/ipfs/QmXRUpywAqNwAfXS89vrtiE2THRM9dX9pQ4QxAkV1Wx9kt\"]},\"src/tenderswap/LiquidityPoolToken.sol\":{\"keccak256\":\"0xe3a13689f1edd25f26d28b18ea65512344a4dd3ac0e71c59d6ac2a93ee1c2b1a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5680de49d1616e7681eab73e23a7917bd9427ff2e103f2ef311a8ca82dd68909\",\"dweb:/ipfs/QmSrvimPs5eLr14wqP4i5hxs6FN9ZNEeaHnQ9m3FBrSyde\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.7+commit.e28d00a7"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DOMAIN_SEPARATOR",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burn"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burnFrom"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "subtractedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "decreaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "addedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "increaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "symbol",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mint"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "nonces",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "permit"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "DOMAIN_SEPARATOR()": {
            "details": "See {IERC20Permit-DOMAIN_SEPARATOR}."
          },
          "allowance(address,address)": {
            "details": "See {IERC20-allowance}."
          },
          "approve(address,uint256)": {
            "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
          },
          "balanceOf(address)": {
            "details": "See {IERC20-balanceOf}."
          },
          "burn(uint256)": {
            "details": "Destroys `amount` tokens from the caller. See {ERC20-_burn}."
          },
          "burnFrom(address,uint256)": {
            "details": "Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`."
          },
          "decimals()": {
            "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
          },
          "decreaseAllowance(address,uint256)": {
            "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
          },
          "increaseAllowance(address,uint256)": {
            "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
          },
          "initialize(string,string)": {
            "details": "The caller of this function will become the owner. A Swap contract should call this in its initializer function.",
            "params": {
              "name": "name of this token",
              "symbol": "symbol of this token"
            }
          },
          "mint(address,uint256)": {
            "details": "only owner can call this mint function.",
            "params": {
              "amount": "amount of tokens to mint",
              "recipient": "address of account to receive the tokens"
            }
          },
          "name()": {
            "details": "Returns the name of the token."
          },
          "nonces(address)": {
            "details": "See {IERC20Permit-nonces}."
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
            "details": "See {IERC20Permit-permit}."
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
          },
          "symbol()": {
            "details": "Returns the symbol of the token, usually a shorter version of the name."
          },
          "totalSupply()": {
            "details": "See {IERC20-totalSupply}."
          },
          "transfer(address,uint256)": {
            "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "initialize(string,string)": {
            "notice": "Initializes this LPToken contract with the given name and symbol"
          },
          "mint(address,uint256)": {
            "notice": "Mints the given amount of LPToken to the recipient."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        ":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/tenderswap/LiquidityPoolToken.sol": "LiquidityPoolToken"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol": {
        "keccak256": "0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888",
        "urls": [
          "bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a",
          "dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x037c334add4b033ad3493038c25be1682d78c00992e1acb0e2795caff3925271",
        "urls": [
          "bzz-raw://8a313cf42389440e2706837c91370323b85971c06afd6d056d21e2bc86459618",
          "dweb:/ipfs/QmT8XUrUvQ9aZaPKrqgRU2JVGWnaxBcUYJA7Q7K5KcLBSZ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol": {
        "keccak256": "0xb1d9e69cf8073efa574b31b1f840e20709139c19bfb27e60b16393d6073f3d42",
        "urls": [
          "bzz-raw://7c39b800e55781c0f7a644ec9cc615664dbe2f009198e537e6acaad3086ba093",
          "dweb:/ipfs/Qmaugq2wsB1ASX8Kv29NwXqYhZY8HRNqcdvmBe9UUNEq2V"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/IERC20Upgradeable.sol": {
        "keccak256": "0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff",
        "urls": [
          "bzz-raw://75b47c3aeca7b66ea6752f8be020ec5c1c502de6ec9065272dae23d3a52196e2",
          "dweb:/ipfs/QmUebPMHv16tYKFh5BmBQkMfRFb5b8UZ2RgVwdjxCeufVF"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/ERC20BurnableUpgradeable.sol": {
        "keccak256": "0xea2c6f9d434127bf36b1e3e5ebaaf6d28a64dbaeea560508e570014e905a5ad2",
        "urls": [
          "bzz-raw://3483370aa549810a946ace621a225616bb6d0b9ed22c3a99bbcf80dc4866ec39",
          "dweb:/ipfs/QmdgFnm6X2oQ574eJFLghVXVckwyC3SbiAUxXs934N1qvf"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/IERC20MetadataUpgradeable.sol": {
        "keccak256": "0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb",
        "urls": [
          "bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d",
          "dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol": {
        "keccak256": "0xfe1053f3a6ee4527cde96c8152b8b1dbb98774639a64e819087bc80e618d7f7f",
        "urls": [
          "bzz-raw://d60039d30fc910757604a2bd75969e47f64833981e66de1f5843a671167f386b",
          "dweb:/ipfs/QmU9d5yDZQpb572GxN1L7EPocjyLjrWksoE8AFb1SEVSUb"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/draft-IERC20PermitUpgradeable.sol": {
        "keccak256": "0xcc70d8e2281fb3ff69e8ab242500f10142cd0a7fa8dd9e45882be270d4d09024",
        "urls": [
          "bzz-raw://17a4063bc918df0f7bb9cbf04c6f0bb4977afab3f2fc212bc138a178312a221d",
          "dweb:/ipfs/QmZMdvsHP5mDEAAdrK4bNeNh47TfmSFgN9qEBFTbie7zmm"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183",
        "urls": [
          "bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06",
          "dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/CountersUpgradeable.sol": {
        "keccak256": "0x798741e231b22b81e2dd2eddaaf8832dee4baf5cd8e2dbaa5c1dd12a1c053c4d",
        "urls": [
          "bzz-raw://c41e8a7a906b8f362c8b760a44edadc61782008ea2ecf377ac5b5325bf6c3912",
          "dweb:/ipfs/QmcXr19zuH3YLzD6RZNE6UTzvsKSckdxZQnagPoDGkCHu2"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/StringsUpgradeable.sol": {
        "keccak256": "0x6b9a5d35b744b25529a2856a8093e7c03fb35a34b1c4fb5499e560f8ade140da",
        "urls": [
          "bzz-raw://187b5c3a1c9e77678732a2cc5284237f9cfca6bc28ee8bc0a0f4f951d7b3a2f8",
          "dweb:/ipfs/Qmb2KFr7WuQu7btdCiftQG64vTzrG4UyzVmo53EYHcnHYA"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/ECDSAUpgradeable.sol": {
        "keccak256": "0x12f297cafe6e2847ae0378502f155654d0764b532a9873c8afe4350950fa7971",
        "urls": [
          "bzz-raw://28074f6df7132e83819042a06ef75ae53c88c53c077b8222b9772b780d58bd58",
          "dweb:/ipfs/QmXXwSxWn4XGCy218fn3f2m3UmFNUiroeQ8sCR3vzNU6Wc"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/EIP712Upgradeable.sol": {
        "keccak256": "0x3017aded62c4a2b9707f5f06f92934e592c1c9b6f384b91b51340a6d5f841931",
        "urls": [
          "bzz-raw://bb693afc2a614ec7afee965caaf5d53c3f32644e33286f60d17ae0e9aca84d44",
          "dweb:/ipfs/QmVJy43EBWvVT5NgpsV8WJfDHtZbnqZGMhmv1WbWaV5dJV"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/math/MathUpgradeable.sol": {
        "keccak256": "0xc1bd5b53319c68f84e3becd75694d941e8f4be94049903232cd8bc7c535aaa5a",
        "urls": [
          "bzz-raw://056027a78e6f4b78a39be530983551651ee5a052e786ca2c1c6a3bb1222b03b4",
          "dweb:/ipfs/QmXRUpywAqNwAfXS89vrtiE2THRM9dX9pQ4QxAkV1Wx9kt"
        ],
        "license": "MIT"
      },
      "src/tenderswap/LiquidityPoolToken.sol": {
        "keccak256": "0xe3a13689f1edd25f26d28b18ea65512344a4dd3ac0e71c59d6ac2a93ee1c2b1a",
        "urls": [
          "bzz-raw://5680de49d1616e7681eab73e23a7917bd9427ff2e103f2ef311a8ca82dd68909",
          "dweb:/ipfs/QmSrvimPs5eLr14wqP4i5hxs6FN9ZNEeaHnQ9m3FBrSyde"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/tenderswap/LiquidityPoolToken.sol",
    "id": 34078,
    "exportedSymbols": {
      "AddressUpgradeable": [
        30089
      ],
      "ContextUpgradeable": [
        30131
      ],
      "CountersUpgradeable": [
        30205
      ],
      "ECDSAUpgradeable": [
        30741
      ],
      "EIP712Upgradeable": [
        30891
      ],
      "ERC20BurnableUpgradeable": [
        29553
      ],
      "ERC20PermitUpgradeable": [
        29769
      ],
      "ERC20Upgradeable": [
        29411
      ],
      "IERC20MetadataUpgradeable": [
        29578
      ],
      "IERC20PermitUpgradeable": [
        29805
      ],
      "IERC20Upgradeable": [
        29489
      ],
      "Initializable": [
        28726
      ],
      "LiquidityPoolToken": [
        34077
      ],
      "MathUpgradeable": [
        31756
      ],
      "OwnableUpgradeable": [
        28557
      ],
      "StringsUpgradeable": [
        30380
      ]
    },
    "nodeType": "SourceUnit",
    "src": "100:1506:46",
    "nodes": [
      {
        "id": 34009,
        "nodeType": "PragmaDirective",
        "src": "100:23:46",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 34010,
        "nodeType": "ImportDirective",
        "src": "129:97:46",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/ERC20BurnableUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34078,
        "sourceUnit": 29554,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 34011,
        "nodeType": "ImportDirective",
        "src": "228:75:46",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34078,
        "sourceUnit": 28558,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 34012,
        "nodeType": "ImportDirective",
        "src": "305:101:46",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34078,
        "sourceUnit": 29770,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 34077,
        "nodeType": "ContractDefinition",
        "src": "410:1194:46",
        "nodes": [
          {
            "id": 34053,
            "nodeType": "FunctionDefinition",
            "src": "832:339:46",
            "nodes": [],
            "body": {
              "id": 34052,
              "nodeType": "Block",
              "src": "930:241:46",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 34030,
                      "name": "__Context_init_unchained",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30107,
                      "src": "941:24:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 34031,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "941:26:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34032,
                  "nodeType": "ExpressionStatement",
                  "src": "941:26:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 34034,
                        "name": "name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34021,
                        "src": "1001:4:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 34035,
                        "name": "symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34023,
                        "src": "1007:6:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 34033,
                      "name": "__ERC20_init_unchained",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28864,
                      "src": "978:22:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 34036,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "978:36:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34037,
                  "nodeType": "ExpressionStatement",
                  "src": "978:36:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 34039,
                        "name": "name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34021,
                        "src": "1049:4:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 34040,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1055:3:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6",
                          "typeString": "literal_string \"1\""
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6",
                          "typeString": "literal_string \"1\""
                        }
                      ],
                      "id": 34038,
                      "name": "__EIP712_init_unchained",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30809,
                      "src": "1025:23:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 34041,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1025:34:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34042,
                  "nodeType": "ExpressionStatement",
                  "src": "1025:34:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 34044,
                        "name": "name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34021,
                        "src": "1099:4:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 34043,
                      "name": "__ERC20Permit_init_unchained",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29634,
                      "src": "1070:28:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 34045,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1070:34:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34046,
                  "nodeType": "ExpressionStatement",
                  "src": "1070:34:46"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 34047,
                      "name": "__Ownable_init_unchained",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28463,
                      "src": "1115:24:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 34048,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1115:26:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34049,
                  "nodeType": "ExpressionStatement",
                  "src": "1115:26:46"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 34050,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1159:4:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 34029,
                  "id": 34051,
                  "nodeType": "Return",
                  "src": "1152:11:46"
                }
              ]
            },
            "documentation": {
              "id": 34019,
              "nodeType": "StructuredDocumentation",
              "src": "517:309:46",
              "text": " @notice Initializes this LPToken contract with the given name and symbol\n @dev The caller of this function will become the owner. A Swap contract should call this\n in its initializer function.\n @param name name of this token\n @param symbol symbol of this token"
            },
            "functionSelector": "4cd88b76",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 34026,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 34025,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 28628,
                  "src": "903:11:46"
                },
                "nodeType": "ModifierInvocation",
                "src": "903:11:46"
              }
            ],
            "name": "initialize",
            "nameLocation": "841:10:46",
            "parameters": {
              "id": 34024,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34021,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "866:4:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 34053,
                  "src": "852:18:46",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 34020,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "852:6:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34023,
                  "mutability": "mutable",
                  "name": "symbol",
                  "nameLocation": "886:6:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 34053,
                  "src": "872:20:46",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 34022,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "872:6:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "851:42:46"
            },
            "returnParameters": {
              "id": 34029,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34028,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 34053,
                  "src": "924:4:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 34027,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "924:4:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "923:6:46"
            },
            "scope": 34077,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 34076,
            "nodeType": "FunctionDefinition",
            "src": "1433:168:46",
            "nodes": [],
            "body": {
              "id": 34075,
              "nodeType": "Block",
              "src": "1501:100:46",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 34066,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 34064,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34058,
                          "src": "1520:6:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 34065,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1530:1:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1520:11:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4c50546f6b656e3a2063616e6e6f74206d696e742030",
                        "id": 34067,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1533:24:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ed34f82a9e5f1c19797c90dabe69af55fd60996fe9929040c5fdcf768caac1bc",
                          "typeString": "literal_string \"LPToken: cannot mint 0\""
                        },
                        "value": "LPToken: cannot mint 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ed34f82a9e5f1c19797c90dabe69af55fd60996fe9929040c5fdcf768caac1bc",
                          "typeString": "literal_string \"LPToken: cannot mint 0\""
                        }
                      ],
                      "id": 34063,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1512:7:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 34068,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1512:46:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34069,
                  "nodeType": "ExpressionStatement",
                  "src": "1512:46:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 34071,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34056,
                        "src": "1575:9:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 34072,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34058,
                        "src": "1586:6:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 34070,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29223,
                      "src": "1569:5:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 34073,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1569:24:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34074,
                  "nodeType": "ExpressionStatement",
                  "src": "1569:24:46"
                }
              ]
            },
            "documentation": {
              "id": 34054,
              "nodeType": "StructuredDocumentation",
              "src": "1179:246:46",
              "text": " @notice Mints the given amount of LPToken to the recipient.\n @dev only owner can call this mint function.\n @param recipient address of account to receive the tokens\n @param amount amount of tokens to mint"
            },
            "functionSelector": "40c10f19",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 34061,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 34060,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 28471,
                  "src": "1491:9:46"
                },
                "nodeType": "ModifierInvocation",
                "src": "1491:9:46"
              }
            ],
            "name": "mint",
            "nameLocation": "1442:4:46",
            "parameters": {
              "id": 34059,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34056,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "1455:9:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 34076,
                  "src": "1447:17:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 34055,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1447:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34058,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1474:6:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 34076,
                  "src": "1466:14:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34057,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1466:7:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1446:35:46"
            },
            "returnParameters": {
              "id": 34062,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1501:0:46"
            },
            "scope": 34077,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 34013,
              "name": "OwnableUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 28557,
              "src": "441:18:46"
            },
            "id": 34014,
            "nodeType": "InheritanceSpecifier",
            "src": "441:18:46"
          },
          {
            "baseName": {
              "id": 34015,
              "name": "ERC20BurnableUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 29553,
              "src": "461:24:46"
            },
            "id": 34016,
            "nodeType": "InheritanceSpecifier",
            "src": "461:24:46"
          },
          {
            "baseName": {
              "id": 34017,
              "name": "ERC20PermitUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 29769,
              "src": "487:22:46"
            },
            "id": 34018,
            "nodeType": "InheritanceSpecifier",
            "src": "487:22:46"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          34077,
          29769,
          30891,
          29805,
          29553,
          29411,
          29578,
          29489,
          28557,
          30131,
          28726
        ],
        "name": "LiquidityPoolToken",
        "nameLocation": "419:18:46",
        "scope": 34078,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 46
}