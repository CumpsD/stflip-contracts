{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "provider",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256[2]",
          "name": "tokenAmounts",
          "type": "uint256[2]"
        },
        {
          "indexed": false,
          "internalType": "uint256[2]",
          "name": "fees",
          "type": "uint256[2]"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "invariant",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "lpTokenSupply",
          "type": "uint256"
        }
      ],
      "name": "AddLiquidity",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newAdminFee",
          "type": "uint256"
        }
      ],
      "name": "NewAdminFee",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newSwapFee",
          "type": "uint256"
        }
      ],
      "name": "NewSwapFee",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldA",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newA",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "initialTime",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "futureTime",
          "type": "uint256"
        }
      ],
      "name": "RampA",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "provider",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256[2]",
          "name": "tokenAmounts",
          "type": "uint256[2]"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "lpTokenSupply",
          "type": "uint256"
        }
      ],
      "name": "RemoveLiquidity",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "provider",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256[2]",
          "name": "tokenAmounts",
          "type": "uint256[2]"
        },
        {
          "indexed": false,
          "internalType": "uint256[2]",
          "name": "fees",
          "type": "uint256[2]"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "invariant",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "lpTokenSupply",
          "type": "uint256"
        }
      ],
      "name": "RemoveLiquidityImbalance",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "provider",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "lpTokenAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "lpTokenSupply",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "contract IERC20",
          "name": "tokenReceived",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "receivedAmount",
          "type": "uint256"
        }
      ],
      "name": "RemoveLiquidityOne",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "currentA",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        }
      ],
      "name": "StopRampA",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "contract IERC20",
          "name": "tokenSold",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountSold",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountReceived",
          "type": "uint256"
        }
      ],
      "name": "Swap",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[2]",
          "name": "_amounts",
          "type": "uint256[2]"
        },
        {
          "internalType": "uint256",
          "name": "_minToMint",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_deadline",
          "type": "uint256"
        }
      ],
      "name": "addLiquidity",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "amplificationParams",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "initialA",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "futureA",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "initialATime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "futureATime",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "calculateRemoveLiquidity",
      "outputs": [
        {
          "internalType": "uint256[2]",
          "name": "",
          "type": "uint256[2]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenAmount",
          "type": "uint256"
        },
        {
          "internalType": "contract IERC20",
          "name": "tokenReceive",
          "type": "address"
        }
      ],
      "name": "calculateRemoveLiquidityOneToken",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "_tokenFrom",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_dx",
          "type": "uint256"
        }
      ],
      "name": "calculateSwap",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        },
        {
          "internalType": "bool",
          "name": "deposit",
          "type": "bool"
        }
      ],
      "name": "calculateTokenAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feeParams",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "swapFee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "adminFee",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getA",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAPrecise",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getToken0",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getToken0Balance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getToken1",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getToken1Balance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getVirtualPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "_token0",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "_token1",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "lpTokenName",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "lpTokenSymbol",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_a",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_fee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_adminFee",
          "type": "uint256"
        },
        {
          "internalType": "contract LiquidityPoolToken",
          "name": "lpTokenTargetAddress",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lpToken",
      "outputs": [
        {
          "internalType": "contract LiquidityPoolToken",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes[]",
          "name": "_data",
          "type": "bytes[]"
        }
      ],
      "name": "multicall",
      "outputs": [
        {
          "internalType": "bytes[]",
          "name": "results",
          "type": "bytes[]"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "futureA",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "futureTime",
          "type": "uint256"
        }
      ],
      "name": "rampA",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256[2]",
          "name": "minAmounts",
          "type": "uint256[2]"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "name": "removeLiquidity",
      "outputs": [
        {
          "internalType": "uint256[2]",
          "name": "",
          "type": "uint256[2]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[2]",
          "name": "_amounts",
          "type": "uint256[2]"
        },
        {
          "internalType": "uint256",
          "name": "_maxBurnAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_deadline",
          "type": "uint256"
        }
      ],
      "name": "removeLiquidityImbalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenAmount",
          "type": "uint256"
        },
        {
          "internalType": "contract IERC20",
          "name": "_tokenReceive",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_minAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_deadline",
          "type": "uint256"
        }
      ],
      "name": "removeLiquidityOneToken",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_deadline",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "_v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "_r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "_s",
          "type": "bytes32"
        }
      ],
      "name": "selfPermit",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_deadline",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "_v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "_r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "_s",
          "type": "bytes32"
        }
      ],
      "name": "selfPermitIfNecessary",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newAdminFee",
          "type": "uint256"
        }
      ],
      "name": "setAdminFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newSwapFee",
          "type": "uint256"
        }
      ],
      "name": "setSwapFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stopRampA",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "_tokenFrom",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_dx",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_minDy",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_deadline",
          "type": "uint256"
        }
      ],
      "name": "swap",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newOwnner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b50612ebe806100206000396000f3fe6080604052600436106101cd5760003560e01c8063afcd5f4b116100f7578063ce1fdb8b11610095578063e6ab280611610064578063e6ab28061461052f578063f2fad2b61461054f578063f2fde38b1461056f578063f3995c671461058f57600080fd5b8063ce1fdb8b146104b8578063d46300fd146104d8578063d6f0df62146104ed578063e25aa5fa1461051a57600080fd5b8063c2d9ecfa116100d1578063c2d9ecfa1461045b578063c2e3140a14610470578063c4db7fa014610483578063c9ec92481461049857600080fd5b8063afcd5f4b146103ed578063ba94a3151461041d578063bfc65c9b1461043b57600080fd5b80635fcbd2851161016f5780638beb60b61161013e5780638beb60b61461035f5780638da5cb5b1461037f5780639242164f1461039d578063ac9650d8146103cd57600080fd5b80635fcbd285146102d45780636f26a7101461030c578063715018a61461032a578063805d27661461033f57600080fd5b806334e19907116101ab57806334e199071461025d57806346eda7491461027f5780635153786b1461029f578063593d132c146102b457600080fd5b80630ba81959146101d25780631de8d8cb146101fa578063256967ac1461021a575b600080fd5b3480156101de57600080fd5b506101e76105a2565b6040519081526020015b60405180910390f35b34801561020657600080fd5b506101e76102153660046123d1565b61061f565b34801561022657600080fd5b50609954609a54609b54609c5461023d9392919084565b6040805194855260208501939093529183015260608201526080016101f1565b34801561026957600080fd5b5061027d6102783660046123fd565b610765565b005b34801561028b57600080fd5b506101e761029a366004612427565b6107db565b3480156102ab57600080fd5b506101e76108d4565b3480156102c057600080fd5b5061027d6102cf36600461245b565b61090f565b3480156102e057600080fd5b5060a1546102f4906001600160a01b031681565b6040516001600160a01b0390911681526020016101f1565b34801561031857600080fd5b50609f546001600160a01b03166102f4565b34801561033657600080fd5b5061027d61098c565b34801561034b57600080fd5b506101e761035a36600461247d565b6109a0565b34801561036b57600080fd5b5061027d61037a3660046123fd565b6109fe565b34801561038b57600080fd5b506033546001600160a01b03166102f4565b3480156103a957600080fd5b506097546098546103b8919082565b604080519283526020830191909152016101f1565b6103e06103db3660046124f9565b610a45565b6040516101f1919061258b565b3480156103f957600080fd5b5061040d6104083660046126b2565b610ba6565b60405190151581526020016101f1565b34801561042957600080fd5b50609d546001600160a01b03166102f4565b34801561044757600080fd5b506101e7610456366004612427565b61115a565b34801561046757600080fd5b506101e76111fd565b61027d61047e36600461277c565b611238565b34801561048f57600080fd5b5061027d6112d3565b3480156104a457600080fd5b506101e76104b33660046127d8565b611340565b3480156104c457600080fd5b506101e76104d3366004612813565b6114c6565b3480156104e457600080fd5b506101e7611594565b3480156104f957600080fd5b5061050d610508366004612850565b6115cf565b6040516101f19190612886565b34801561052657600080fd5b506101e76116af565b34801561053b57600080fd5b506101e761054a3660046128c5565b61170b565b34801561055b57600080fd5b5061050d61056a3660046123fd565b6117e2565b34801561057b57600080fd5b5061027d61058a36600461291c565b6118b1565b61027d61059d36600461277c565b6118c5565b604051632eae27cb60e11b81526099600482015260009073__$cbcc74385362534c50df661ce3578a62af$__90635d5c4f96906024015b602060405180830381865af41580156105f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061061a9190612939565b905090565b609d546000906001600160a01b038481169116146106cc5760405163072a9be960e51b8152609f6004820152609d602482015260448101839052609960648201526097608482015273__$cbcc74385362534c50df661ce3578a62af$__9063e5537d209060a401602060405180830381865af41580156106a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106c79190612939565b61075c565b60405163072a9be960e51b8152609d6004820152609f602482015260448101839052609960648201526097608482015273__$cbcc74385362534c50df661ce3578a62af$__9063e5537d209060a401602060405180830381865af4158015610738573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061075c9190612939565b90505b92915050565b61076d611951565b60405163112d146760e21b8152609760048201526024810182905273__$cbcc74385362534c50df661ce3578a62af$__906344b4519c906044015b60006040518083038186803b1580156107c057600080fd5b505af41580156107d4573d6000803e3d6000fd5b5050505050565b60006107e56119ab565b816107ef81611a04565b60408051608081018252609d546001600160a01b03908116828401908152609e546060840152825282518084018452609f548216815260a05460208281019190915283015260a1549251632d5299f760e11b8152919273__$cbcc74385362534c50df661ce3578a62af$__92635aa533ee9261087e9286928c928c92609992609792919091169060040161298a565b602060405180830381865af415801561089b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108bf9190612939565b925050506108cd6001606555565b9392505050565b60405163366318fd60e11b8152609f600482015260009073__$cbcc74385362534c50df661ce3578a62af$__90636cc631fa906024016105d9565b610917611951565b6040516314f685c360e01b815260996004820152602481018390526044810182905273__$cbcc74385362534c50df661ce3578a62af$__906314f685c39060640160006040518083038186803b15801561097057600080fd5b505af4158015610984573d6000803e3d6000fd5b505050505050565b610994611951565b61099e6000611a4e565b565b609d546000906001600160a01b038381169116146109db5760a1546106c7908490609f90609d906099906097906001600160a01b0316611aa0565b60a15461075c908490609d90609f906099906097906001600160a01b0316611aa0565b610a06611951565b6040516327d0477560e01b8152609760048201526024810182905273__$cbcc74385362534c50df661ce3578a62af$__906327d04775906044016107a8565b60608167ffffffffffffffff811115610a6057610a606125ed565b604051908082528060200260200182016040528015610a9357816020015b6060815260200190600190039081610a7e5790505b50905060005b82811015610b9f5760008030868685818110610ab757610ab76129d0565b9050602002810190610ac991906129e6565b604051610ad7929190612a2d565b600060405180830381855af49150503d8060008114610b12576040519150601f19603f3d011682016040523d82523d6000602084013e610b17565b606091505b509150915081610b6c57604481511015610b3057600080fd5b60048101905080806020019051810190610b4a9190612a3d565b60405162461bcd60e51b8152600401610b639190612aab565b60405180910390fd5b80848481518110610b7f57610b7f6129d0565b602002602001018190525050508080610b9790612ad4565b915050610a99565b5092915050565b60008054610100900460ff1615808015610bc75750600054600160ff909116105b80610be15750303b158015610be1575060005460ff166001145b610c445760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610b63565b6000805460ff191660011790558015610c67576000805461ff0019166101001790555b610c6f611b12565b610c77611b39565b610c7f611b69565b886001600160a01b03168a6001600160a01b031603610cd35760405162461bcd60e51b815260206004820152601060248201526f4455504c49434154455f544f4b454e5360801b6044820152606401610b63565b6001600160a01b038a16610d1e5760405162461bcd60e51b8152602060048201526012602482015271544f4b454e305f5a45524f4144445245535360701b6044820152606401610b63565b6001600160a01b038916610d695760405162461bcd60e51b8152602060048201526012602482015271544f4b454e315f5a45524f4144445245535360701b6044820152606401610b63565b60008a6001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610da9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dcd9190612aed565b905060008160ff1611610ddf57600080fd5b60405180604001604052808c6001600160a01b03168152602001826012610e069190612b0a565b610e1190600a612c07565b90528051609d80546001600160a01b0319166001600160a01b03928316179055602091820151609e556040805163313ce56760e01b81529051600093928e169263313ce56792600480820193918290030181865afa158015610e77573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e9b9190612aed565b905060008160ff1611610ead57600080fd5b60405180604001604052808c6001600160a01b03168152602001826012610ed49190612b0a565b610edf90600a612c07565b90528051609f80546001600160a01b0319166001600160a01b039092169190911790556020015160a055620f42408810610f505760405162461bcd60e51b81526020600482015260126024820152715f612065786365656473206d6178696d756d60701b6044820152606401610b63565b610f5b606489612c16565b609955610f69606489612c16565b609a556305f5e1008710610fb65760405162461bcd60e51b81526020600482015260146024820152735f6665652065786365656473206d6178696d756d60601b6044820152606401610b63565b6402540be400861061100a5760405162461bcd60e51b815260206004820152601960248201527f5f61646d696e4665652065786365656473206d6178696d756d000000000000006044820152606401610b63565b604080518082019091528781526020018690526097879055609886905561103085611b90565b60a180546001600160a01b0319166001600160a01b0392909216918217905560405163266c45bb60e11b8152634cd88b7690611072908d908d90600401612c2d565b6020604051808303816000875af1158015611091573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110b59190612c52565b6111015760405162461bcd60e51b815260206004820152601c60248201527f636f756c64206e6f7420696e6974206c70546f6b656e20636c6f6e65000000006044820152606401610b63565b600193505050801561114d576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5098975050505050505050565b60006111646119ab565b8161116e81611a04565b60408051608081018252609d546001600160a01b03908116828401908152609e546060840152825282518084018452609f548216815260a05460208281019190915283015260a1549251630175961160e11b8152919273__$cbcc74385362534c50df661ce3578a62af$__926302eb2c229261087e9286928c928c92609992609792919091169060040161298a565b60405163366318fd60e11b8152609d600482015260009073__$cbcc74385362534c50df661ce3578a62af$__90636cc631fa906024016105d9565b604051636eb1769f60e11b81523360048201523060248201526000906001600160a01b0388169063dd62ed3e90604401602060405180830381865afa158015611285573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112a99190612939565b9050858110156112ca576112ca876112c18389612c6f565b878787876118c5565b50505050505050565b6112db611951565b60405163b0845bc560e01b81526099600482015273__$cbcc74385362534c50df661ce3578a62af$__9063b0845bc59060240160006040518083038186803b15801561132657600080fd5b505af415801561133a573d6000803e3d6000fd5b50505050565b600061134a6119ab565b8161135481611a04565b609d546001600160a01b03908116908716036114095760405163cbab294f60e01b8152609d6004820152609f6024820152604481018690526064810185905260996084820152609760a482015273__$cbcc74385362534c50df661ce3578a62af$__9063cbab294f9060c4015b602060405180830381865af41580156113de573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114029190612939565b91506114b3565b609f546001600160a01b039081169087160361147a5760405163cbab294f60e01b8152609f6004820152609d6024820152604481018690526064810185905260996084820152609760a482015273__$cbcc74385362534c50df661ce3578a62af$__9063cbab294f9060c4016113c1565b60405162461bcd60e51b815260206004820152600e60248201526d4241445f544f4b454e5f46524f4d60901b6044820152606401610b63565b506114be6001606555565b949350505050565b60006114d06119ab565b816114da81611a04565b609d546001600160a01b03908116908616036115425760a1546040516353d5d9cb60e11b815273__$cbcc74385362534c50df661ce3578a62af$__9163a7abb396916113c1918a91609d91609f918b916099916097916001600160a01b031690600401612c82565b60a1546040516353d5d9cb60e11b815273__$cbcc74385362534c50df661ce3578a62af$__9163a7abb396916113c1918a91609f91609d918b916099916097916001600160a01b031690600401612c82565b604051633057705f60e21b81526099600482015260009073__$cbcc74385362534c50df661ce3578a62af$__9063c15dc17c906024016105d9565b6115d761239e565b6115df6119ab565b816115e981611a04565b60408051608081018252609d546001600160a01b03908116828401908152609e546060840152825282518084018452609f548216815260a05460208281019190915283015260a1549251632657942960e01b8152919273__$cbcc74385362534c50df661ce3578a62af$__9263265794299261166f928b9287928c921690600401612cbb565b6040805180830381865af415801561168b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108bf9190612cf2565b60a154604051631013a0c960e31b8152609d6004820152609f6024820152609960448201526001600160a01b03909116606482015260009073__$cbcc74385362534c50df661ce3578a62af$__9063809d0648906084016105d9565b60408051608081018252609d546001600160a01b03908116828401908152609e546060840152825282518084018452609f548216815260a05460208281019190915283015260a154925163196d005960e31b815260009373__$cbcc74385362534c50df661ce3578a62af$__9263cb6802c8926117989286928b928b928b92609992911690600401612d72565b602060405180830381865af41580156117b5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117d99190612939565b95945050505050565b6117ea61239e565b60408051608081018252609d546001600160a01b03908116828401908152609e546060840152825282518084018452609f548216815260a05460208281019190915283015260a154925163296104cd60e01b8152919273__$cbcc74385362534c50df661ce3578a62af$__9263296104cd9261187192889287929190911690600401612ddb565b6040805180830381865af415801561188d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108cd9190612cf2565b6118b9611951565b6118c281611c2a565b50565b60405163d505accf60e01b8152336004820152306024820152604481018690526064810185905260ff8416608482015260a4810183905260c481018290526001600160a01b0387169063d505accf9060e401600060405180830381600087803b15801561193157600080fd5b505af1158015611945573d6000803e3d6000fd5b50505050505050505050565b6033546001600160a01b0316331461099e5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610b63565b6002606554036119fd5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610b63565b6002606555565b804211156118c25760405162461bcd60e51b815260206004820152601060248201526f111958591b1a5b99481b9bdd081b595d60821b6044820152606401610b63565b6001606555565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60008061114d888888866001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611ae7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b0b9190612939565b8989611ca0565b600054610100900460ff1661099e5760405162461bcd60e51b8152600401610b6390612e08565b600054610100900460ff16611b605760405162461bcd60e51b8152600401610b6390612e08565b61099e33611a4e565b600054610100900460ff16611a475760405162461bcd60e51b8152600401610b6390612e08565b6000763d602d80600a3d3981f3363d3d373d3d3d363d730000008260601b60e81c176000526e5af43d82803e903d91602b57fd5bf38260781b17602052603760096000f090506001600160a01b038116611c255760405162461bcd60e51b8152602060048201526016602482015275115490cc4c4d8dce8818dc99585d194819985a5b195960521b6044820152606401610b63565b919050565b611c32611951565b6001600160a01b038116611c975760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610b63565b6118c281611a4e565b6000806000806000611cbf8b8b8b8b611cb88c611d02565b8b54611da9565b60018d015492955090935091506000908490611cdb8585612c6f565b611ce59190612e53565b611cef9190612c6f565b939c939b50929950505050505050505050565b6003810154600182015460009190428211156108cd576002840154845480831115611d6d57611d318285612c6f565b611d3b8342612c6f565b611d458386612c6f565b611d4f9190612c16565b611d599190612e53565b611d639082612e75565b9695505050505050565b611d778285612c6f565b611d818342612c6f565b611d8b8584612c6f565b611d959190612c16565b611d9f9190612e53565b611d639082612c6f565b8454600090819081908190611dc6906001600160a01b0316611ff6565b90506000611dd8828b60010154612061565b8954909150600090611df2906001600160a01b0316611ff6565b90506000611e04828c60010154612061565b6040805160a0810182526000808252602082018190529181018290526060810191909152608081018b9052909150611e3d82858c61206d565b8160000181815250508a81600001518f611e579190612c16565b611e619190612e53565b8151611e6d9190612c6f565b6020820152838e1115611ec25760405162461bcd60e51b815260206004820152601860248201527f414d4f554e545f455843454544535f415641494c41424c4500000000000000006044820152606401610b63565b611ed581608001518383602001516121f4565b6040820152611ee389612355565b606082018190526040820151825160208401516000936402540be4009390929091611f0e908a612c16565b611f189190612e53565b611f229190612c6f565b611f2c9190612c16565b611f369190612e53565b611f409086612c6f565b905060006402540be40083606001518460000151856020015187611f649190612c16565b611f6e9190612e53565b611f789087612c6f565b611f829190612c16565b611f8c9190612e53565b611f969085612c6f565b90506000611fad84608001518386602001516121f4565b611fb79084612c6f565b90508f60010154600182611fcb9190612c6f565b611fd59190612e53565b604090940151939a5092985094965050505050505096509650969350505050565b6040516370a0823160e01b81523060048201526000906001600160a01b038316906370a0823190602401602060405180830381865afa15801561203d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061075f9190612939565b600061075c8284612c16565b60008061207a8486612e75565b90508060000361208e5760009150506108cd565b6000818161209d600287612c16565b905060005b6101008110156121b557826120b860028b612c16565b6120c28583612c16565b6120cc9190612e53565b90506120d960028a612c16565b6120e38583612c16565b6120ed9190612e53565b90508394506000846002836121029190612c16565b606461210e8a88612c16565b6121189190612e53565b6121229190612e75565b61212c9190612c16565b905060008261213d60026001612e75565b6121479190612c16565b6064876121548289612c6f565b61215e9190612c16565b6121689190612e53565b6121729190612e75565b905061217e8183612e53565b955061218a8688612362565b1561219f5785985050505050505050506108cd565b50505080806121ad90612ad4565b9150506120a2565b5060405162461bcd60e51b81526020600482015260136024820152724420646f6573206e6f7420636f6e766572676560681b6044820152606401610b63565b600080612202600285612c16565b61220c8480612c16565b6122169190612e53565b9050836000612226600288612c16565b9050612233600282612c16565b606461223f8786612c16565b6122499190612c16565b6122539190612e53565b9250600081612263606488612c16565b61226d9190612e53565b6122779084612e75565b9050600086815b61010081101561230c57819250600087838461229a9190612c16565b6122a49190612e75565b905060008a866122b5866002612c16565b6122bf9190612e75565b6122c99190612c6f565b90506122d58183612e53565b93506122e18486612362565b156122f7578399505050505050505050506108cd565b5050808061230490612ad4565b91505061227e565b5060405162461bcd60e51b815260206004820152601e60248201527f417070726f78696d6174696f6e20646964206e6f7420636f6e766572676500006044820152606401610b63565b600061075f600283612e53565b600060016123708484612379565b11159392505050565b6000818311156123945761238d8284612c6f565b905061075f565b61075c8383612c6f565b60405180604001604052806002906020820280368337509192915050565b6001600160a01b03811681146118c257600080fd5b600080604083850312156123e457600080fd5b82356123ef816123bc565b946020939093013593505050565b60006020828403121561240f57600080fd5b5035919050565b806040810183101561075f57600080fd5b60008060006080848603121561243c57600080fd5b6124468585612416565b95604085013595506060909401359392505050565b6000806040838503121561246e57600080fd5b50508035926020909101359150565b6000806040838503121561249057600080fd5b8235915060208301356124a2816123bc565b809150509250929050565b60008083601f8401126124bf57600080fd5b50813567ffffffffffffffff8111156124d757600080fd5b6020830191508360208260051b85010111156124f257600080fd5b9250929050565b6000806020838503121561250c57600080fd5b823567ffffffffffffffff81111561252357600080fd5b61252f858286016124ad565b90969095509350505050565b60005b8381101561255657818101518382015260200161253e565b50506000910152565b6000815180845261257781602086016020860161253b565b601f01601f19169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156125e057603f198886030184526125ce85835161255f565b945092850192908501906001016125b2565b5092979650505050505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561262c5761262c6125ed565b604052919050565b600067ffffffffffffffff82111561264e5761264e6125ed565b50601f01601f191660200190565b600082601f83011261266d57600080fd5b813561268061267b82612634565b612603565b81815284602083860101111561269557600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600080600080610100898b0312156126cf57600080fd5b88356126da816123bc565b975060208901356126ea816123bc565b9650604089013567ffffffffffffffff8082111561270757600080fd5b6127138c838d0161265c565b975060608b013591508082111561272957600080fd5b506127368b828c0161265c565b9550506080890135935060a0890135925060c0890135915060e089013561275c816123bc565b809150509295985092959890939650565b60ff811681146118c257600080fd5b60008060008060008060c0878903121561279557600080fd5b86356127a0816123bc565b9550602087013594506040870135935060608701356127be8161276d565b9598949750929560808101359460a0909101359350915050565b600080600080608085870312156127ee57600080fd5b84356127f9816123bc565b966020860135965060408601359560600135945092505050565b6000806000806080858703121561282957600080fd5b84359350602085013561283b816123bc565b93969395505050506040820135916060013590565b60008060006080848603121561286557600080fd5b833592506128768560208601612416565b9150606084013590509250925092565b60408101818360005b60028110156128ae57815183526020928301929091019060010161288f565b50505092915050565b80151581146118c257600080fd5b6000806000604084860312156128da57600080fd5b833567ffffffffffffffff8111156128f157600080fd5b6128fd868287016124ad565b9094509250506020840135612911816128b7565b809150509250925092565b60006020828403121561292e57600080fd5b81356108cd816123bc565b60006020828403121561294b57600080fd5b5051919050565b8060005b600281101561133a57815180516001600160a01b031685526020908101518186015260409094019390910190600101612956565b61014081016129998289612952565b604087608084013760c082019590955260e08101939093526101008301919091526001600160a01b03166101209091015292915050565b634e487b7160e01b600052603260045260246000fd5b6000808335601e198436030181126129fd57600080fd5b83018035915067ffffffffffffffff821115612a1857600080fd5b6020019150368190038213156124f257600080fd5b8183823760009101908152919050565b600060208284031215612a4f57600080fd5b815167ffffffffffffffff811115612a6657600080fd5b8201601f81018413612a7757600080fd5b8051612a8561267b82612634565b818152856020838501011115612a9a57600080fd5b6117d982602083016020860161253b565b60208152600061075c602083018461255f565b634e487b7160e01b600052601160045260246000fd5b600060018201612ae657612ae6612abe565b5060010190565b600060208284031215612aff57600080fd5b81516108cd8161276d565b60ff828116828216039081111561075f5761075f612abe565b600181815b80851115612b5e578160001904821115612b4457612b44612abe565b80851615612b5157918102915b93841c9390800290612b28565b509250929050565b600082612b755750600161075f565b81612b825750600061075f565b8160018114612b985760028114612ba257612bbe565b600191505061075f565b60ff841115612bb357612bb3612abe565b50506001821b61075f565b5060208310610133831016604e8410600b8410161715612be1575081810a61075f565b612beb8383612b23565b8060001904821115612bff57612bff612abe565b029392505050565b600061075c60ff841683612b66565b808202811582820484141761075f5761075f612abe565b604081526000612c40604083018561255f565b82810360208401526117d9818561255f565b600060208284031215612c6457600080fd5b81516108cd816128b7565b8181038181111561075f5761075f612abe565b968752602087019590955260408601939093526060850191909152608084015260a08301526001600160a01b031660c082015260e00190565b8481526101008101612cd06020830186612952565b60408460a08401376001600160a01b039290921660e091909101529392505050565b600060408284031215612d0457600080fd5b82601f830112612d1357600080fd5b6040516040810181811067ffffffffffffffff82111715612d3657612d366125ed565b8060405250806040840185811115612d4d57600080fd5b845b81811015612d67578051835260209283019201612d4f565b509195945050505050565b6000610100612d81838a612952565b6080830181905282018690526101206001600160fb1b03871115612da457600080fd5b8660051b80898386013795151560a084015260c0830194909452506001600160a01b039190911660e0820152909101019392505050565b83815260c08101612def6020830185612952565b6001600160a01b039290921660a0919091015292915050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b600082612e7057634e487b7160e01b600052601260045260246000fd5b500490565b8082018082111561075f5761075f612abe56fea26469706673582212208ad30bcfbd1031906bdc14ade4b65d25086b44e5878873a704eb82b05bf83aaf64736f6c63430008130033",
    "sourceMap": "1208:10376:40:-:0;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {
      "src/tenderswap/SwapUtils.sol": {
        "SwapUtils": [
          {
            "start": 1499,
            "length": 20
          },
          {
            "start": 1673,
            "length": 20
          },
          {
            "start": 1822,
            "length": 20
          },
          {
            "start": 1962,
            "length": 20
          },
          {
            "start": 2151,
            "length": 20
          },
          {
            "start": 2317,
            "length": 20
          },
          {
            "start": 2395,
            "length": 20
          },
          {
            "start": 2627,
            "length": 20
          },
          {
            "start": 4582,
            "length": 20
          },
          {
            "start": 4662,
            "length": 20
          },
          {
            "start": 4881,
            "length": 20
          },
          {
            "start": 5059,
            "length": 20
          },
          {
            "start": 5240,
            "length": 20
          },
          {
            "start": 5410,
            "length": 20
          },
          {
            "start": 5492,
            "length": 20
          },
          {
            "start": 5581,
            "length": 20
          },
          {
            "start": 5729,
            "length": 20
          },
          {
            "start": 5897,
            "length": 20
          },
          {
            "start": 6020,
            "length": 20
          },
          {
            "start": 6242,
            "length": 20
          }
        ]
      }
    }
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106101cd5760003560e01c8063afcd5f4b116100f7578063ce1fdb8b11610095578063e6ab280611610064578063e6ab28061461052f578063f2fad2b61461054f578063f2fde38b1461056f578063f3995c671461058f57600080fd5b8063ce1fdb8b146104b8578063d46300fd146104d8578063d6f0df62146104ed578063e25aa5fa1461051a57600080fd5b8063c2d9ecfa116100d1578063c2d9ecfa1461045b578063c2e3140a14610470578063c4db7fa014610483578063c9ec92481461049857600080fd5b8063afcd5f4b146103ed578063ba94a3151461041d578063bfc65c9b1461043b57600080fd5b80635fcbd2851161016f5780638beb60b61161013e5780638beb60b61461035f5780638da5cb5b1461037f5780639242164f1461039d578063ac9650d8146103cd57600080fd5b80635fcbd285146102d45780636f26a7101461030c578063715018a61461032a578063805d27661461033f57600080fd5b806334e19907116101ab57806334e199071461025d57806346eda7491461027f5780635153786b1461029f578063593d132c146102b457600080fd5b80630ba81959146101d25780631de8d8cb146101fa578063256967ac1461021a575b600080fd5b3480156101de57600080fd5b506101e76105a2565b6040519081526020015b60405180910390f35b34801561020657600080fd5b506101e76102153660046123d1565b61061f565b34801561022657600080fd5b50609954609a54609b54609c5461023d9392919084565b6040805194855260208501939093529183015260608201526080016101f1565b34801561026957600080fd5b5061027d6102783660046123fd565b610765565b005b34801561028b57600080fd5b506101e761029a366004612427565b6107db565b3480156102ab57600080fd5b506101e76108d4565b3480156102c057600080fd5b5061027d6102cf36600461245b565b61090f565b3480156102e057600080fd5b5060a1546102f4906001600160a01b031681565b6040516001600160a01b0390911681526020016101f1565b34801561031857600080fd5b50609f546001600160a01b03166102f4565b34801561033657600080fd5b5061027d61098c565b34801561034b57600080fd5b506101e761035a36600461247d565b6109a0565b34801561036b57600080fd5b5061027d61037a3660046123fd565b6109fe565b34801561038b57600080fd5b506033546001600160a01b03166102f4565b3480156103a957600080fd5b506097546098546103b8919082565b604080519283526020830191909152016101f1565b6103e06103db3660046124f9565b610a45565b6040516101f1919061258b565b3480156103f957600080fd5b5061040d6104083660046126b2565b610ba6565b60405190151581526020016101f1565b34801561042957600080fd5b50609d546001600160a01b03166102f4565b34801561044757600080fd5b506101e7610456366004612427565b61115a565b34801561046757600080fd5b506101e76111fd565b61027d61047e36600461277c565b611238565b34801561048f57600080fd5b5061027d6112d3565b3480156104a457600080fd5b506101e76104b33660046127d8565b611340565b3480156104c457600080fd5b506101e76104d3366004612813565b6114c6565b3480156104e457600080fd5b506101e7611594565b3480156104f957600080fd5b5061050d610508366004612850565b6115cf565b6040516101f19190612886565b34801561052657600080fd5b506101e76116af565b34801561053b57600080fd5b506101e761054a3660046128c5565b61170b565b34801561055b57600080fd5b5061050d61056a3660046123fd565b6117e2565b34801561057b57600080fd5b5061027d61058a36600461291c565b6118b1565b61027d61059d36600461277c565b6118c5565b604051632eae27cb60e11b81526099600482015260009073__$cbcc74385362534c50df661ce3578a62af$__90635d5c4f96906024015b602060405180830381865af41580156105f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061061a9190612939565b905090565b609d546000906001600160a01b038481169116146106cc5760405163072a9be960e51b8152609f6004820152609d602482015260448101839052609960648201526097608482015273__$cbcc74385362534c50df661ce3578a62af$__9063e5537d209060a401602060405180830381865af41580156106a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106c79190612939565b61075c565b60405163072a9be960e51b8152609d6004820152609f602482015260448101839052609960648201526097608482015273__$cbcc74385362534c50df661ce3578a62af$__9063e5537d209060a401602060405180830381865af4158015610738573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061075c9190612939565b90505b92915050565b61076d611951565b60405163112d146760e21b8152609760048201526024810182905273__$cbcc74385362534c50df661ce3578a62af$__906344b4519c906044015b60006040518083038186803b1580156107c057600080fd5b505af41580156107d4573d6000803e3d6000fd5b5050505050565b60006107e56119ab565b816107ef81611a04565b60408051608081018252609d546001600160a01b03908116828401908152609e546060840152825282518084018452609f548216815260a05460208281019190915283015260a1549251632d5299f760e11b8152919273__$cbcc74385362534c50df661ce3578a62af$__92635aa533ee9261087e9286928c928c92609992609792919091169060040161298a565b602060405180830381865af415801561089b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108bf9190612939565b925050506108cd6001606555565b9392505050565b60405163366318fd60e11b8152609f600482015260009073__$cbcc74385362534c50df661ce3578a62af$__90636cc631fa906024016105d9565b610917611951565b6040516314f685c360e01b815260996004820152602481018390526044810182905273__$cbcc74385362534c50df661ce3578a62af$__906314f685c39060640160006040518083038186803b15801561097057600080fd5b505af4158015610984573d6000803e3d6000fd5b505050505050565b610994611951565b61099e6000611a4e565b565b609d546000906001600160a01b038381169116146109db5760a1546106c7908490609f90609d906099906097906001600160a01b0316611aa0565b60a15461075c908490609d90609f906099906097906001600160a01b0316611aa0565b610a06611951565b6040516327d0477560e01b8152609760048201526024810182905273__$cbcc74385362534c50df661ce3578a62af$__906327d04775906044016107a8565b60608167ffffffffffffffff811115610a6057610a606125ed565b604051908082528060200260200182016040528015610a9357816020015b6060815260200190600190039081610a7e5790505b50905060005b82811015610b9f5760008030868685818110610ab757610ab76129d0565b9050602002810190610ac991906129e6565b604051610ad7929190612a2d565b600060405180830381855af49150503d8060008114610b12576040519150601f19603f3d011682016040523d82523d6000602084013e610b17565b606091505b509150915081610b6c57604481511015610b3057600080fd5b60048101905080806020019051810190610b4a9190612a3d565b60405162461bcd60e51b8152600401610b639190612aab565b60405180910390fd5b80848481518110610b7f57610b7f6129d0565b602002602001018190525050508080610b9790612ad4565b915050610a99565b5092915050565b60008054610100900460ff1615808015610bc75750600054600160ff909116105b80610be15750303b158015610be1575060005460ff166001145b610c445760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610b63565b6000805460ff191660011790558015610c67576000805461ff0019166101001790555b610c6f611b12565b610c77611b39565b610c7f611b69565b886001600160a01b03168a6001600160a01b031603610cd35760405162461bcd60e51b815260206004820152601060248201526f4455504c49434154455f544f4b454e5360801b6044820152606401610b63565b6001600160a01b038a16610d1e5760405162461bcd60e51b8152602060048201526012602482015271544f4b454e305f5a45524f4144445245535360701b6044820152606401610b63565b6001600160a01b038916610d695760405162461bcd60e51b8152602060048201526012602482015271544f4b454e315f5a45524f4144445245535360701b6044820152606401610b63565b60008a6001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610da9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dcd9190612aed565b905060008160ff1611610ddf57600080fd5b60405180604001604052808c6001600160a01b03168152602001826012610e069190612b0a565b610e1190600a612c07565b90528051609d80546001600160a01b0319166001600160a01b03928316179055602091820151609e556040805163313ce56760e01b81529051600093928e169263313ce56792600480820193918290030181865afa158015610e77573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e9b9190612aed565b905060008160ff1611610ead57600080fd5b60405180604001604052808c6001600160a01b03168152602001826012610ed49190612b0a565b610edf90600a612c07565b90528051609f80546001600160a01b0319166001600160a01b039092169190911790556020015160a055620f42408810610f505760405162461bcd60e51b81526020600482015260126024820152715f612065786365656473206d6178696d756d60701b6044820152606401610b63565b610f5b606489612c16565b609955610f69606489612c16565b609a556305f5e1008710610fb65760405162461bcd60e51b81526020600482015260146024820152735f6665652065786365656473206d6178696d756d60601b6044820152606401610b63565b6402540be400861061100a5760405162461bcd60e51b815260206004820152601960248201527f5f61646d696e4665652065786365656473206d6178696d756d000000000000006044820152606401610b63565b604080518082019091528781526020018690526097879055609886905561103085611b90565b60a180546001600160a01b0319166001600160a01b0392909216918217905560405163266c45bb60e11b8152634cd88b7690611072908d908d90600401612c2d565b6020604051808303816000875af1158015611091573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110b59190612c52565b6111015760405162461bcd60e51b815260206004820152601c60248201527f636f756c64206e6f7420696e6974206c70546f6b656e20636c6f6e65000000006044820152606401610b63565b600193505050801561114d576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5098975050505050505050565b60006111646119ab565b8161116e81611a04565b60408051608081018252609d546001600160a01b03908116828401908152609e546060840152825282518084018452609f548216815260a05460208281019190915283015260a1549251630175961160e11b8152919273__$cbcc74385362534c50df661ce3578a62af$__926302eb2c229261087e9286928c928c92609992609792919091169060040161298a565b60405163366318fd60e11b8152609d600482015260009073__$cbcc74385362534c50df661ce3578a62af$__90636cc631fa906024016105d9565b604051636eb1769f60e11b81523360048201523060248201526000906001600160a01b0388169063dd62ed3e90604401602060405180830381865afa158015611285573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112a99190612939565b9050858110156112ca576112ca876112c18389612c6f565b878787876118c5565b50505050505050565b6112db611951565b60405163b0845bc560e01b81526099600482015273__$cbcc74385362534c50df661ce3578a62af$__9063b0845bc59060240160006040518083038186803b15801561132657600080fd5b505af415801561133a573d6000803e3d6000fd5b50505050565b600061134a6119ab565b8161135481611a04565b609d546001600160a01b03908116908716036114095760405163cbab294f60e01b8152609d6004820152609f6024820152604481018690526064810185905260996084820152609760a482015273__$cbcc74385362534c50df661ce3578a62af$__9063cbab294f9060c4015b602060405180830381865af41580156113de573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114029190612939565b91506114b3565b609f546001600160a01b039081169087160361147a5760405163cbab294f60e01b8152609f6004820152609d6024820152604481018690526064810185905260996084820152609760a482015273__$cbcc74385362534c50df661ce3578a62af$__9063cbab294f9060c4016113c1565b60405162461bcd60e51b815260206004820152600e60248201526d4241445f544f4b454e5f46524f4d60901b6044820152606401610b63565b506114be6001606555565b949350505050565b60006114d06119ab565b816114da81611a04565b609d546001600160a01b03908116908616036115425760a1546040516353d5d9cb60e11b815273__$cbcc74385362534c50df661ce3578a62af$__9163a7abb396916113c1918a91609d91609f918b916099916097916001600160a01b031690600401612c82565b60a1546040516353d5d9cb60e11b815273__$cbcc74385362534c50df661ce3578a62af$__9163a7abb396916113c1918a91609f91609d918b916099916097916001600160a01b031690600401612c82565b604051633057705f60e21b81526099600482015260009073__$cbcc74385362534c50df661ce3578a62af$__9063c15dc17c906024016105d9565b6115d761239e565b6115df6119ab565b816115e981611a04565b60408051608081018252609d546001600160a01b03908116828401908152609e546060840152825282518084018452609f548216815260a05460208281019190915283015260a1549251632657942960e01b8152919273__$cbcc74385362534c50df661ce3578a62af$__9263265794299261166f928b9287928c921690600401612cbb565b6040805180830381865af415801561168b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108bf9190612cf2565b60a154604051631013a0c960e31b8152609d6004820152609f6024820152609960448201526001600160a01b03909116606482015260009073__$cbcc74385362534c50df661ce3578a62af$__9063809d0648906084016105d9565b60408051608081018252609d546001600160a01b03908116828401908152609e546060840152825282518084018452609f548216815260a05460208281019190915283015260a154925163196d005960e31b815260009373__$cbcc74385362534c50df661ce3578a62af$__9263cb6802c8926117989286928b928b928b92609992911690600401612d72565b602060405180830381865af41580156117b5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117d99190612939565b95945050505050565b6117ea61239e565b60408051608081018252609d546001600160a01b03908116828401908152609e546060840152825282518084018452609f548216815260a05460208281019190915283015260a154925163296104cd60e01b8152919273__$cbcc74385362534c50df661ce3578a62af$__9263296104cd9261187192889287929190911690600401612ddb565b6040805180830381865af415801561188d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108cd9190612cf2565b6118b9611951565b6118c281611c2a565b50565b60405163d505accf60e01b8152336004820152306024820152604481018690526064810185905260ff8416608482015260a4810183905260c481018290526001600160a01b0387169063d505accf9060e401600060405180830381600087803b15801561193157600080fd5b505af1158015611945573d6000803e3d6000fd5b50505050505050505050565b6033546001600160a01b0316331461099e5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610b63565b6002606554036119fd5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610b63565b6002606555565b804211156118c25760405162461bcd60e51b815260206004820152601060248201526f111958591b1a5b99481b9bdd081b595d60821b6044820152606401610b63565b6001606555565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60008061114d888888866001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611ae7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b0b9190612939565b8989611ca0565b600054610100900460ff1661099e5760405162461bcd60e51b8152600401610b6390612e08565b600054610100900460ff16611b605760405162461bcd60e51b8152600401610b6390612e08565b61099e33611a4e565b600054610100900460ff16611a475760405162461bcd60e51b8152600401610b6390612e08565b6000763d602d80600a3d3981f3363d3d373d3d3d363d730000008260601b60e81c176000526e5af43d82803e903d91602b57fd5bf38260781b17602052603760096000f090506001600160a01b038116611c255760405162461bcd60e51b8152602060048201526016602482015275115490cc4c4d8dce8818dc99585d194819985a5b195960521b6044820152606401610b63565b919050565b611c32611951565b6001600160a01b038116611c975760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610b63565b6118c281611a4e565b6000806000806000611cbf8b8b8b8b611cb88c611d02565b8b54611da9565b60018d015492955090935091506000908490611cdb8585612c6f565b611ce59190612e53565b611cef9190612c6f565b939c939b50929950505050505050505050565b6003810154600182015460009190428211156108cd576002840154845480831115611d6d57611d318285612c6f565b611d3b8342612c6f565b611d458386612c6f565b611d4f9190612c16565b611d599190612e53565b611d639082612e75565b9695505050505050565b611d778285612c6f565b611d818342612c6f565b611d8b8584612c6f565b611d959190612c16565b611d9f9190612e53565b611d639082612c6f565b8454600090819081908190611dc6906001600160a01b0316611ff6565b90506000611dd8828b60010154612061565b8954909150600090611df2906001600160a01b0316611ff6565b90506000611e04828c60010154612061565b6040805160a0810182526000808252602082018190529181018290526060810191909152608081018b9052909150611e3d82858c61206d565b8160000181815250508a81600001518f611e579190612c16565b611e619190612e53565b8151611e6d9190612c6f565b6020820152838e1115611ec25760405162461bcd60e51b815260206004820152601860248201527f414d4f554e545f455843454544535f415641494c41424c4500000000000000006044820152606401610b63565b611ed581608001518383602001516121f4565b6040820152611ee389612355565b606082018190526040820151825160208401516000936402540be4009390929091611f0e908a612c16565b611f189190612e53565b611f229190612c6f565b611f2c9190612c16565b611f369190612e53565b611f409086612c6f565b905060006402540be40083606001518460000151856020015187611f649190612c16565b611f6e9190612e53565b611f789087612c6f565b611f829190612c16565b611f8c9190612e53565b611f969085612c6f565b90506000611fad84608001518386602001516121f4565b611fb79084612c6f565b90508f60010154600182611fcb9190612c6f565b611fd59190612e53565b604090940151939a5092985094965050505050505096509650969350505050565b6040516370a0823160e01b81523060048201526000906001600160a01b038316906370a0823190602401602060405180830381865afa15801561203d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061075f9190612939565b600061075c8284612c16565b60008061207a8486612e75565b90508060000361208e5760009150506108cd565b6000818161209d600287612c16565b905060005b6101008110156121b557826120b860028b612c16565b6120c28583612c16565b6120cc9190612e53565b90506120d960028a612c16565b6120e38583612c16565b6120ed9190612e53565b90508394506000846002836121029190612c16565b606461210e8a88612c16565b6121189190612e53565b6121229190612e75565b61212c9190612c16565b905060008261213d60026001612e75565b6121479190612c16565b6064876121548289612c6f565b61215e9190612c16565b6121689190612e53565b6121729190612e75565b905061217e8183612e53565b955061218a8688612362565b1561219f5785985050505050505050506108cd565b50505080806121ad90612ad4565b9150506120a2565b5060405162461bcd60e51b81526020600482015260136024820152724420646f6573206e6f7420636f6e766572676560681b6044820152606401610b63565b600080612202600285612c16565b61220c8480612c16565b6122169190612e53565b9050836000612226600288612c16565b9050612233600282612c16565b606461223f8786612c16565b6122499190612c16565b6122539190612e53565b9250600081612263606488612c16565b61226d9190612e53565b6122779084612e75565b9050600086815b61010081101561230c57819250600087838461229a9190612c16565b6122a49190612e75565b905060008a866122b5866002612c16565b6122bf9190612e75565b6122c99190612c6f565b90506122d58183612e53565b93506122e18486612362565b156122f7578399505050505050505050506108cd565b5050808061230490612ad4565b91505061227e565b5060405162461bcd60e51b815260206004820152601e60248201527f417070726f78696d6174696f6e20646964206e6f7420636f6e766572676500006044820152606401610b63565b600061075f600283612e53565b600060016123708484612379565b11159392505050565b6000818311156123945761238d8284612c6f565b905061075f565b61075c8383612c6f565b60405180604001604052806002906020820280368337509192915050565b6001600160a01b03811681146118c257600080fd5b600080604083850312156123e457600080fd5b82356123ef816123bc565b946020939093013593505050565b60006020828403121561240f57600080fd5b5035919050565b806040810183101561075f57600080fd5b60008060006080848603121561243c57600080fd5b6124468585612416565b95604085013595506060909401359392505050565b6000806040838503121561246e57600080fd5b50508035926020909101359150565b6000806040838503121561249057600080fd5b8235915060208301356124a2816123bc565b809150509250929050565b60008083601f8401126124bf57600080fd5b50813567ffffffffffffffff8111156124d757600080fd5b6020830191508360208260051b85010111156124f257600080fd5b9250929050565b6000806020838503121561250c57600080fd5b823567ffffffffffffffff81111561252357600080fd5b61252f858286016124ad565b90969095509350505050565b60005b8381101561255657818101518382015260200161253e565b50506000910152565b6000815180845261257781602086016020860161253b565b601f01601f19169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156125e057603f198886030184526125ce85835161255f565b945092850192908501906001016125b2565b5092979650505050505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561262c5761262c6125ed565b604052919050565b600067ffffffffffffffff82111561264e5761264e6125ed565b50601f01601f191660200190565b600082601f83011261266d57600080fd5b813561268061267b82612634565b612603565b81815284602083860101111561269557600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600080600080610100898b0312156126cf57600080fd5b88356126da816123bc565b975060208901356126ea816123bc565b9650604089013567ffffffffffffffff8082111561270757600080fd5b6127138c838d0161265c565b975060608b013591508082111561272957600080fd5b506127368b828c0161265c565b9550506080890135935060a0890135925060c0890135915060e089013561275c816123bc565b809150509295985092959890939650565b60ff811681146118c257600080fd5b60008060008060008060c0878903121561279557600080fd5b86356127a0816123bc565b9550602087013594506040870135935060608701356127be8161276d565b9598949750929560808101359460a0909101359350915050565b600080600080608085870312156127ee57600080fd5b84356127f9816123bc565b966020860135965060408601359560600135945092505050565b6000806000806080858703121561282957600080fd5b84359350602085013561283b816123bc565b93969395505050506040820135916060013590565b60008060006080848603121561286557600080fd5b833592506128768560208601612416565b9150606084013590509250925092565b60408101818360005b60028110156128ae57815183526020928301929091019060010161288f565b50505092915050565b80151581146118c257600080fd5b6000806000604084860312156128da57600080fd5b833567ffffffffffffffff8111156128f157600080fd5b6128fd868287016124ad565b9094509250506020840135612911816128b7565b809150509250925092565b60006020828403121561292e57600080fd5b81356108cd816123bc565b60006020828403121561294b57600080fd5b5051919050565b8060005b600281101561133a57815180516001600160a01b031685526020908101518186015260409094019390910190600101612956565b61014081016129998289612952565b604087608084013760c082019590955260e08101939093526101008301919091526001600160a01b03166101209091015292915050565b634e487b7160e01b600052603260045260246000fd5b6000808335601e198436030181126129fd57600080fd5b83018035915067ffffffffffffffff821115612a1857600080fd5b6020019150368190038213156124f257600080fd5b8183823760009101908152919050565b600060208284031215612a4f57600080fd5b815167ffffffffffffffff811115612a6657600080fd5b8201601f81018413612a7757600080fd5b8051612a8561267b82612634565b818152856020838501011115612a9a57600080fd5b6117d982602083016020860161253b565b60208152600061075c602083018461255f565b634e487b7160e01b600052601160045260246000fd5b600060018201612ae657612ae6612abe565b5060010190565b600060208284031215612aff57600080fd5b81516108cd8161276d565b60ff828116828216039081111561075f5761075f612abe565b600181815b80851115612b5e578160001904821115612b4457612b44612abe565b80851615612b5157918102915b93841c9390800290612b28565b509250929050565b600082612b755750600161075f565b81612b825750600061075f565b8160018114612b985760028114612ba257612bbe565b600191505061075f565b60ff841115612bb357612bb3612abe565b50506001821b61075f565b5060208310610133831016604e8410600b8410161715612be1575081810a61075f565b612beb8383612b23565b8060001904821115612bff57612bff612abe565b029392505050565b600061075c60ff841683612b66565b808202811582820484141761075f5761075f612abe565b604081526000612c40604083018561255f565b82810360208401526117d9818561255f565b600060208284031215612c6457600080fd5b81516108cd816128b7565b8181038181111561075f5761075f612abe565b968752602087019590955260408601939093526060850191909152608084015260a08301526001600160a01b031660c082015260e00190565b8481526101008101612cd06020830186612952565b60408460a08401376001600160a01b039290921660e091909101529392505050565b600060408284031215612d0457600080fd5b82601f830112612d1357600080fd5b6040516040810181811067ffffffffffffffff82111715612d3657612d366125ed565b8060405250806040840185811115612d4d57600080fd5b845b81811015612d67578051835260209283019201612d4f565b509195945050505050565b6000610100612d81838a612952565b6080830181905282018690526101206001600160fb1b03871115612da457600080fd5b8660051b80898386013795151560a084015260c0830194909452506001600160a01b039190911660e0820152909101019392505050565b83815260c08101612def6020830185612952565b6001600160a01b039290921660a0919091015292915050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b600082612e7057634e487b7160e01b600052601260045260246000fd5b500490565b8082018082111561075f5761075f612abe56fea26469706673582212208ad30bcfbd1031906bdc14ade4b65d25086b44e5878873a704eb82b05bf83aaf64736f6c63430008130033",
    "sourceMap": "1208:10376:40:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4658:123;;;;;;;;;;;;;:::i;:::-;;;160:25:41;;;148:2;133:18;4658:123:40;;;;;;;;5628:353;;;;;;;;;;-1:-1:-1;5628:353:40;;;;;:::i;:::-;;:::i;1580:50::-;;;;;;;;;;-1:-1:-1;1580:50:40;;;;;;;;;;;;;;;;;;;915:25:41;;;971:2;956:18;;949:34;;;;999:18;;;992:34;1057:2;1042:18;;1035:34;902:3;887:19;1580:50:40;684:391:41;10745:119:40;;;;;;;;;;-1:-1:-1;10745:119:40;;;;;:::i;:::-;;:::i;:::-;;8116:390;;;;;;;;;;-1:-1:-1;8116:390:40;;;;;:::i;:::-;;:::i;5262:119::-;;;;;;;;;;;;;:::i;10905:145::-;;;;;;;;;;-1:-1:-1;10905:145:40;;;;;:::i;:::-;;:::i;1777:42::-;;;;;;;;;;-1:-1:-1;1777:42:40;;;;-1:-1:-1;;;;;1777:42:40;;;;;;-1:-1:-1;;;;;2251:32:41;;;2233:51;;2221:2;2206:18;1777:42:40;2059:231:41;4962:99:40;;;;;;;;;;-1:-1:-1;5041:6:40;:12;-1:-1:-1;;;;;5041:12:40;4962:99;;2071:101:12;;;;;;;;;;;;;:::i;6319:773:40:-;;;;;;;;;;-1:-1:-1;6319:773:40;;;;;:::i;:::-;;:::i;10581:123::-;;;;;;;;;;-1:-1:-1;10581:123:40;;;;;:::i;:::-;;:::i;1441:85:12:-;;;;;;;;;;-1:-1:-1;1513:6:12;;-1:-1:-1;;;;;1513:6:12;1441:85;;1490:36:40;;;;;;;;;;-1:-1:-1;1490:36:40;;;;;;;;;;;;;3245:25:41;;;3301:2;3286:18;;3279:34;;;;3218:18;1490:36:40;3071:248:41;827:675:37;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2150:2285:40:-;;;;;;;;;;-1:-1:-1;2150:2285:40;;;;;:::i;:::-;;:::i;:::-;;;7994:14:41;;7987:22;7969:41;;7957:2;7942:18;2150:2285:40;7829:187:41;4822:99:40;;;;;;;;;;-1:-1:-1;4901:6:40;:12;-1:-1:-1;;;;;4901:12:40;4822:99;;9955:552;;;;;;;;;;-1:-1:-1;9955:552:40;;;;;:::i;:::-;;:::i;5102:119::-;;;;;;;;;;;;;:::i;2722:389:38:-;;;;;;:::i;:::-;;:::i;11091:99:40:-;;;;;;;;;;;;;:::i;7514:561::-;;;;;;;;;;-1:-1:-1;7514:561:40;;;;;:::i;:::-;;:::i;8956:958::-;;;;;;;;;;-1:-1:-1;8956:958:40;;;;;:::i;:::-;;:::i;4508:109::-;;;;;;;;;;;;;:::i;8547:368::-;;;;;;;;;;-1:-1:-1;8547:368:40;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;5422:165::-;;;;;;;;;;;;;:::i;7133:297::-;;;;;;;;;;-1:-1:-1;7133:297:40;;;;;:::i;:::-;;:::i;6022:256::-;;;;;;;;;;-1:-1:-1;6022:256:40;;;;;:::i;:::-;;:::i;11408:173::-;;;;;;;;;;-1:-1:-1;11408:173:40;;;;;:::i;:::-;;:::i;2387:294:38:-;;;;;;:::i;:::-;;:::i;4658:123:40:-;4740:33;;-1:-1:-1;;;4740:33:40;;:19;:33;;;160:25:41;4713:7:40;;4740:31;;;;133:18:41;;4740:33:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4733:40;;4658:123;:::o;5628:353::-;5769:6;:12;5715:7;;-1:-1:-1;;;;;5755:26:40;;;5769:12;;5755:26;:218;;5897:76;;-1:-1:-1;;;5897:76:40;;5921:6;5897:76;;;12398:25:41;5929:6:40;12439:18:41;;;12432:34;12482:18;;;12475:34;;;5942:19:40;12525:18:41;;;12518:34;5963:9:40;12568:19:41;;;12561:35;5897:9:40;;:23;;12370:19:41;;5897:76:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5755:218;;;5801:76;;-1:-1:-1;;;5801:76:40;;5825:6;5801:76;;;12398:25:41;5833:6:40;12439:18:41;;;12432:34;12482:18;;;12475:34;;;5846:19:40;12525:18:41;;;12518:34;5867:9:40;12568:19:41;;;12561:35;5801:9:40;;:23;;12370:19:41;;5801:76:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5735:238;;5628:353;;;;;:::o;10745:119::-;1334:13:12;:11;:13::i;:::-;10824:32:40::1;::::0;-1:-1:-1;;;10824:32:40;;:9:::1;:32;::::0;::::1;3245:25:41::0;3286:18;;;3279:34;;;10824:20:40::1;::::0;::::1;::::0;3218:18:41;;10824:32:40::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;10745:119:::0;:::o;8116:390::-;8306:7;2505:21:14;:19;:21::i;:::-;8286:9:40::1;2064:25;2079:9;2064:14;:25::i;:::-;8326:58:::2;::::0;;;;;;;8369:6:::2;8326:58:::0;-1:-1:-1;;;;;8326:58:40;;::::2;::::0;;::::2;::::0;;;;;;;;;;;;;;;::::2;::::0;;8377:6:::2;8326:58:::0;;::::2;::::0;;;;::::2;::::0;;::::2;::::0;;;;;::::2;::::0;8490:7:::2;::::0;8404:94;;-1:-1:-1;;;8404:94:40;;8326:58;;8404:9:::2;::::0;:22:::2;::::0;:94:::2;::::0;8326:58;;8436:8;;8446:10;;8458:19:::2;::::0;8479:9:::2;::::0;8490:7;;;::::2;::::0;8404:94:::2;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8397:101;;;2536:1:14::1;2547:20:::0;1787:1;3053:7;:22;2873:209;2547:20;8116:390:40;;;;;:::o;5262:119::-;5349:24;;-1:-1:-1;;;5349:24:40;;:6;:24;;;160:25:41;5322:7:40;;5349:22;;;;133:18:41;;5349:24:40;14:177:41;10905:145:40;1334:13:12;:11;:13::i;:::-;10996:46:40::1;::::0;-1:-1:-1;;;10996:46:40;;:19:::1;:46;::::0;::::1;14670:25:41::0;14711:18;;;14704:34;;;14754:18;;;14747:34;;;10996:25:40::1;::::0;::::1;::::0;14643:18:41;;10996:46:40::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;10905:145:::0;;:::o;2071:101:12:-;1334:13;:11;:13::i;:::-;2135:30:::1;2162:1;2135:18;:30::i;:::-;2071:101::o:0;6319:773:40:-;6532:6;:12;6471:7;;-1:-1:-1;;;;;6516:28:40;;;6532:12;;6516:28;:568;;7058:7;;6834:250;;6892:11;;6926:6;;6955;;6984:19;;7026:9;;-1:-1:-1;;;;;7058:7:40;6834:35;:250::i;6516:568::-;6788:7;;6564:250;;6622:11;;6656:6;;6685;;6714:19;;6756:9;;-1:-1:-1;;;;;6788:7:40;6564:35;:250::i;10581:123::-;1334:13:12;:11;:13::i;:::-;10662:34:40::1;::::0;-1:-1:-1;;;10662:34:40;;:9:::1;:34;::::0;::::1;3245:25:41::0;3286:18;;;3279:34;;;10662:21:40::1;::::0;::::1;::::0;3218:18:41;;10662:34:40::1;3071:248:41::0;827:675:37;905:22;962:5;950:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;940:35;;991:9;986:509;1006:16;;;986:509;;;1045:12;;1090:4;1109:5;;1115:1;1109:8;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;1082:36;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1044:74;;;;1140:7;1135:313;;1269:2;1253:6;:13;:18;1249:32;;;1273:8;;;1249:32;1354:4;1346:6;1342:17;1332:27;;1414:6;1403:28;;;;;;;;;;;;:::i;:::-;1396:36;;-1:-1:-1;;;1396:36:37;;;;;;;;:::i;:::-;;;;;;;;1135:313;1477:6;1464:7;1472:1;1464:10;;;;;;;;:::i;:::-;;;;;;:19;;;;1029:466;;1024:3;;;;;:::i;:::-;;;;986:509;;;;827:675;;;;:::o;2150:2285:40:-;2462:4;3291:13:13;;;;;;;3290:14;;3336:34;;;;-1:-1:-1;3354:12:13;;3369:1;3354:12;;;;:16;3336:34;3335:108;;;-1:-1:-1;3415:4:13;1476:19:21;:23;;;3376:66:13;;-1:-1:-1;3425:12:13;;;;;:17;3376:66;3314:201;;;;-1:-1:-1;;;3314:201:13;;17078:2:41;3314:201:13;;;17060:21:41;17117:2;17097:18;;;17090:30;17156:34;17136:18;;;17129:62;-1:-1:-1;;;17207:18:41;;;17200:44;17261:19;;3314:201:13;16876:410:41;3314:201:13;3525:12;:16;;-1:-1:-1;;3525:16:13;3540:1;3525:16;;;3551:65;;;;3585:13;:20;;-1:-1:-1;;3585:20:13;;;;;3551:65;2479:26:40::1;:24;:26::i;:::-;2516;:24;:26::i;:::-;2553:34;:32;:34::i;:::-;2677:7;-1:-1:-1::0;;;;;2666:18:40::1;:7;-1:-1:-1::0;;;;;2666:18:40::1;::::0;2658:47:::1;;;::::0;-1:-1:-1;;;2658:47:40;;17493:2:41;2658:47:40::1;::::0;::::1;17475:21:41::0;17532:2;17512:18;;;17505:30;-1:-1:-1;;;17551:18:41;;;17544:46;17607:18;;2658:47:40::1;17291:340:41::0;2658:47:40::1;-1:-1:-1::0;;;;;2724:30:40;::::1;2716:61;;;::::0;-1:-1:-1;;;2716:61:40;;17838:2:41;2716:61:40::1;::::0;::::1;17820:21:41::0;17877:2;17857:18;;;17850:30;-1:-1:-1;;;17896:18:41;;;17889:48;17954:18;;2716:61:40::1;17636:342:41::0;2716:61:40::1;-1:-1:-1::0;;;;;2796:30:40;::::1;2788:61;;;::::0;-1:-1:-1;;;2788:61:40;;18185:2:41;2788:61:40::1;::::0;::::1;18167:21:41::0;18224:2;18204:18;;;18197:30;-1:-1:-1;;;18243:18:41;;;18236:48;18301:18;;2788:61:40::1;17983:342:41::0;2788:61:40::1;2900:26;2952:7;-1:-1:-1::0;;;;;2929:41:40::1;;:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2900:72;;3014:1;2991:20;:24;;;2983:33;;;::::0;::::1;;3036:161;;;;;;;;3080:7;-1:-1:-1::0;;;;;3036:161:40::1;;;;;3164:20;1630:2:39;3128:56:40;;;;:::i;:::-;3123:62;::::0;:2:::1;:62;:::i;:::-;3036:161:::0;;3027:170;;:6:::1;:170:::0;;-1:-1:-1;;;;;;3027:170:40::1;-1:-1:-1::0;;;;;3027:170:40;;::::1;;::::0;;::::1;::::0;;::::1;::::0;;;3233:43:::1;::::0;;-1:-1:-1;;;3233:43:40;;;;-1:-1:-1;;3233:41:40;;::::1;::::0;::::1;::::0;:43:::1;::::0;;::::1;::::0;;;;;;;:41;:43:::1;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3210:66;;3312:1;3295:14;:18;;;3287:27;;;::::0;::::1;;3334:155;;;;;;;;3378:7;-1:-1:-1::0;;;;;3334:155:40::1;;;;;3462:14;1630:2:39;3426:50:40;;;;:::i;:::-;3421:56;::::0;:2:::1;:56;:::i;:::-;3334:155:::0;;3325:164;;:6:::1;:164:::0;;-1:-1:-1;;;;;;3325:164:40::1;-1:-1:-1::0;;;;;3325:164:40;;::::1;::::0;;;::::1;::::0;;::::1;;::::0;;;34702:5:39::1;3563:20:40::0;::::1;3555:51;;;::::0;-1:-1:-1;;;3555:51:40;;20323:2:41;3555:51:40::1;::::0;::::1;20305:21:41::0;20362:2;20342:18;;;20335:30;-1:-1:-1;;;20381:18:41;;;20374:48;20439:18;;3555:51:40::1;20121:342:41::0;3555:51:40::1;3648:26;34660:3:39;3648:2:40::0;:26:::1;:::i;:::-;3617:19;:57:::0;3715:26:::1;34660:3:39;3715:2:40::0;:26:::1;:::i;:::-;3685:27:::0;:56;1946:5:39::1;3819:29:40::0;::::1;3811:62;;;::::0;-1:-1:-1;;;3811:62:40;;20843:2:41;3811:62:40::1;::::0;::::1;20825:21:41::0;20882:2;20862:18;;;20855:30;-1:-1:-1;;;20901:18:41;;;20894:50;20961:18;;3811:62:40::1;20641:344:41::0;3811:62:40::1;2240:6:39;3892:9:40;:35;3884:73;;;::::0;-1:-1:-1;;;3884:73:40;;21192:2:41;3884:73:40::1;::::0;::::1;21174:21:41::0;21231:2;21211:18;;;21204:30;21270:27;21250:18;;;21243:55;21315:18;;3884:73:40::1;20990:349:41::0;3884:73:40::1;3980:59;::::0;;;;::::1;::::0;;;;;;::::1;;::::0;;;3968:9:::1;:71:::0;;;;;;;4261:43:::1;4282:20:::0;4261:12:::1;:43::i;:::-;4232:7;:73:::0;;-1:-1:-1;;;;;;4232:73:40::1;-1:-1:-1::0;;;;;4232:73:40;;;::::1;::::0;;::::1;::::0;;4324:46:::1;::::0;-1:-1:-1;;;4324:46:40;;:18:::1;::::0;:46:::1;::::0;4343:11;;4356:13;;4324:46:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4316:87;;;::::0;-1:-1:-1;;;4316:87:40;;22182:2:41;4316:87:40::1;::::0;::::1;22164:21:41::0;22221:2;22201:18;;;22194:30;22260;22240:18;;;22233:58;22308:18;;4316:87:40::1;21980:352:41::0;4316:87:40::1;4423:4;4416:11;;;;3640:14:13::0;3636:99;;;3686:5;3670:21;;-1:-1:-1;;3670:21:13;;;3710:14;;-1:-1:-1;22489:36:41;;3710:14:13;;22477:2:41;22462:18;3710:14:13;;;;;;;3636:99;3258:483;2150:2285:40;;;;;;;;;;:::o;9955:552::-;10161:7;2505:21:14;:19;:21::i;:::-;10141:9:40::1;2064:25;2079:9;2064:14;:25::i;:::-;10181:58:::2;::::0;;;;;;;10224:6:::2;10181:58:::0;-1:-1:-1;;;;;10181:58:40;;::::2;::::0;;::::2;::::0;;;;;;;;;;;;;;;::::2;::::0;;10232:6:::2;10181:58:::0;;::::2;::::0;;;;::::2;::::0;;::::2;::::0;;;;;::::2;::::0;10477:7:::2;::::0;10272:227;;-1:-1:-1;;;10272:227:40;;10181:58;;10272:9:::2;::::0;:34:::2;::::0;:227:::2;::::0;10181:58;;10351:8;;10378:14;;10411:19:::2;::::0;10449:9:::2;::::0;10477:7;;;::::2;::::0;10272:227:::2;;;:::i;5102:119::-:0;5189:24;;-1:-1:-1;;;5189:24:40;;:6;:24;;;160:25:41;5162:7:40;;5189:22;;;;133:18:41;;5189:24:40;14:177:41;2722:389:38;2956:51;;-1:-1:-1;;;2956:51:38;;2981:10;2956:51;;;22748:34:41;3001:4:38;22798:18:41;;;22791:43;2936:17:38;;-1:-1:-1;;;;;2956:24:38;;;;;22683:18:41;;2956:51:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2936:71;;3034:6;3022:9;:18;3018:85;;;3042:61;3053:6;3061:18;3070:9;3061:6;:18;:::i;:::-;3081:9;3092:2;3096;3100;3042:10;:61::i;:::-;2925:186;2722:389;;;;;;:::o;11091:99:40:-;1334:13:12;:11;:13::i;:::-;11151:31:40::1;::::0;-1:-1:-1;;;11151:31:40;;:19:::1;:31;::::0;::::1;160:25:41::0;11151:29:40::1;::::0;::::1;::::0;133:18:41;;11151:31:40::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;11091:99::o:0;7514:561::-;7703:7;2505:21:14;:19;:21::i;:::-;7683:9:40::1;2064:25;2079:9;2064:14;:25::i;:::-;7741:6:::2;:12:::0;-1:-1:-1;;;;;7741:12:40;;::::2;7727:26:::0;;::::2;::::0;7723:345:::2;;7777:75;::::0;-1:-1:-1;;;7777:75:40;;7792:6:::2;7777:75;::::0;::::2;23381:25:41::0;7800:6:40::2;23422:18:41::0;;;23415:34;23465:18;;;23458:34;;;23508:18;;;23501:34;;;7821:19:40::2;23551::41::0;;;23544:35;7842:9:40::2;23595:19:41::0;;;23588:35;7777:9:40::2;::::0;:14:::2;::::0;23353:19:41;;7777:75:40::2;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7770:82;;;;7723:345;7888:6;:12:::0;-1:-1:-1;;;;;7888:12:40;;::::2;7874:26:::0;;::::2;::::0;7870:198:::2;;7924:75;::::0;-1:-1:-1;;;7924:75:40;;7939:6:::2;7924:75;::::0;::::2;23381:25:41::0;7947:6:40::2;23422:18:41::0;;;23415:34;23465:18;;;23458:34;;;23508:18;;;23501:34;;;7968:19:40::2;23551::41::0;;;23544:35;7989:9:40::2;23595:19:41::0;;;23588:35;7924:9:40::2;::::0;:14:::2;::::0;23353:19:41;;7924:75:40::2;22978:651:41::0;7870:198:40::2;8032:24;::::0;-1:-1:-1;;;8032:24:40;;23836:2:41;8032:24:40::2;::::0;::::2;23818:21:41::0;23875:2;23855:18;;;23848:30;-1:-1:-1;;;23894:18:41;;;23887:44;23948:18;;8032:24:40::2;23634:338:41::0;7870:198:40::2;2536:1:14::1;2547:20:::0;1787:1;3053:7;:22;2873:209;2547:20;7514:561:40;;;;;;:::o;8956:958::-;9180:7;2505:21:14;:19;:21::i;:::-;9160:9:40::1;2064:25;2079:9;2064:14;:25::i;:::-;9221:6:::2;:12:::0;-1:-1:-1;;;;;9221:12:40;;::::2;9204:29:::0;;::::2;::::0;9200:707:::2;;9530:7;::::0;9274:282:::2;::::0;-1:-1:-1;;;9274:282:40;;:9:::2;::::0;:33:::2;::::0;:282:::2;::::0;9330:12;;9365:6:::2;::::0;9394::::2;::::0;9423:10;;9456:19:::2;::::0;9498:9:::2;::::0;-1:-1:-1;;;;;9530:7:40::2;::::0;9274:282:::2;;;:::i;9200:707::-;9869:7;::::0;9613:282:::2;::::0;-1:-1:-1;;;9613:282:40;;:9:::2;::::0;:33:::2;::::0;:282:::2;::::0;9669:12;;9704:6:::2;::::0;9733::::2;::::0;9762:10;;9795:19:::2;::::0;9837:9:::2;::::0;-1:-1:-1;;;;;9869:7:40::2;::::0;9613:282:::2;;;:::i;4508:109::-:0;4583:26;;-1:-1:-1;;;4583:26:40;;:19;:26;;;160:25:41;4556:7:40;;4583:24;;;;133:18:41;;4583:26:40;14:177:41;8547:368:40;8736:17;;:::i;:::-;2505:21:14;:19;:21::i;:::-;8717:8:40::1;2064:25;2079:9;2064:14;:25::i;:::-;8766:58:::2;::::0;;;;;;;8809:6:::2;8766:58:::0;-1:-1:-1;;;;;8766:58:40;;::::2;::::0;;::::2;::::0;;;;;;;;;;;;;;;::::2;::::0;;8817:6:::2;8766:58:::0;;::::2;::::0;;;;::::2;::::0;;::::2;::::0;;;;;::::2;::::0;8899:7:::2;::::0;8844:63;;-1:-1:-1;;;8844:63:40;;8766:58;;8844:9:::2;::::0;:25:::2;::::0;:63:::2;::::0;8870:6;;8766:58;;8887:10;;8899:7:::2;::::0;8844:63:::2;;;:::i;:::-;;::::0;::::2;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;5422:165::-:0;5571:7;;5508:71;;-1:-1:-1;;;5508:71:40;;5534:6;5508:71;;;26531:25:41;5542:6:40;26572:18:41;;;26565:34;5550:19:40;26615:18:41;;;26608:34;-1:-1:-1;;;;;5571:7:40;;;26658:18:41;;;26651:60;5481:7:40;;5508:9;;:25;;26503:19:41;;5508:71:40;26181:536:41;7133:297:40;7257:58;;;;;;;;7300:6;7257:58;-1:-1:-1;;;;;7257:58:40;;;;;;;;;;;;;;;;;;;;;;;;7308:6;7257:58;;;;;;;;;;;;;;;;;;7414:7;;7335:87;;-1:-1:-1;;;7335:87:40;;7237:7;;7335:9;;:30;;:87;;7257:58;;7375:7;;;;7384;;7393:19;;7414:7;;;7335:87;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7328:94;7133:297;-1:-1:-1;;;;;7133:297:40:o;6022:256::-;6104:17;;:::i;:::-;6134:58;;;;;;;;6177:6;6134:58;-1:-1:-1;;;;;6134:58:40;;;;;;;;;;;;;;;;;;;;;;;;6185:6;6134:58;;;;;;;;;;;;;;;;;;6262:7;;6210:60;;-1:-1:-1;;;6210:60:40;;6134:58;;6210:9;;:34;;:60;;6245:6;;6134:58;;6262:7;;;;;6210:60;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;11408:173::-;1334:13:12;:11;:13::i;:::-;11525:48:40::1;11562:10;11525:36;:48::i;:::-;11408:173:::0;:::o;2387:294:38:-;2588:85;;-1:-1:-1;;;2588:85:38;;2616:10;2588:85;;;28610:34:41;2636:4:38;28660:18:41;;;28653:43;28712:18;;;28705:34;;;28755:18;;;28748:34;;;28831:4;28819:17;;28798:19;;;28791:46;28853:19;;;28846:35;;;28897:19;;;28890:35;;;-1:-1:-1;;;;;2588:27:38;;;;;28544:19:41;;2588:85:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2387:294;;;;;;:::o;1599:130:12:-;1513:6;;-1:-1:-1;;;;;1513:6:12;929:10:22;1662:23:12;1654:68;;;;-1:-1:-1;;;1654:68:12;;29138:2:41;1654:68:12;;;29120:21:41;;;29157:18;;;29150:30;29216:34;29196:18;;;29189:62;29268:18;;1654:68:12;28936:356:41;2580:287:14;1830:1;2712:7;;:19;2704:63;;;;-1:-1:-1;;;2704:63:14;;29499:2:41;2704:63:14;;;29481:21:41;29538:2;29518:18;;;29511:30;29577:33;29557:18;;;29550:61;29628:18;;2704:63:14;29297:355:41;2704:63:14;1830:1;2842:7;:18;2580:287::o;11234:133:40:-;11329:9;11310:15;:28;;11302:57;;;;-1:-1:-1;;;11302:57:40;;29859:2:41;11302:57:40;;;29841:21:41;29898:2;29878:18;;;29871:30;-1:-1:-1;;;29917:18:41;;;29910:46;29973:18;;11302:57:40;29657:340:41;2873:209:14;1787:1;3053:7;:22;2873:209::o;2673:187:12:-;2765:6;;;-1:-1:-1;;;;;2781:17:12;;;-1:-1:-1;;;;;;2781:17:12;;;;;;;2813:40;;2765:6;;;2781:17;2765:6;;2813:40;;2746:16;;2813:40;2736:124;2673:187;:::o;18322:618:39:-;18634:7;18655:23;18684:215;18725:11;18751:12;18778:16;18809:7;-1:-1:-1;;;;;18809:19:39;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;18845:19;18879:9;18684:26;:215::i;776:69:22:-;5363:13:13;;;;;;;5355:69;;;;-1:-1:-1;;;5355:69:13;;;;;;;:::i;1104:111:12:-;5363:13:13;;;;;;;5355:69;;;;-1:-1:-1;;;5355:69:13;;;;;;;:::i;:::-;1176:32:12::1;929:10:22::0;1176:18:12::1;:32::i;1985:109:14:-:0;5363:13:13;;;;;;;5355:69;;;;-1:-1:-1;;;5355:69:13;;;;;;;:::i;973:759:28:-;1030:16;1362:48;1344:14;1338:4;1334:25;1328:4;1324:36;1321:90;1315:4;1308:104;1569:32;1552:14;1546:4;1542:25;1539:63;1533:4;1526:77;1644:4;1638;1635:1;1628:21;1616:33;-1:-1:-1;;;;;;1676:22:28;;1668:57;;;;-1:-1:-1;;;1668:57:28;;30616:2:41;1668:57:28;;;30598:21:41;30655:2;30635:18;;;30628:30;-1:-1:-1;;;30674:18:41;;;30667:52;30736:18;;1668:57:28;30414:346:41;1668:57:28;973:759;;;:::o;2321:198:12:-;1334:13;:11;:13::i;:::-;-1:-1:-1;;;;;2409:22:12;::::1;2401:73;;;::::0;-1:-1:-1;;;2401:73:12;;30967:2:41;2401:73:12::1;::::0;::::1;30949:21:41::0;31006:2;30986:18;;;30979:30;31045:34;31025:18;;;31018:62;-1:-1:-1;;;31096:18:41;;;31089:36;31142:19;;2401:73:12::1;30765:402:41::0;2401:73:12::1;2484:28;2503:8;2484:18;:28::i;19523:852:39:-:0;19829:7;19838;19858:10;19879:12;19902:16;19954:228;19996:11;20022:12;20049:16;20080:11;20106:33;20119:19;20106:12;:33::i;:::-;20154:17;;19954:27;:228::i;:::-;20295:32;;;;19931:251;;-1:-1:-1;19931:251:39;;-1:-1:-1;19931:251:39;-1:-1:-1;20255:17:39;;19931:251;;20276:15;19931:251;;20276:15;:::i;:::-;20275:52;;;;:::i;:::-;:57;;;;:::i;:::-;20353:2;;;;-1:-1:-1;19523:852:39;;-1:-1:-1;;;;;;;;;;19523:852:39:o;36204:849::-;36310:16;;;;36380:12;;;;36277:7;;36310:16;36448:15;:20;-1:-1:-1;36444:602:39;;;36498:17;;;;36572:13;;36644:7;;;36640:353;;;36796:7;36801:2;36796;:7;:::i;:::-;36770:20;36788:2;36770:15;:20;:::i;:::-;36758:7;36763:2;36758;:7;:::i;:::-;36757:34;;;;:::i;:::-;36756:48;;;;:::i;:::-;36751:53;;:2;:53;:::i;:::-;36744:60;36204:849;-1:-1:-1;;;;;;36204:849:39:o;36640:353::-;36969:7;36974:2;36969;:7;:::i;:::-;36943:20;36961:2;36943:15;:20;:::i;:::-;36931:7;36936:2;36931;:7;:::i;:::-;36930:34;;;;:::i;:::-;36929:48;;;;:::i;:::-;36924:53;;:2;:53;:::i;20770:1815::-;21296:18;;21081:7;;;;;;;;21279:36;;-1:-1:-1;;;;;21296:18:39;21279:16;:36::i;:::-;21263:52;;21326:11;21340:44;21344:5;21351:12;:32;;;21340:3;:44::i;:::-;21430:22;;21326:58;;-1:-1:-1;21397:13:39;;21413:40;;-1:-1:-1;;;;;21430:22:39;21413:16;:40::i;:::-;21397:56;;21464:11;21478:48;21482:5;21489:16;:36;;;21478:3;:48::i;:::-;21582:46;;;;;;;;21539:40;21582:46;;;;;;;;;;;;;;;;;;;;;;;;;21639:21;;;21464:62;;-1:-1:-1;21766:26:39;21464:62;21776:3;21652:8;21766:4;:26::i;:::-;21759:1;:4;;:33;;;;;21841:11;21833:1;:4;;;21819:11;:18;;;;:::i;:::-;21818:34;;;;:::i;:::-;21810:4;;:43;;;;:::i;:::-;21803:4;;;:50;21874:18;;;;21866:55;;;;-1:-1:-1;;;21866:55:39;;31726:2:41;21866:55:39;;;31708:21:41;31765:2;31745:18;;;31738:30;31804:26;31784:18;;;31777:54;31848:18;;21866:55:39;31524:348:41;21866:55:39;21943:28;21949:1;:10;;;21961:3;21966:1;:4;;;21943:5;:28::i;:::-;21934:6;;;:37;22000:21;22013:7;22000:12;:21::i;:::-;21984:13;;;:37;;;22260:6;;;;22253:4;;22245;;;;22209:18;;1842:6;;21984:37;;22260:6;;22239:10;;:3;:10;:::i;:::-;22238:19;;;;:::i;:::-;:28;;;;:::i;:::-;22237:46;;;;:::i;:::-;22236:66;;;;:::i;:::-;22230:72;;:3;:72;:::i;:::-;22209:93;;22313:18;1842:6;22373:1;:13;;;22364:1;:4;;;22356:1;:4;;;22350:3;:10;;;;:::i;:::-;22349:19;;;;:::i;:::-;22342:27;;:3;:27;:::i;:::-;22341:45;;;;:::i;:::-;22340:65;;;;:::i;:::-;22334:71;;:3;:71;:::i;:::-;22313:92;;22418:10;22444:35;22450:1;:10;;;22462;22474:1;:4;;;22444:5;:35::i;:::-;22431:48;;:10;:48;:::i;:::-;22418:61;;22508:12;:32;;;22503:1;22498:2;:6;;;;:::i;:::-;22497:43;;;;:::i;:::-;22565:6;;;;;22492:48;;-1:-1:-1;22565:6:39;;-1:-1:-1;22573:3:39;;-1:-1:-1;;;;;;;20770:1815:39;;;;;;;;;;:::o;39424:130::-;39515:31;;-1:-1:-1;;;39515:31:39;;39540:4;39515:31;;;2233:51:41;39488:7:39;;-1:-1:-1;;;;;39515:16:39;;;;;2206:18:41;;39515:31:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;33956:146::-;34038:7;34065:29;34075:19;34065:7;:29;:::i;31940:1579::-;32052:7;;32084:13;32093:4;32084:6;:13;:::i;:::-;32072:25;;32112:1;32117;32112:6;32108:20;;32127:1;32120:8;;;;;32108:20;32141:13;32177:1;32141:13;32202:14;2394:1;32202;:14;:::i;:::-;32189:27;;32234:9;32229:983;2343:3;32249:1;:18;32229:983;;;32302:1;32397:19;2394:1;32397:6;:19;:::i;:::-;32386:6;32391:1;32386:2;:6;:::i;:::-;32385:32;;;;:::i;:::-;32380:37;-1:-1:-1;32449:17:39;2394:1;32449:4;:17;:::i;:::-;32438:6;32443:1;32438:2;:6;:::i;:::-;32437:30;;;;:::i;:::-;32432:35;;32492:1;32484:9;;32510:11;32571:1;2394;32551:2;:15;;;;:::i;:::-;34660:3;32526:6;32531:1;32526:2;:6;:::i;:::-;32525:22;;;;:::i;:::-;:42;;;;:::i;:::-;32524:48;;;;:::i;:::-;32510:62;-1:-1:-1;32587:13:39;32663:2;32645:14;2394:1;32658;32645:14;:::i;:::-;32644:21;;;;:::i;:::-;34660:3;32625:1;32605:16;34660:3;32605:2;:16;:::i;:::-;32604:22;;;;:::i;:::-;32603:38;;;;:::i;:::-;:62;;;;:::i;:::-;32587:78;-1:-1:-1;32684:11:39;32587:78;32684:3;:11;:::i;:::-;32680:15;-1:-1:-1;33140:16:39;32680:15;33150:5;33140:9;:16::i;:::-;33136:65;;;33184:1;33177:8;;;;;;;;;;;;33136:65;32274:938;;;32269:3;;;;;:::i;:::-;;;;32229:983;;;-1:-1:-1;33482:29:39;;-1:-1:-1;;;33482:29:39;;32079:2:41;33482:29:39;;;32061:21:41;32118:2;32098:18;;;32091:30;-1:-1:-1;;;32137:18:41;;;32130:49;32196:18;;33482:29:39;31877:343:41;25792:807:39;25902:7;;25945:19;2394:1;25945:6;:19;:::i;:::-;25935:5;25939:1;;25935:5;:::i;:::-;25934:31;;;;:::i;:::-;25922:43;-1:-1:-1;25988:6:39;25976:9;26018:14;2394:1;26018;:14;:::i;:::-;26005:27;-1:-1:-1;26074:15:39;2394:1;26005:27;26074:15;:::i;:::-;34660:3;26050:5;26054:1;26050;:5;:::i;:::-;:19;;;;:::i;:::-;26049:41;;;;:::i;:::-;26045:45;-1:-1:-1;26103:9:39;26140:2;26121:15;34660:3;26121:1;:15;:::i;:::-;26120:22;;;;:::i;:::-;26115:28;;:1;:28;:::i;:::-;26103:40;-1:-1:-1;26156:13:39;26192:1;26156:13;26204:337;2343:3;26224:1;:18;26204:337;;;26272:1;26264:9;;26288:11;26310:1;26306;26302;:5;;;;:::i;:::-;:9;;;;:::i;:::-;26288:23;-1:-1:-1;26326:13:39;26354:1;26350;26342:5;:1;26346;26342:5;:::i;:::-;:9;;;;:::i;:::-;:13;;;;:::i;:::-;26326:29;-1:-1:-1;26374:11:39;26326:29;26374:3;:11;:::i;:::-;26370:15;-1:-1:-1;26469:16:39;26370:15;26479:5;26469:9;:16::i;:::-;26465:65;;;26513:1;26506:8;;;;;;;;;;;;;26465:65;26249:292;;26244:3;;;;;:::i;:::-;;;;26204:337;;;-1:-1:-1;26551:40:39;;-1:-1:-1;;;26551:40:39;;32427:2:41;26551:40:39;;;32409:21:41;32466:2;32446:18;;;32439:30;32505:32;32485:18;;;32478:60;32555:18;;26551:40:39;32225:354:41;34292:117:39;34354:7;34381:20;2394:1;34381:7;:20;:::i;2283:117:36:-;2345:4;2390:1;2370:16;2381:1;2384;2370:10;:16::i;:::-;:21;;;2283:117;-1:-1:-1;;;2283:117:36:o;2614:165::-;2679:7;2707:1;2703;:5;2699:50;;;2732:5;2736:1;2732;:5;:::i;:::-;2725:12;;;;2699:50;2766:5;2770:1;2766;:5;:::i;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;:::o;196:139:41:-;-1:-1:-1;;;;;279:31:41;;269:42;;259:70;;325:1;322;315:12;340:339;424:6;432;485:2;473:9;464:7;460:23;456:32;453:52;;;501:1;498;491:12;453:52;540:9;527:23;559:39;592:5;559:39;:::i;:::-;617:5;669:2;654:18;;;;641:32;;-1:-1:-1;;;340:339:41:o;1080:180::-;1139:6;1192:2;1180:9;1171:7;1167:23;1163:32;1160:52;;;1208:1;1205;1198:12;1160:52;-1:-1:-1;1231:23:41;;1080:180;-1:-1:-1;1080:180:41:o;1265:159::-;1359:6;1392:2;1380:15;;1377:24;-1:-1:-1;1374:44:41;;;1414:1;1411;1404:12;1429:372;1531:6;1539;1547;1600:3;1588:9;1579:7;1575:23;1571:33;1568:53;;;1617:1;1614;1607:12;1568:53;1640;1685:7;1674:9;1640:53;:::i;:::-;1630:63;1740:2;1725:18;;1712:32;;-1:-1:-1;1791:2:41;1776:18;;;1763:32;;1429:372;-1:-1:-1;;;1429:372:41:o;1806:248::-;1874:6;1882;1935:2;1923:9;1914:7;1910:23;1906:32;1903:52;;;1951:1;1948;1941:12;1903:52;-1:-1:-1;;1974:23:41;;;2044:2;2029:18;;;2016:32;;-1:-1:-1;1806:248:41:o;2519:339::-;2603:6;2611;2664:2;2652:9;2643:7;2639:23;2635:32;2632:52;;;2680:1;2677;2670:12;2632:52;2716:9;2703:23;2693:33;;2776:2;2765:9;2761:18;2748:32;2789:39;2822:5;2789:39;:::i;:::-;2847:5;2837:15;;;2519:339;;;;;:::o;3324:374::-;3394:8;3404:6;3458:3;3451:4;3443:6;3439:17;3435:27;3425:55;;3476:1;3473;3466:12;3425:55;-1:-1:-1;3499:20:41;;3542:18;3531:30;;3528:50;;;3574:1;3571;3564:12;3528:50;3611:4;3603:6;3599:17;3587:29;;3671:3;3664:4;3654:6;3651:1;3647:14;3639:6;3635:27;3631:38;3628:47;3625:67;;;3688:1;3685;3678:12;3625:67;3324:374;;;;;:::o;3703:455::-;3800:6;3808;3861:2;3849:9;3840:7;3836:23;3832:32;3829:52;;;3877:1;3874;3867:12;3829:52;3917:9;3904:23;3950:18;3942:6;3939:30;3936:50;;;3982:1;3979;3972:12;3936:50;4021:77;4090:7;4081:6;4070:9;4066:22;4021:77;:::i;:::-;4117:8;;3995:103;;-1:-1:-1;3703:455:41;-1:-1:-1;;;;3703:455:41:o;4163:250::-;4248:1;4258:113;4272:6;4269:1;4266:13;4258:113;;;4348:11;;;4342:18;4329:11;;;4322:39;4294:2;4287:10;4258:113;;;-1:-1:-1;;4405:1:41;4387:16;;4380:27;4163:250::o;4418:270::-;4459:3;4497:5;4491:12;4524:6;4519:3;4512:19;4540:76;4609:6;4602:4;4597:3;4593:14;4586:4;4579:5;4575:16;4540:76;:::i;:::-;4670:2;4649:15;-1:-1:-1;;4645:29:41;4636:39;;;;4677:4;4632:50;;4418:270;-1:-1:-1;;4418:270:41:o;4693:800::-;4853:4;4882:2;4922;4911:9;4907:18;4952:2;4941:9;4934:21;4975:6;5010;5004:13;5041:6;5033;5026:22;5079:2;5068:9;5064:18;5057:25;;5141:2;5131:6;5128:1;5124:14;5113:9;5109:30;5105:39;5091:53;;5179:2;5171:6;5167:15;5200:1;5210:254;5224:6;5221:1;5218:13;5210:254;;;5317:2;5313:7;5301:9;5293:6;5289:22;5285:36;5280:3;5273:49;5345:39;5377:6;5368;5362:13;5345:39;:::i;:::-;5335:49;-1:-1:-1;5442:12:41;;;;5407:15;;;;5246:1;5239:9;5210:254;;;-1:-1:-1;5481:6:41;;4693:800;-1:-1:-1;;;;;;;4693:800:41:o;5498:127::-;5559:10;5554:3;5550:20;5547:1;5540:31;5590:4;5587:1;5580:15;5614:4;5611:1;5604:15;5630:275;5701:2;5695:9;5766:2;5747:13;;-1:-1:-1;;5743:27:41;5731:40;;5801:18;5786:34;;5822:22;;;5783:62;5780:88;;;5848:18;;:::i;:::-;5884:2;5877:22;5630:275;;-1:-1:-1;5630:275:41:o;5910:187::-;5959:4;5992:18;5984:6;5981:30;5978:56;;;6014:18;;:::i;:::-;-1:-1:-1;6080:2:41;6059:15;-1:-1:-1;;6055:29:41;6086:4;6051:40;;5910:187::o;6102:464::-;6145:5;6198:3;6191:4;6183:6;6179:17;6175:27;6165:55;;6216:1;6213;6206:12;6165:55;6252:6;6239:20;6283:49;6299:32;6328:2;6299:32;:::i;:::-;6283:49;:::i;:::-;6357:2;6348:7;6341:19;6403:3;6396:4;6391:2;6383:6;6379:15;6375:26;6372:35;6369:55;;;6420:1;6417;6410:12;6369:55;6485:2;6478:4;6470:6;6466:17;6459:4;6450:7;6446:18;6433:55;6533:1;6508:16;;;6526:4;6504:27;6497:38;;;;6512:7;6102:464;-1:-1:-1;;;6102:464:41:o;6571:1253::-;6773:6;6781;6789;6797;6805;6813;6821;6829;6882:3;6870:9;6861:7;6857:23;6853:33;6850:53;;;6899:1;6896;6889:12;6850:53;6938:9;6925:23;6957:39;6990:5;6957:39;:::i;:::-;7015:5;-1:-1:-1;7072:2:41;7057:18;;7044:32;7085:41;7044:32;7085:41;:::i;:::-;7145:7;-1:-1:-1;7203:2:41;7188:18;;7175:32;7226:18;7256:14;;;7253:34;;;7283:1;7280;7273:12;7253:34;7306:50;7348:7;7339:6;7328:9;7324:22;7306:50;:::i;:::-;7296:60;;7409:2;7398:9;7394:18;7381:32;7365:48;;7438:2;7428:8;7425:16;7422:36;;;7454:1;7451;7444:12;7422:36;;7477:52;7521:7;7510:8;7499:9;7495:24;7477:52;:::i;:::-;7467:62;;;7576:3;7565:9;7561:19;7548:33;7538:43;;7628:3;7617:9;7613:19;7600:33;7590:43;;7680:3;7669:9;7665:19;7652:33;7642:43;;7737:3;7726:9;7722:19;7709:33;7751:41;7784:7;7751:41;:::i;:::-;7811:7;7801:17;;;6571:1253;;;;;;;;;;;:::o;8021:114::-;8105:4;8098:5;8094:16;8087:5;8084:27;8074:55;;8125:1;8122;8115:12;8140:667;8242:6;8250;8258;8266;8274;8282;8335:3;8323:9;8314:7;8310:23;8306:33;8303:53;;;8352:1;8349;8342:12;8303:53;8391:9;8378:23;8410:39;8443:5;8410:39;:::i;:::-;8468:5;-1:-1:-1;8520:2:41;8505:18;;8492:32;;-1:-1:-1;8571:2:41;8556:18;;8543:32;;-1:-1:-1;8627:2:41;8612:18;;8599:32;8640:31;8599:32;8640:31;:::i;:::-;8140:667;;;;-1:-1:-1;8140:667:41;;8744:3;8729:19;;8716:33;;8796:3;8781:19;;;8768:33;;-1:-1:-1;8140:667:41;-1:-1:-1;;8140:667:41:o;8812:476::-;8914:6;8922;8930;8938;8991:3;8979:9;8970:7;8966:23;8962:33;8959:53;;;9008:1;9005;8998:12;8959:53;9047:9;9034:23;9066:39;9099:5;9066:39;:::i;:::-;9124:5;9176:2;9161:18;;9148:32;;-1:-1:-1;9227:2:41;9212:18;;9199:32;;9278:2;9263:18;9250:32;;-1:-1:-1;8812:476:41;-1:-1:-1;;;8812:476:41:o;9293:::-;9395:6;9403;9411;9419;9472:3;9460:9;9451:7;9447:23;9443:33;9440:53;;;9489:1;9486;9479:12;9440:53;9525:9;9512:23;9502:33;;9585:2;9574:9;9570:18;9557:32;9598:39;9631:5;9598:39;:::i;:::-;9293:476;;9656:5;;-1:-1:-1;;;;9708:2:41;9693:18;;9680:32;;9759:2;9744:18;9731:32;;9293:476::o;9774:372::-;9876:6;9884;9892;9945:3;9933:9;9924:7;9920:23;9916:33;9913:53;;;9962:1;9959;9952:12;9913:53;9998:9;9985:23;9975:33;;10027:62;10081:7;10076:2;10065:9;10061:18;10027:62;:::i;:::-;10017:72;;10136:2;10125:9;10121:18;10108:32;10098:42;;9774:372;;;;;:::o;10151:494::-;10331:2;10316:18;;10320:9;10411:6;10289:4;10445:194;10459:4;10456:1;10453:11;10445:194;;;10518:13;;10506:26;;10555:4;10579:12;;;;10614:15;;;;10479:1;10472:9;10445:194;;;10449:3;;;10151:494;;;;:::o;10650:118::-;10736:5;10729:13;10722:21;10715:5;10712:32;10702:60;;10758:1;10755;10748:12;10773:573;10865:6;10873;10881;10934:2;10922:9;10913:7;10909:23;10905:32;10902:52;;;10950:1;10947;10940:12;10902:52;10990:9;10977:23;11023:18;11015:6;11012:30;11009:50;;;11055:1;11052;11045:12;11009:50;11094:77;11163:7;11154:6;11143:9;11139:22;11094:77;:::i;:::-;11190:8;;-1:-1:-1;11068:103:41;-1:-1:-1;;11275:2:41;11260:18;;11247:32;11288:28;11247:32;11288:28;:::i;:::-;11335:5;11325:15;;;10773:573;;;;;:::o;11351:255::-;11410:6;11463:2;11451:9;11442:7;11438:23;11434:32;11431:52;;;11479:1;11476;11469:12;11431:52;11518:9;11505:23;11537:39;11570:5;11537:39;:::i;11834:184::-;11904:6;11957:2;11945:9;11936:7;11932:23;11928:32;11925:52;;;11973:1;11970;11963:12;11925:52;-1:-1:-1;11996:16:41;;11834:184;-1:-1:-1;11834:184:41:o;12897:450::-;13001:5;13024:1;13034:307;13048:4;13045:1;13042:11;13034:307;;;13105:13;;13147:9;;-1:-1:-1;;;;;13143:35:41;13131:48;;13202:4;13246:11;;;13240:18;13226:12;;;13219:40;13288:4;13279:14;;;;13316:15;;;;13175:1;13061:9;13034:307;;13352:849;13870:3;13855:19;;13883:54;13859:9;13919:6;13883:54;:::i;:::-;13988:4;13980:6;13974:3;13963:9;13959:19;13946:47;14024:3;14009:19;;14002:35;;;;14068:3;14053:19;;14046:35;;;;14112:3;14097:19;;14090:35;;;;-1:-1:-1;;;;;14162:32:41;14156:3;14141:19;;;14134:61;13352:849;;-1:-1:-1;;13352:849:41:o;14792:127::-;14853:10;14848:3;14844:20;14841:1;14834:31;14884:4;14881:1;14874:15;14908:4;14905:1;14898:15;14924:521;15001:4;15007:6;15067:11;15054:25;15161:2;15157:7;15146:8;15130:14;15126:29;15122:43;15102:18;15098:68;15088:96;;15180:1;15177;15170:12;15088:96;15207:33;;15259:20;;;-1:-1:-1;15302:18:41;15291:30;;15288:50;;;15334:1;15331;15324:12;15288:50;15367:4;15355:17;;-1:-1:-1;15398:14:41;15394:27;;;15384:38;;15381:58;;;15435:1;15432;15425:12;15450:271;15633:6;15625;15620:3;15607:33;15589:3;15659:16;;15684:13;;;15659:16;15450:271;-1:-1:-1;15450:271:41:o;15726:649::-;15806:6;15859:2;15847:9;15838:7;15834:23;15830:32;15827:52;;;15875:1;15872;15865:12;15827:52;15908:9;15902:16;15941:18;15933:6;15930:30;15927:50;;;15973:1;15970;15963:12;15927:50;15996:22;;16049:4;16041:13;;16037:27;-1:-1:-1;16027:55:41;;16078:1;16075;16068:12;16027:55;16107:2;16101:9;16132:49;16148:32;16177:2;16148:32;:::i;16132:49::-;16204:2;16197:5;16190:17;16244:7;16239:2;16234;16230;16226:11;16222:20;16219:33;16216:53;;;16265:1;16262;16255:12;16216:53;16278:67;16342:2;16337;16330:5;16326:14;16321:2;16317;16313:11;16278:67;:::i;16380:219::-;16529:2;16518:9;16511:21;16492:4;16549:44;16589:2;16578:9;16574:18;16566:6;16549:44;:::i;16604:127::-;16665:10;16660:3;16656:20;16653:1;16646:31;16696:4;16693:1;16686:15;16720:4;16717:1;16710:15;16736:135;16775:3;16796:17;;;16793:43;;16816:18;;:::i;:::-;-1:-1:-1;16863:1:41;16852:13;;16736:135::o;18330:247::-;18398:6;18451:2;18439:9;18430:7;18426:23;18422:32;18419:52;;;18467:1;18464;18457:12;18419:52;18499:9;18493:16;18518:29;18541:5;18518:29;:::i;18582:151::-;18672:4;18665:12;;;18651;;;18647:31;;18690:14;;18687:40;;;18707:18;;:::i;18738:422::-;18827:1;18870:5;18827:1;18884:270;18905:7;18895:8;18892:21;18884:270;;;18964:4;18960:1;18956:6;18952:17;18946:4;18943:27;18940:53;;;18973:18;;:::i;:::-;19023:7;19013:8;19009:22;19006:55;;;19043:16;;;;19006:55;19122:22;;;;19082:15;;;;18884:270;;;18888:3;18738:422;;;;;:::o;19165:806::-;19214:5;19244:8;19234:80;;-1:-1:-1;19285:1:41;19299:5;;19234:80;19333:4;19323:76;;-1:-1:-1;19370:1:41;19384:5;;19323:76;19415:4;19433:1;19428:59;;;;19501:1;19496:130;;;;19408:218;;19428:59;19458:1;19449:10;;19472:5;;;19496:130;19533:3;19523:8;19520:17;19517:43;;;19540:18;;:::i;:::-;-1:-1:-1;;19596:1:41;19582:16;;19611:5;;19408:218;;19710:2;19700:8;19697:16;19691:3;19685:4;19682:13;19678:36;19672:2;19662:8;19659:16;19654:2;19648:4;19645:12;19641:35;19638:77;19635:159;;;-1:-1:-1;19747:19:41;;;19779:5;;19635:159;19826:34;19851:8;19845:4;19826:34;:::i;:::-;19896:6;19892:1;19888:6;19884:19;19875:7;19872:32;19869:58;;;19907:18;;:::i;:::-;19945:20;;19165:806;-1:-1:-1;;;19165:806:41:o;19976:140::-;20034:5;20063:47;20104:4;20094:8;20090:19;20084:4;20063:47;:::i;20468:168::-;20541:9;;;20572;;20589:15;;;20583:22;;20569:37;20559:71;;20610:18;;:::i;21344:381::-;21541:2;21530:9;21523:21;21504:4;21567:44;21607:2;21596:9;21592:18;21584:6;21567:44;:::i;:::-;21659:9;21651:6;21647:22;21642:2;21631:9;21627:18;21620:50;21687:32;21712:6;21704;21687:32;:::i;21730:245::-;21797:6;21850:2;21838:9;21829:7;21825:23;21821:32;21818:52;;;21866:1;21863;21856:12;21818:52;21898:9;21892:16;21917:28;21939:5;21917:28;:::i;22845:128::-;22912:9;;;22933:11;;;22930:37;;;22947:18;;:::i;23977:777::-;24436:25;;;24492:2;24477:18;;24470:34;;;;24535:2;24520:18;;24513:34;;;;24578:2;24563:18;;24556:34;;;;24621:3;24606:19;;24599:35;24665:3;24650:19;;24643:35;-1:-1:-1;;;;;24715:32:41;24709:3;24694:19;;24687:61;24423:3;24408:19;;23977:777::o;24759:650::-;25180:25;;;25167:3;25152:19;;25214:63;25273:2;25258:18;;25250:6;25214:63;:::i;:::-;25328:4;25320:6;25314:3;25303:9;25299:19;25286:47;-1:-1:-1;;;;;25370:32:41;;;;25364:3;25349:19;;;;25342:61;24759:650;;-1:-1:-1;;;24759:650:41:o;25414:762::-;25507:6;25560:2;25548:9;25539:7;25535:23;25531:32;25528:52;;;25576:1;25573;25566:12;25528:52;25625:7;25618:4;25607:9;25603:20;25599:34;25589:62;;25647:1;25644;25637:12;25589:62;25680:2;25674:9;25722:2;25714:6;25710:15;25791:6;25779:10;25776:22;25755:18;25743:10;25740:34;25737:62;25734:88;;;25802:18;;:::i;:::-;25842:10;25838:2;25831:22;;25873:6;25917:2;25906:9;25902:18;25943:7;25935:6;25932:19;25929:39;;;25964:1;25961;25954:12;25929:39;25988:9;26006:139;26022:6;26017:3;26014:15;26006:139;;;26090:10;;26078:23;;26130:4;26121:14;;;;26039;26006:139;;;-1:-1:-1;26164:6:41;;25414:762;-1:-1:-1;;;;;25414:762:41:o;26722:1011::-;27151:4;27180:3;27192:54;27236:9;27228:6;27192:54;:::i;:::-;27277:3;27262:19;;27255:31;;;27302:18;;27295:34;;;27348:3;-1:-1:-1;;;;;27363:31:41;;27360:51;;;27407:1;27404;27397:12;27360:51;27441:6;27438:1;27434:14;27498:6;27490;27485:2;27474:9;27470:18;27457:48;27597:14;;27590:22;27584:3;27569:19;;27562:51;27644:3;27629:19;;27622:35;;;;-1:-1:-1;;;;;;27694:32:41;;;;27688:3;27673:19;;27666:61;27526:22;;;27522:31;;26722:1011;-1:-1:-1;;;26722:1011:41:o;27738:518::-;28083:25;;;28070:3;28055:19;;28117:63;28176:2;28161:18;;28153:6;28117:63;:::i;:::-;-1:-1:-1;;;;;28217:32:41;;;;28237:3;28196:19;;;;28189:61;27738:518;;-1:-1:-1;;27738:518:41:o;30002:407::-;30204:2;30186:21;;;30243:2;30223:18;;;30216:30;30282:34;30277:2;30262:18;;30255:62;-1:-1:-1;;;30348:2:41;30333:18;;30326:41;30399:3;30384:19;;30002:407::o;31172:217::-;31212:1;31238;31228:132;;31282:10;31277:3;31273:20;31270:1;31263:31;31317:4;31314:1;31307:15;31345:4;31342:1;31335:15;31228:132;-1:-1:-1;31374:9:41;;31172:217::o;31394:125::-;31459:9;;;31480:10;;;31477:36;;;31493:18;;:::i",
    "linkReferences": {
      "src/tenderswap/SwapUtils.sol": {
        "SwapUtils": [
          {
            "start": 1467,
            "length": 20
          },
          {
            "start": 1641,
            "length": 20
          },
          {
            "start": 1790,
            "length": 20
          },
          {
            "start": 1930,
            "length": 20
          },
          {
            "start": 2119,
            "length": 20
          },
          {
            "start": 2285,
            "length": 20
          },
          {
            "start": 2363,
            "length": 20
          },
          {
            "start": 2595,
            "length": 20
          },
          {
            "start": 4550,
            "length": 20
          },
          {
            "start": 4630,
            "length": 20
          },
          {
            "start": 4849,
            "length": 20
          },
          {
            "start": 5027,
            "length": 20
          },
          {
            "start": 5208,
            "length": 20
          },
          {
            "start": 5378,
            "length": 20
          },
          {
            "start": 5460,
            "length": 20
          },
          {
            "start": 5549,
            "length": 20
          },
          {
            "start": 5697,
            "length": 20
          },
          {
            "start": 5865,
            "length": 20
          },
          {
            "start": 5988,
            "length": 20
          },
          {
            "start": 6210,
            "length": 20
          }
        ]
      }
    }
  },
  "methodIdentifiers": {
    "addLiquidity(uint256[2],uint256,uint256)": "46eda749",
    "amplificationParams()": "256967ac",
    "calculateRemoveLiquidity(uint256)": "f2fad2b6",
    "calculateRemoveLiquidityOneToken(uint256,address)": "805d2766",
    "calculateSwap(address,uint256)": "1de8d8cb",
    "calculateTokenAmount(uint256[],bool)": "e6ab2806",
    "feeParams()": "9242164f",
    "getA()": "d46300fd",
    "getAPrecise()": "0ba81959",
    "getToken0()": "ba94a315",
    "getToken0Balance()": "c2d9ecfa",
    "getToken1()": "6f26a710",
    "getToken1Balance()": "5153786b",
    "getVirtualPrice()": "e25aa5fa",
    "initialize(address,address,string,string,uint256,uint256,uint256,address)": "afcd5f4b",
    "lpToken()": "5fcbd285",
    "multicall(bytes[])": "ac9650d8",
    "owner()": "8da5cb5b",
    "rampA(uint256,uint256)": "593d132c",
    "removeLiquidity(uint256,uint256[2],uint256)": "d6f0df62",
    "removeLiquidityImbalance(uint256[2],uint256,uint256)": "bfc65c9b",
    "removeLiquidityOneToken(uint256,address,uint256,uint256)": "ce1fdb8b",
    "renounceOwnership()": "715018a6",
    "selfPermit(address,uint256,uint256,uint8,bytes32,bytes32)": "f3995c67",
    "selfPermitIfNecessary(address,uint256,uint256,uint8,bytes32,bytes32)": "c2e3140a",
    "setAdminFee(uint256)": "8beb60b6",
    "setSwapFee(uint256)": "34e19907",
    "stopRampA()": "c4db7fa0",
    "swap(address,uint256,uint256,uint256)": "c9ec9248",
    "transferOwnership(address)": "f2fde38b"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[2]\",\"name\":\"tokenAmounts\",\"type\":\"uint256[2]\"},{\"indexed\":false,\"internalType\":\"uint256[2]\",\"name\":\"fees\",\"type\":\"uint256[2]\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"invariant\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lpTokenSupply\",\"type\":\"uint256\"}],\"name\":\"AddLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newAdminFee\",\"type\":\"uint256\"}],\"name\":\"NewAdminFee\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newSwapFee\",\"type\":\"uint256\"}],\"name\":\"NewSwapFee\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldA\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newA\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"initialTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"futureTime\",\"type\":\"uint256\"}],\"name\":\"RampA\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[2]\",\"name\":\"tokenAmounts\",\"type\":\"uint256[2]\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lpTokenSupply\",\"type\":\"uint256\"}],\"name\":\"RemoveLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[2]\",\"name\":\"tokenAmounts\",\"type\":\"uint256[2]\"},{\"indexed\":false,\"internalType\":\"uint256[2]\",\"name\":\"fees\",\"type\":\"uint256[2]\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"invariant\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lpTokenSupply\",\"type\":\"uint256\"}],\"name\":\"RemoveLiquidityImbalance\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lpTokenAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lpTokenSupply\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"contract IERC20\",\"name\":\"tokenReceived\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"receivedAmount\",\"type\":\"uint256\"}],\"name\":\"RemoveLiquidityOne\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"currentA\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"StopRampA\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract IERC20\",\"name\":\"tokenSold\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountSold\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountReceived\",\"type\":\"uint256\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256[2]\",\"name\":\"_amounts\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256\",\"name\":\"_minToMint\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"amplificationParams\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"initialA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"futureA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"initialATime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"futureATime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"calculateRemoveLiquidity\",\"outputs\":[{\"internalType\":\"uint256[2]\",\"name\":\"\",\"type\":\"uint256[2]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"contract IERC20\",\"name\":\"tokenReceive\",\"type\":\"address\"}],\"name\":\"calculateRemoveLiquidityOneToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_tokenFrom\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_dx\",\"type\":\"uint256\"}],\"name\":\"calculateSwap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bool\",\"name\":\"deposit\",\"type\":\"bool\"}],\"name\":\"calculateTokenAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeParams\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"swapFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"adminFee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getA\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAPrecise\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getToken0\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getToken0Balance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getToken1\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getToken1Balance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVirtualPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_token0\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"_token1\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"lpTokenName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"lpTokenSymbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_a\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_adminFee\",\"type\":\"uint256\"},{\"internalType\":\"contract LiquidityPoolToken\",\"name\":\"lpTokenTargetAddress\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lpToken\",\"outputs\":[{\"internalType\":\"contract LiquidityPoolToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"_data\",\"type\":\"bytes[]\"}],\"name\":\"multicall\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"futureA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"futureTime\",\"type\":\"uint256\"}],\"name\":\"rampA\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256[2]\",\"name\":\"minAmounts\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[{\"internalType\":\"uint256[2]\",\"name\":\"\",\"type\":\"uint256[2]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[2]\",\"name\":\"_amounts\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256\",\"name\":\"_maxBurnAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidityImbalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"contract IERC20\",\"name\":\"_tokenReceive\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_minAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidityOneToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"_v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"_r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_s\",\"type\":\"bytes32\"}],\"name\":\"selfPermit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"_v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"_r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_s\",\"type\":\"bytes32\"}],\"name\":\"selfPermitIfNecessary\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newAdminFee\",\"type\":\"uint256\"}],\"name\":\"setAdminFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newSwapFee\",\"type\":\"uint256\"}],\"name\":\"setSwapFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopRampA\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_tokenFrom\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_dx\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minDy\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_deadline\",\"type\":\"uint256\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwnner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"TenderSwap is a light-weight StableSwap implementation for two assets. See the Curve StableSwap paper for more details (https://curve.fi/files/stableswap-paper.pdf). that trade 1:1 with eachother (e.g. USD stablecoins or tenderToken derivatives vs their underlying assets). It supports Elastic Supply ERC20 tokens, which are tokens of which the balances can change as the total supply of the token 'rebases'.\",\"events\":{\"AddLiquidity(address,uint256[2],uint256[2],uint256,uint256)\":{\"params\":{\"fees\":\"fees deducted for each of the tokens added corresponding to pool cardinality of [token0, token1]\",\"invariant\":\"pool invariant after adding liquidity\",\"lpTokenSupply\":\"the lpToken supply after minting\",\"provider\":\"address of the account providing liquidity\",\"tokenAmounts\":\"array of token amounts provided corresponding to pool cardinality of [token0, token1]\"}},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"NewAdminFee(uint256)\":{\"params\":{\"newAdminFee\":\"admin fee after update\"}},\"NewSwapFee(uint256)\":{\"params\":{\"newSwapFee\":\"swap fee after update\"}},\"RampA(uint256,uint256,uint256,uint256)\":{\"params\":{\"futureTime\":\"ramp end timestamp\",\"initialTime\":\"ramp start timestamp\",\"newA\":\"target value of A to ramp up to\",\"oldA\":\"initial A value\"}},\"RemoveLiquidity(address,uint256[2],uint256)\":{\"params\":{\"lpTokenSupply\":\"total supply of liquidity pool token after removing liquidity\",\"provider\":\"address of the account removing liquidity\",\"tokenAmounts\":\"array of token amounts removed corresponding to pool cardinality of [token0, token1]\"}},\"RemoveLiquidityImbalance(address,uint256[2],uint256[2],uint256,uint256)\":{\"params\":{\"fees\":\"fees for each of the tokens removed corresponding to pool cardinality of [token0, token1]\",\"invariant\":\"pool invariant after removing liquidity\",\"lpTokenSupply\":\"total supply of liquidity pool token after removing liquidity\",\"provider\":\"address of the the account removing liquidity imbalanced\",\"tokenAmounts\":\"array of amounts of tokens being removed corresponding  to pool cardinality of [token0, token1]\"}},\"RemoveLiquidityOne(address,uint256,uint256,address,uint256)\":{\"params\":{\"lpTokenAmount\":\"amount of liquidity pool tokens burnt\",\"lpTokenSupply\":\"total supply of liquidity pool token after removing liquidity\",\"provider\":\"address of the account removing liquidity\",\"receivedAmount\":\"amount of tokens received\",\"tokenReceived\":\"address of the token for which liquidity was removed\"}},\"StopRampA(uint256,uint256)\":{\"params\":{\"currentA\":\"current value of A\",\"time\":\"timestamp of when ramp is stopped\"}},\"Swap(address,address,uint256,uint256)\":{\"params\":{\"amountReceived\":\"amount of tokens received in exchange\",\"amountSold\":\"amount of tokens swapped\",\"buyer\":\"address of the account initiating the swap\",\"tokenSold\":\"address of the swapped token\"}}},\"kind\":\"dev\",\"methods\":{\"addLiquidity(uint256[2],uint256,uint256)\":{\"params\":{\"_amounts\":\"the amounts of each token to add, in their native precision          according to the cardinality of the pool [token0, token1]\",\"_deadline\":\"latest timestamp to accept this transaction\",\"_minToMint\":\"the minimum LP tokens adding this amount of liquidity should mint, otherwise revert. Handy for front-running mitigation\"},\"returns\":{\"_0\":\"amount of LP token user minted and received\"}},\"calculateRemoveLiquidity(uint256)\":{\"params\":{\"amount\":\"the amount of LP tokens that would be burned on withdrawal\"},\"returns\":{\"_0\":\"array of token balances that the user will receive\"}},\"calculateRemoveLiquidityOneToken(uint256,address)\":{\"params\":{\"tokenAmount\":\"the amount of LP token to burn\",\"tokenReceive\":\"the token to receive\"},\"returns\":{\"_0\":\"calculated amount of underlying token to be received. available to withdraw\"}},\"calculateSwap(address,uint256)\":{\"params\":{\"_dx\":\"the amount of tokens the user wants to sell. If the token charges a fee on transfers, use the amount that gets transferred after the fee.\",\"_tokenFrom\":\"the token the user wants to sell\"},\"returns\":{\"_0\":\"amount of tokens the user will receive\"}},\"calculateTokenAmount(uint256[],bool)\":{\"details\":\"This shouldn't be used outside frontends for user estimates.\",\"params\":{\"amounts\":\"an array of token amounts to deposit or withdrawal, corresponding to pool cardinality of [token0, token1]. The amount should be in each pooled token's native precision.\",\"deposit\":\"whether this is a deposit or a withdrawal\"},\"returns\":{\"_0\":\"token amount the user will receive\"}},\"getA()\":{\"details\":\"See the StableSwap paper for details\",\"returns\":{\"_0\":\"the amplifaction coefficient\"}},\"getAPrecise()\":{\"details\":\"See the StableSwap paper for details\",\"returns\":{\"_0\":\"A parameter in its raw precision form\"}},\"getToken0()\":{\"details\":\"EVM return type is IERC20\",\"returns\":{\"_0\":\"contract address\"}},\"getToken0Balance()\":{\"returns\":{\"_0\":\"current balance of the pooled tendertoken\"}},\"getToken1()\":{\"details\":\"EVM return type is IERC20\",\"returns\":{\"_0\":\"contract address\"}},\"getToken1Balance()\":{\"returns\":{\"_0\":\"current balance of the pooled underlying token\"}},\"getVirtualPrice()\":{\"returns\":{\"_0\":\"the override price, scaled to the POOL_PRECISION_DECIMALS\"}},\"initialize(address,address,string,string,uint256,uint256,uint256,address)\":{\"params\":{\"_a\":\"the amplification coefficient * n * (n - 1). See the StableSwap paper for details\",\"_adminFee\":\"default adminFee to be initialized with\",\"_fee\":\"default swap fee to be initialized with\",\"_token0\":\"First token in the pool\",\"_token1\":\"Second token in the pool\",\"lpTokenName\":\"the long-form name of the token to be deployed\",\"lpTokenSymbol\":\"the short symbol for the token to be deployed\",\"lpTokenTargetAddress\":\"the address of an existing LiquidityPoolToken contract to use as a target\"},\"returns\":{\"_0\":\"true is successfully initialized\"}},\"multicall(bytes[])\":{\"details\":\"The `msg.value` should not be trusted for any method callable from multicall.\",\"params\":{\"_data\":\"The encoded function data for each of the calls to make to this contract\"},\"returns\":{\"results\":\"The results from each of the calls passed in via data\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"rampA(uint256,uint256)\":{\"params\":{\"futureA\":\"the new A to ramp towards\",\"futureTime\":\"timestamp when the new A should be reached\"}},\"removeLiquidity(uint256,uint256[2],uint256)\":{\"details\":\"Liquidity can always be removed, even when the pool is paused.\",\"params\":{\"amount\":\"the amount of LP tokens to burn\",\"deadline\":\"latest timestamp to accept this transaction\",\"minAmounts\":\"the minimum amounts of each token in the pool        acceptable for this burn. Useful as a front-running mitigation        according to the cardinality of the pool [token0, token1]\"},\"returns\":{\"_0\":\"is the amounts of tokens user received\"}},\"removeLiquidityImbalance(uint256[2],uint256,uint256)\":{\"params\":{\"_amounts\":\"how much of each token to withdraw\",\"_deadline\":\"latest timestamp to accept this transaction\",\"_maxBurnAmount\":\"the max LP token provider is willing to pay to remove liquidity. Useful as a front-running mitigation.\"},\"returns\":{\"_0\":\"amount of LP tokens burned\"}},\"removeLiquidityOneToken(uint256,address,uint256,uint256)\":{\"params\":{\"_deadline\":\"latest timestamp to accept this transaction\",\"_minAmount\":\"the minimum amount to withdraw, otherwise revert\",\"_tokenAmount\":\"the amount of the token you want to receive\",\"_tokenReceive\":\"the  token you want to receive\"},\"returns\":{\"_0\":\"amount of chosen token user received\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"selfPermit(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"The `owner` is always msg.sender and the `spender` is always address(this).\",\"params\":{\"_deadline\":\"A timestamp, the current blocktime must be less than or equal to this timestamp\",\"_r\":\"Must produce valid secp256k1 signature from the holder along with `v` and `s`\",\"_s\":\"Must produce valid secp256k1 signature from the holder along with `r` and `v`\",\"_token\":\"The address of the token spent\",\"_v\":\"Must produce valid secp256k1 signature from the holder along with `r` and `s`\",\"_value\":\"The amount that can be spent of token\"}},\"selfPermitIfNecessary(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"The `owner` is always msg.sender and the `spender` is always address(this). Can be used instead of #selfPermit to prevent calls from failing due to a frontrun of a call to #selfPermit\",\"params\":{\"_deadline\":\"A timestamp, the current blocktime must be less than or equal to this timestamp\",\"_r\":\"Must produce valid secp256k1 signature from the holder along with `v` and `s`\",\"_s\":\"Must produce valid secp256k1 signature from the holder along with `r` and `v`\",\"_token\":\"The address of the token spent\",\"_v\":\"Must produce valid secp256k1 signature from the holder along with `r` and `s`\",\"_value\":\"The amount that can be spent of token\"}},\"setAdminFee(uint256)\":{\"params\":{\"newAdminFee\":\"new admin fee to be applied on future transactions\"}},\"setSwapFee(uint256)\":{\"params\":{\"newSwapFee\":\"new swap fee to be applied on future transactions\"}},\"swap(address,uint256,uint256,uint256)\":{\"details\":\"revert is token being sold is not in the pool.\",\"params\":{\"_deadline\":\"latest timestamp to accept this transaction\",\"_dx\":\"the amount of tokens the user wants to swap from\",\"_minDy\":\"the min amount the user would like to receive, or revert\",\"_tokenFrom\":\"the token the user wants to sell\"},\"returns\":{\"_0\":\"amount of tokens received\"}},\"transferOwnership(address)\":{\"params\":{\"_newOwner\":\"address of the new owner\"}}},\"stateVariables\":{\"lpToken\":{\"return\":\"Liquidity pool token contract.\",\"returns\":{\"_0\":\"Liquidity pool token contract.\"}}},\"title\":\"TenderSwap\",\"version\":1},\"userdoc\":{\"events\":{\"AddLiquidity(address,uint256[2],uint256[2],uint256,uint256)\":{\"notice\":\"AddLiquidity gets emitted when liquidity is added to the pool.\"},\"NewAdminFee(uint256)\":{\"notice\":\"NewAdminFee gets emitted when the admin fee is updated.\"},\"NewSwapFee(uint256)\":{\"notice\":\"NewSwapFee gets emitted when the swap fee is updated.\"},\"RampA(uint256,uint256,uint256,uint256)\":{\"notice\":\"RampA gets emitted when A has started ramping up.\"},\"RemoveLiquidity(address,uint256[2],uint256)\":{\"notice\":\"RemoveLiquidity gets emitted when liquidity for both tokens  is removed from the pool.\"},\"RemoveLiquidityImbalance(address,uint256[2],uint256[2],uint256,uint256)\":{\"notice\":\"RemoveLiquidityImbalance gets emitted when liquidity is removed weighted differently than the pool's current balances. with different weights than that of the pool.\"},\"RemoveLiquidityOne(address,uint256,uint256,address,uint256)\":{\"notice\":\"RemoveLiquidityOne gets emitted when single-sided liquidity is removed \"},\"StopRampA(uint256,uint256)\":{\"notice\":\"StopRampA gets emitted when ramping A is stopped manually\"},\"Swap(address,address,uint256,uint256)\":{\"notice\":\"Swap gets emitted when an accounts exchanges tokens.\"}},\"kind\":\"user\",\"methods\":{\"addLiquidity(uint256[2],uint256,uint256)\":{\"notice\":\"Add liquidity to the pool with the given amounts of tokens\"},\"calculateRemoveLiquidity(uint256)\":{\"notice\":\"A simple method to calculate amount of each underlying tokens that is returned upon burning given amount of LP tokens\"},\"calculateRemoveLiquidityOneToken(uint256,address)\":{\"notice\":\"Calculate the amount of underlying token available to withdraw when withdrawing via only single token\"},\"calculateSwap(address,uint256)\":{\"notice\":\"Calculate amount of tokens you receive on swap\"},\"calculateTokenAmount(uint256[],bool)\":{\"notice\":\"A simple method to calculate prices from deposits or withdrawals, excluding fees but including slippage. This is helpful as an input into the various \\\"min\\\" parameters on calls to fight front-running\"},\"getA()\":{\"notice\":\"Return A, the amplification coefficient * n * (n - 1)\"},\"getAPrecise()\":{\"notice\":\"Return A in its raw precision form\"},\"getToken0()\":{\"notice\":\"Returns the contract address for token0\"},\"getToken0Balance()\":{\"notice\":\"Return current balance of token0 (tender) in the pool\"},\"getToken1()\":{\"notice\":\"Returns the contract address for token1\"},\"getToken1Balance()\":{\"notice\":\"Return current balance of token1 (underlying) in the pool\"},\"getVirtualPrice()\":{\"notice\":\"Get the override price, to help calculate profit\"},\"initialize(address,address,string,string,uint256,uint256,uint256,address)\":{\"notice\":\"Initializes this Swap contract with the given parameters. This will also clone a LPToken contract that represents users' LP positions. The owner of LPToken will be this contract - which means only this contract is allowed to mint/burn tokens.\"},\"lpToken()\":{\"notice\":\"Returns the liquidity pool token contract.\"},\"multicall(bytes[])\":{\"notice\":\"Call multiple functions in the current contract and return the data from all of them if they all succeed\"},\"rampA(uint256,uint256)\":{\"notice\":\"Start ramping up or down A parameter towards given futureA and futureTime Checks if the change is too rapid, and commits the new A value only when it falls under the limit range.\"},\"removeLiquidity(uint256,uint256[2],uint256)\":{\"notice\":\"Burn LP tokens to remove liquidity from the pool.\"},\"removeLiquidityImbalance(uint256[2],uint256,uint256)\":{\"notice\":\"Remove liquidity from the pool, weighted differently than the pool's current balances.\"},\"removeLiquidityOneToken(uint256,address,uint256,uint256)\":{\"notice\":\"Remove liquidity from the pool all in one token.\"},\"selfPermit(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"Permits this contract to spend a given token from `msg.sender`\"},\"selfPermitIfNecessary(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"Permits this contract to spend a given token from `msg.sender`\"},\"setAdminFee(uint256)\":{\"notice\":\"Update the admin fee. Admin fee takes portion of the swap fee.\"},\"setSwapFee(uint256)\":{\"notice\":\"Update the swap fee to be applied on swaps\"},\"stopRampA()\":{\"notice\":\"Stop ramping A immediately. Reverts if ramp A is already stopped.\"},\"swap(address,uint256,uint256,uint256)\":{\"notice\":\"Swap two tokens using this pool\"},\"transferOwnership(address)\":{\"notice\":\"Changes the owner of the contract\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/tenderswap/TenderSwap.sol\":\"TenderSwap\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a\",\"dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x037c334add4b033ad3493038c25be1682d78c00992e1acb0e2795caff3925271\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8a313cf42389440e2706837c91370323b85971c06afd6d056d21e2bc86459618\",\"dweb:/ipfs/QmT8XUrUvQ9aZaPKrqgRU2JVGWnaxBcUYJA7Q7K5KcLBSZ\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0x2b3005a0064cfc558bdf64b2bae94b565f4574a536aadd61c13838d4f2157790\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://622c3eb87563e71585c9f538d1a196fe2d154dcc5b8f335e8770a8acc95e1f3a\",\"dweb:/ipfs/QmSnDqJJLzv3mirjGB1vrk5X7hegFdS7BKpscpxyqj7sWu\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0xb1d9e69cf8073efa574b31b1f840e20709139c19bfb27e60b16393d6073f3d42\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7c39b800e55781c0f7a644ec9cc615664dbe2f009198e537e6acaad3086ba093\",\"dweb:/ipfs/Qmaugq2wsB1ASX8Kv29NwXqYhZY8HRNqcdvmBe9UUNEq2V\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75b47c3aeca7b66ea6752f8be020ec5c1c502de6ec9065272dae23d3a52196e2\",\"dweb:/ipfs/QmUebPMHv16tYKFh5BmBQkMfRFb5b8UZ2RgVwdjxCeufVF\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":{\"keccak256\":\"0xea2c6f9d434127bf36b1e3e5ebaaf6d28a64dbaeea560508e570014e905a5ad2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3483370aa549810a946ace621a225616bb6d0b9ed22c3a99bbcf80dc4866ec39\",\"dweb:/ipfs/QmdgFnm6X2oQ574eJFLghVXVckwyC3SbiAUxXs934N1qvf\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"keccak256\":\"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d\",\"dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol\":{\"keccak256\":\"0xfe1053f3a6ee4527cde96c8152b8b1dbb98774639a64e819087bc80e618d7f7f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d60039d30fc910757604a2bd75969e47f64833981e66de1f5843a671167f386b\",\"dweb:/ipfs/QmU9d5yDZQpb572GxN1L7EPocjyLjrWksoE8AFb1SEVSUb\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/draft-IERC20PermitUpgradeable.sol\":{\"keccak256\":\"0xcc70d8e2281fb3ff69e8ab242500f10142cd0a7fa8dd9e45882be270d4d09024\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17a4063bc918df0f7bb9cbf04c6f0bb4977afab3f2fc212bc138a178312a221d\",\"dweb:/ipfs/QmZMdvsHP5mDEAAdrK4bNeNh47TfmSFgN9qEBFTbie7zmm\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06\",\"dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/CountersUpgradeable.sol\":{\"keccak256\":\"0x798741e231b22b81e2dd2eddaaf8832dee4baf5cd8e2dbaa5c1dd12a1c053c4d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c41e8a7a906b8f362c8b760a44edadc61782008ea2ecf377ac5b5325bf6c3912\",\"dweb:/ipfs/QmcXr19zuH3YLzD6RZNE6UTzvsKSckdxZQnagPoDGkCHu2\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0x6b9a5d35b744b25529a2856a8093e7c03fb35a34b1c4fb5499e560f8ade140da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://187b5c3a1c9e77678732a2cc5284237f9cfca6bc28ee8bc0a0f4f951d7b3a2f8\",\"dweb:/ipfs/Qmb2KFr7WuQu7btdCiftQG64vTzrG4UyzVmo53EYHcnHYA\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/ECDSAUpgradeable.sol\":{\"keccak256\":\"0x12f297cafe6e2847ae0378502f155654d0764b532a9873c8afe4350950fa7971\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://28074f6df7132e83819042a06ef75ae53c88c53c077b8222b9772b780d58bd58\",\"dweb:/ipfs/QmXXwSxWn4XGCy218fn3f2m3UmFNUiroeQ8sCR3vzNU6Wc\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/EIP712Upgradeable.sol\":{\"keccak256\":\"0x3017aded62c4a2b9707f5f06f92934e592c1c9b6f384b91b51340a6d5f841931\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb693afc2a614ec7afee965caaf5d53c3f32644e33286f60d17ae0e9aca84d44\",\"dweb:/ipfs/QmVJy43EBWvVT5NgpsV8WJfDHtZbnqZGMhmv1WbWaV5dJV\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0xc1bd5b53319c68f84e3becd75694d941e8f4be94049903232cd8bc7c535aaa5a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://056027a78e6f4b78a39be530983551651ee5a052e786ca2c1c6a3bb1222b03b4\",\"dweb:/ipfs/QmXRUpywAqNwAfXS89vrtiE2THRM9dX9pQ4QxAkV1Wx9kt\"]},\"lib/openzeppelin-contracts/contracts/proxy/Clones.sol\":{\"keccak256\":\"0x888d64d221d52c31d015b76e50ca1af5ef8ff076550810b49cea6b01d8267a10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4da0f451fe5aefdb95204dbec4a9448a8a2b00a444864bb5dbf7162da842a0f7\",\"dweb:/ipfs/QmYciAwNiJzgGMAqSTUANwMjy5HykNUvmkQ5PQhNTRqrB5\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5a7b96e511be78d5cdf635c784e6ab8cdd38625bb8cafb8a80914a1c89cf0f6\",\"dweb:/ipfs/QmVzTCwJxQAkjRQHboT5QrvsVJGWQHgfEjeTbvyxoKBrds\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"src/tenderswap/ITenderSwap.sol\":{\"keccak256\":\"0x366fd9dda7e43599b4b4483894c113a2b04a4e4dd525716b7bbe812acee4a920\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://23aaa5abe6f8a0f5a5649de2b1f3c1cd199fcd1d383bf2ea08c3c3ee81eb236b\",\"dweb:/ipfs/QmPi1PoyhqriCPgW3j7dpNiVJBvLwGQUftHd49jumbWrrx\"]},\"src/tenderswap/LiquidityPoolToken.sol\":{\"keccak256\":\"0xe3a13689f1edd25f26d28b18ea65512344a4dd3ac0e71c59d6ac2a93ee1c2b1a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5680de49d1616e7681eab73e23a7917bd9427ff2e103f2ef311a8ca82dd68909\",\"dweb:/ipfs/QmSrvimPs5eLr14wqP4i5hxs6FN9ZNEeaHnQ9m3FBrSyde\"]},\"src/tenderswap/MathUtils.sol\":{\"keccak256\":\"0xfa5186e7f90550daaa39b77032a7d58a3a9ac953ae746effa299eec54c0ce4bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fa2fdc7c6039b08536cf7067b8f3039f143e4f0b7b65b5ee899d64274e8853ec\",\"dweb:/ipfs/QmeMSHAsGTiX8GHe3FZ74N4PbTbhSBbbhENb1F9wB3p4tU\"]},\"src/tenderswap/Multicall.sol\":{\"keccak256\":\"0xe8cfe6ad2555d1d9ba68c1827c2ae1f00575bf36ea952d9cd81fcb4ab16be79f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://86c89055c5a46ca47d046b6b7d9d7c76126dcb785b87db4f6bcdc1e0ff126382\",\"dweb:/ipfs/QmZ27vdoCVNNS6DoEzSxU4zNtdfCr9KfmenjSYrHUbdEYK\"]},\"src/tenderswap/SelfPermit.sol\":{\"keccak256\":\"0xc6f923f33a71fbeabcb6524c11ecb3dcc328b8a7fc317d3363c80995df02464b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9a82827b2c9bbf575b316ef8da6cc4ed12aacf0504fc2bc4060c6a0b366d90b7\",\"dweb:/ipfs/QmVKaFUGuHHPttWVpGZS8ADX2iWihqsJrcSuRzdvBST7Jq\"]},\"src/tenderswap/SwapUtils.sol\":{\"keccak256\":\"0x989f69862a56517a14bcb42b179eeef94b0c0b6a81fb1de70626df6fb096121d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://af7ba80a5479e8ace0b8f4b3d994ef989047bbd0f406e7df4c9e2df35395092e\",\"dweb:/ipfs/QmbBwF3Z3WpLiMZkSTRV7tRYNL8e2hPrbr7iKrdetzd1HJ\"]},\"src/tenderswap/TenderSwap.sol\":{\"keccak256\":\"0xdd36b2c2ca2adfb3301e7f0f8d661607de1b97794876261548eeb8f342c5e4f2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0d39d354caf07be5df161039a899222f08c6c8e8f2f4c3a1077628cc03bf178c\",\"dweb:/ipfs/Qmf5Mp3Rc151KnLAbC7pk9rRrzVqZ8Bea7B9JwovHUopcB\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "provider",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256[2]",
              "name": "tokenAmounts",
              "type": "uint256[2]",
              "indexed": false
            },
            {
              "internalType": "uint256[2]",
              "name": "fees",
              "type": "uint256[2]",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "invariant",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "lpTokenSupply",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AddLiquidity",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "newAdminFee",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "NewAdminFee",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "newSwapFee",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "NewSwapFee",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "oldA",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "newA",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "initialTime",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "futureTime",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "RampA",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "provider",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256[2]",
              "name": "tokenAmounts",
              "type": "uint256[2]",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "lpTokenSupply",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "RemoveLiquidity",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "provider",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256[2]",
              "name": "tokenAmounts",
              "type": "uint256[2]",
              "indexed": false
            },
            {
              "internalType": "uint256[2]",
              "name": "fees",
              "type": "uint256[2]",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "invariant",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "lpTokenSupply",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "RemoveLiquidityImbalance",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "provider",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "lpTokenAmount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "lpTokenSupply",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "contract IERC20",
              "name": "tokenReceived",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "receivedAmount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "RemoveLiquidityOne",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "currentA",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "time",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "StopRampA",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "buyer",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "contract IERC20",
              "name": "tokenSold",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "amountSold",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "amountReceived",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Swap",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[2]",
              "name": "_amounts",
              "type": "uint256[2]"
            },
            {
              "internalType": "uint256",
              "name": "_minToMint",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_deadline",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addLiquidity",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "amplificationParams",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "initialA",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "futureA",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "initialATime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "futureATime",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "calculateRemoveLiquidity",
          "outputs": [
            {
              "internalType": "uint256[2]",
              "name": "",
              "type": "uint256[2]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenAmount",
              "type": "uint256"
            },
            {
              "internalType": "contract IERC20",
              "name": "tokenReceive",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "calculateRemoveLiquidityOneToken",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "_tokenFrom",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_dx",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "calculateSwap",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "amounts",
              "type": "uint256[]"
            },
            {
              "internalType": "bool",
              "name": "deposit",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "calculateTokenAmount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "feeParams",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "swapFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "adminFee",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getA",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getAPrecise",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getToken0",
          "outputs": [
            {
              "internalType": "contract IERC20",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getToken0Balance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getToken1",
          "outputs": [
            {
              "internalType": "contract IERC20",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getToken1Balance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getVirtualPrice",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "_token0",
              "type": "address"
            },
            {
              "internalType": "contract IERC20",
              "name": "_token1",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "lpTokenName",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "lpTokenSymbol",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "_a",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_fee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_adminFee",
              "type": "uint256"
            },
            {
              "internalType": "contract LiquidityPoolToken",
              "name": "lpTokenTargetAddress",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "lpToken",
          "outputs": [
            {
              "internalType": "contract LiquidityPoolToken",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes[]",
              "name": "_data",
              "type": "bytes[]"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "multicall",
          "outputs": [
            {
              "internalType": "bytes[]",
              "name": "results",
              "type": "bytes[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "futureA",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "futureTime",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "rampA"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256[2]",
              "name": "minAmounts",
              "type": "uint256[2]"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "removeLiquidity",
          "outputs": [
            {
              "internalType": "uint256[2]",
              "name": "",
              "type": "uint256[2]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256[2]",
              "name": "_amounts",
              "type": "uint256[2]"
            },
            {
              "internalType": "uint256",
              "name": "_maxBurnAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_deadline",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "removeLiquidityImbalance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenAmount",
              "type": "uint256"
            },
            {
              "internalType": "contract IERC20",
              "name": "_tokenReceive",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_minAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_deadline",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "removeLiquidityOneToken",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_value",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_deadline",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "_v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "_r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "_s",
              "type": "bytes32"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "selfPermit"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_value",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_deadline",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "_v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "_r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "_s",
              "type": "bytes32"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "selfPermitIfNecessary"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "newAdminFee",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setAdminFee"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "newSwapFee",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setSwapFee"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "stopRampA"
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "_tokenFrom",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_dx",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_minDy",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_deadline",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "swap",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_newOwnner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "addLiquidity(uint256[2],uint256,uint256)": {
            "params": {
              "_amounts": "the amounts of each token to add, in their native precision          according to the cardinality of the pool [token0, token1]",
              "_deadline": "latest timestamp to accept this transaction",
              "_minToMint": "the minimum LP tokens adding this amount of liquidity should mint, otherwise revert. Handy for front-running mitigation"
            },
            "returns": {
              "_0": "amount of LP token user minted and received"
            }
          },
          "calculateRemoveLiquidity(uint256)": {
            "params": {
              "amount": "the amount of LP tokens that would be burned on withdrawal"
            },
            "returns": {
              "_0": "array of token balances that the user will receive"
            }
          },
          "calculateRemoveLiquidityOneToken(uint256,address)": {
            "params": {
              "tokenAmount": "the amount of LP token to burn",
              "tokenReceive": "the token to receive"
            },
            "returns": {
              "_0": "calculated amount of underlying token to be received. available to withdraw"
            }
          },
          "calculateSwap(address,uint256)": {
            "params": {
              "_dx": "the amount of tokens the user wants to sell. If the token charges a fee on transfers, use the amount that gets transferred after the fee.",
              "_tokenFrom": "the token the user wants to sell"
            },
            "returns": {
              "_0": "amount of tokens the user will receive"
            }
          },
          "calculateTokenAmount(uint256[],bool)": {
            "details": "This shouldn't be used outside frontends for user estimates.",
            "params": {
              "amounts": "an array of token amounts to deposit or withdrawal, corresponding to pool cardinality of [token0, token1]. The amount should be in each pooled token's native precision.",
              "deposit": "whether this is a deposit or a withdrawal"
            },
            "returns": {
              "_0": "token amount the user will receive"
            }
          },
          "getA()": {
            "details": "See the StableSwap paper for details",
            "returns": {
              "_0": "the amplifaction coefficient"
            }
          },
          "getAPrecise()": {
            "details": "See the StableSwap paper for details",
            "returns": {
              "_0": "A parameter in its raw precision form"
            }
          },
          "getToken0()": {
            "details": "EVM return type is IERC20",
            "returns": {
              "_0": "contract address"
            }
          },
          "getToken0Balance()": {
            "returns": {
              "_0": "current balance of the pooled tendertoken"
            }
          },
          "getToken1()": {
            "details": "EVM return type is IERC20",
            "returns": {
              "_0": "contract address"
            }
          },
          "getToken1Balance()": {
            "returns": {
              "_0": "current balance of the pooled underlying token"
            }
          },
          "getVirtualPrice()": {
            "returns": {
              "_0": "the override price, scaled to the POOL_PRECISION_DECIMALS"
            }
          },
          "initialize(address,address,string,string,uint256,uint256,uint256,address)": {
            "params": {
              "_a": "the amplification coefficient * n * (n - 1). See the StableSwap paper for details",
              "_adminFee": "default adminFee to be initialized with",
              "_fee": "default swap fee to be initialized with",
              "_token0": "First token in the pool",
              "_token1": "Second token in the pool",
              "lpTokenName": "the long-form name of the token to be deployed",
              "lpTokenSymbol": "the short symbol for the token to be deployed",
              "lpTokenTargetAddress": "the address of an existing LiquidityPoolToken contract to use as a target"
            },
            "returns": {
              "_0": "true is successfully initialized"
            }
          },
          "multicall(bytes[])": {
            "details": "The `msg.value` should not be trusted for any method callable from multicall.",
            "params": {
              "_data": "The encoded function data for each of the calls to make to this contract"
            },
            "returns": {
              "results": "The results from each of the calls passed in via data"
            }
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "rampA(uint256,uint256)": {
            "params": {
              "futureA": "the new A to ramp towards",
              "futureTime": "timestamp when the new A should be reached"
            }
          },
          "removeLiquidity(uint256,uint256[2],uint256)": {
            "details": "Liquidity can always be removed, even when the pool is paused.",
            "params": {
              "amount": "the amount of LP tokens to burn",
              "deadline": "latest timestamp to accept this transaction",
              "minAmounts": "the minimum amounts of each token in the pool        acceptable for this burn. Useful as a front-running mitigation        according to the cardinality of the pool [token0, token1]"
            },
            "returns": {
              "_0": "is the amounts of tokens user received"
            }
          },
          "removeLiquidityImbalance(uint256[2],uint256,uint256)": {
            "params": {
              "_amounts": "how much of each token to withdraw",
              "_deadline": "latest timestamp to accept this transaction",
              "_maxBurnAmount": "the max LP token provider is willing to pay to remove liquidity. Useful as a front-running mitigation."
            },
            "returns": {
              "_0": "amount of LP tokens burned"
            }
          },
          "removeLiquidityOneToken(uint256,address,uint256,uint256)": {
            "params": {
              "_deadline": "latest timestamp to accept this transaction",
              "_minAmount": "the minimum amount to withdraw, otherwise revert",
              "_tokenAmount": "the amount of the token you want to receive",
              "_tokenReceive": "the  token you want to receive"
            },
            "returns": {
              "_0": "amount of chosen token user received"
            }
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
          },
          "selfPermit(address,uint256,uint256,uint8,bytes32,bytes32)": {
            "details": "The `owner` is always msg.sender and the `spender` is always address(this).",
            "params": {
              "_deadline": "A timestamp, the current blocktime must be less than or equal to this timestamp",
              "_r": "Must produce valid secp256k1 signature from the holder along with `v` and `s`",
              "_s": "Must produce valid secp256k1 signature from the holder along with `r` and `v`",
              "_token": "The address of the token spent",
              "_v": "Must produce valid secp256k1 signature from the holder along with `r` and `s`",
              "_value": "The amount that can be spent of token"
            }
          },
          "selfPermitIfNecessary(address,uint256,uint256,uint8,bytes32,bytes32)": {
            "details": "The `owner` is always msg.sender and the `spender` is always address(this). Can be used instead of #selfPermit to prevent calls from failing due to a frontrun of a call to #selfPermit",
            "params": {
              "_deadline": "A timestamp, the current blocktime must be less than or equal to this timestamp",
              "_r": "Must produce valid secp256k1 signature from the holder along with `v` and `s`",
              "_s": "Must produce valid secp256k1 signature from the holder along with `r` and `v`",
              "_token": "The address of the token spent",
              "_v": "Must produce valid secp256k1 signature from the holder along with `r` and `s`",
              "_value": "The amount that can be spent of token"
            }
          },
          "setAdminFee(uint256)": {
            "params": {
              "newAdminFee": "new admin fee to be applied on future transactions"
            }
          },
          "setSwapFee(uint256)": {
            "params": {
              "newSwapFee": "new swap fee to be applied on future transactions"
            }
          },
          "swap(address,uint256,uint256,uint256)": {
            "details": "revert is token being sold is not in the pool.",
            "params": {
              "_deadline": "latest timestamp to accept this transaction",
              "_dx": "the amount of tokens the user wants to swap from",
              "_minDy": "the min amount the user would like to receive, or revert",
              "_tokenFrom": "the token the user wants to sell"
            },
            "returns": {
              "_0": "amount of tokens received"
            }
          },
          "transferOwnership(address)": {
            "params": {
              "_newOwner": "address of the new owner"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "addLiquidity(uint256[2],uint256,uint256)": {
            "notice": "Add liquidity to the pool with the given amounts of tokens"
          },
          "calculateRemoveLiquidity(uint256)": {
            "notice": "A simple method to calculate amount of each underlying tokens that is returned upon burning given amount of LP tokens"
          },
          "calculateRemoveLiquidityOneToken(uint256,address)": {
            "notice": "Calculate the amount of underlying token available to withdraw when withdrawing via only single token"
          },
          "calculateSwap(address,uint256)": {
            "notice": "Calculate amount of tokens you receive on swap"
          },
          "calculateTokenAmount(uint256[],bool)": {
            "notice": "A simple method to calculate prices from deposits or withdrawals, excluding fees but including slippage. This is helpful as an input into the various \"min\" parameters on calls to fight front-running"
          },
          "getA()": {
            "notice": "Return A, the amplification coefficient * n * (n - 1)"
          },
          "getAPrecise()": {
            "notice": "Return A in its raw precision form"
          },
          "getToken0()": {
            "notice": "Returns the contract address for token0"
          },
          "getToken0Balance()": {
            "notice": "Return current balance of token0 (tender) in the pool"
          },
          "getToken1()": {
            "notice": "Returns the contract address for token1"
          },
          "getToken1Balance()": {
            "notice": "Return current balance of token1 (underlying) in the pool"
          },
          "getVirtualPrice()": {
            "notice": "Get the override price, to help calculate profit"
          },
          "initialize(address,address,string,string,uint256,uint256,uint256,address)": {
            "notice": "Initializes this Swap contract with the given parameters. This will also clone a LPToken contract that represents users' LP positions. The owner of LPToken will be this contract - which means only this contract is allowed to mint/burn tokens."
          },
          "lpToken()": {
            "notice": "Returns the liquidity pool token contract."
          },
          "multicall(bytes[])": {
            "notice": "Call multiple functions in the current contract and return the data from all of them if they all succeed"
          },
          "rampA(uint256,uint256)": {
            "notice": "Start ramping up or down A parameter towards given futureA and futureTime Checks if the change is too rapid, and commits the new A value only when it falls under the limit range."
          },
          "removeLiquidity(uint256,uint256[2],uint256)": {
            "notice": "Burn LP tokens to remove liquidity from the pool."
          },
          "removeLiquidityImbalance(uint256[2],uint256,uint256)": {
            "notice": "Remove liquidity from the pool, weighted differently than the pool's current balances."
          },
          "removeLiquidityOneToken(uint256,address,uint256,uint256)": {
            "notice": "Remove liquidity from the pool all in one token."
          },
          "selfPermit(address,uint256,uint256,uint8,bytes32,bytes32)": {
            "notice": "Permits this contract to spend a given token from `msg.sender`"
          },
          "selfPermitIfNecessary(address,uint256,uint256,uint8,bytes32,bytes32)": {
            "notice": "Permits this contract to spend a given token from `msg.sender`"
          },
          "setAdminFee(uint256)": {
            "notice": "Update the admin fee. Admin fee takes portion of the swap fee."
          },
          "setSwapFee(uint256)": {
            "notice": "Update the swap fee to be applied on swaps"
          },
          "stopRampA()": {
            "notice": "Stop ramping A immediately. Reverts if ramp A is already stopped."
          },
          "swap(address,uint256,uint256,uint256)": {
            "notice": "Swap two tokens using this pool"
          },
          "transferOwnership(address)": {
            "notice": "Changes the owner of the contract"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        ":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/tenderswap/TenderSwap.sol": "TenderSwap"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol": {
        "keccak256": "0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888",
        "urls": [
          "bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a",
          "dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x037c334add4b033ad3493038c25be1682d78c00992e1acb0e2795caff3925271",
        "urls": [
          "bzz-raw://8a313cf42389440e2706837c91370323b85971c06afd6d056d21e2bc86459618",
          "dweb:/ipfs/QmT8XUrUvQ9aZaPKrqgRU2JVGWnaxBcUYJA7Q7K5KcLBSZ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol": {
        "keccak256": "0x2b3005a0064cfc558bdf64b2bae94b565f4574a536aadd61c13838d4f2157790",
        "urls": [
          "bzz-raw://622c3eb87563e71585c9f538d1a196fe2d154dcc5b8f335e8770a8acc95e1f3a",
          "dweb:/ipfs/QmSnDqJJLzv3mirjGB1vrk5X7hegFdS7BKpscpxyqj7sWu"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol": {
        "keccak256": "0xb1d9e69cf8073efa574b31b1f840e20709139c19bfb27e60b16393d6073f3d42",
        "urls": [
          "bzz-raw://7c39b800e55781c0f7a644ec9cc615664dbe2f009198e537e6acaad3086ba093",
          "dweb:/ipfs/Qmaugq2wsB1ASX8Kv29NwXqYhZY8HRNqcdvmBe9UUNEq2V"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/IERC20Upgradeable.sol": {
        "keccak256": "0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff",
        "urls": [
          "bzz-raw://75b47c3aeca7b66ea6752f8be020ec5c1c502de6ec9065272dae23d3a52196e2",
          "dweb:/ipfs/QmUebPMHv16tYKFh5BmBQkMfRFb5b8UZ2RgVwdjxCeufVF"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/ERC20BurnableUpgradeable.sol": {
        "keccak256": "0xea2c6f9d434127bf36b1e3e5ebaaf6d28a64dbaeea560508e570014e905a5ad2",
        "urls": [
          "bzz-raw://3483370aa549810a946ace621a225616bb6d0b9ed22c3a99bbcf80dc4866ec39",
          "dweb:/ipfs/QmdgFnm6X2oQ574eJFLghVXVckwyC3SbiAUxXs934N1qvf"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/IERC20MetadataUpgradeable.sol": {
        "keccak256": "0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb",
        "urls": [
          "bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d",
          "dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol": {
        "keccak256": "0xfe1053f3a6ee4527cde96c8152b8b1dbb98774639a64e819087bc80e618d7f7f",
        "urls": [
          "bzz-raw://d60039d30fc910757604a2bd75969e47f64833981e66de1f5843a671167f386b",
          "dweb:/ipfs/QmU9d5yDZQpb572GxN1L7EPocjyLjrWksoE8AFb1SEVSUb"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/draft-IERC20PermitUpgradeable.sol": {
        "keccak256": "0xcc70d8e2281fb3ff69e8ab242500f10142cd0a7fa8dd9e45882be270d4d09024",
        "urls": [
          "bzz-raw://17a4063bc918df0f7bb9cbf04c6f0bb4977afab3f2fc212bc138a178312a221d",
          "dweb:/ipfs/QmZMdvsHP5mDEAAdrK4bNeNh47TfmSFgN9qEBFTbie7zmm"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183",
        "urls": [
          "bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06",
          "dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/CountersUpgradeable.sol": {
        "keccak256": "0x798741e231b22b81e2dd2eddaaf8832dee4baf5cd8e2dbaa5c1dd12a1c053c4d",
        "urls": [
          "bzz-raw://c41e8a7a906b8f362c8b760a44edadc61782008ea2ecf377ac5b5325bf6c3912",
          "dweb:/ipfs/QmcXr19zuH3YLzD6RZNE6UTzvsKSckdxZQnagPoDGkCHu2"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/StringsUpgradeable.sol": {
        "keccak256": "0x6b9a5d35b744b25529a2856a8093e7c03fb35a34b1c4fb5499e560f8ade140da",
        "urls": [
          "bzz-raw://187b5c3a1c9e77678732a2cc5284237f9cfca6bc28ee8bc0a0f4f951d7b3a2f8",
          "dweb:/ipfs/Qmb2KFr7WuQu7btdCiftQG64vTzrG4UyzVmo53EYHcnHYA"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/ECDSAUpgradeable.sol": {
        "keccak256": "0x12f297cafe6e2847ae0378502f155654d0764b532a9873c8afe4350950fa7971",
        "urls": [
          "bzz-raw://28074f6df7132e83819042a06ef75ae53c88c53c077b8222b9772b780d58bd58",
          "dweb:/ipfs/QmXXwSxWn4XGCy218fn3f2m3UmFNUiroeQ8sCR3vzNU6Wc"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/EIP712Upgradeable.sol": {
        "keccak256": "0x3017aded62c4a2b9707f5f06f92934e592c1c9b6f384b91b51340a6d5f841931",
        "urls": [
          "bzz-raw://bb693afc2a614ec7afee965caaf5d53c3f32644e33286f60d17ae0e9aca84d44",
          "dweb:/ipfs/QmVJy43EBWvVT5NgpsV8WJfDHtZbnqZGMhmv1WbWaV5dJV"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/math/MathUpgradeable.sol": {
        "keccak256": "0xc1bd5b53319c68f84e3becd75694d941e8f4be94049903232cd8bc7c535aaa5a",
        "urls": [
          "bzz-raw://056027a78e6f4b78a39be530983551651ee5a052e786ca2c1c6a3bb1222b03b4",
          "dweb:/ipfs/QmXRUpywAqNwAfXS89vrtiE2THRM9dX9pQ4QxAkV1Wx9kt"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/Clones.sol": {
        "keccak256": "0x888d64d221d52c31d015b76e50ca1af5ef8ff076550810b49cea6b01d8267a10",
        "urls": [
          "bzz-raw://4da0f451fe5aefdb95204dbec4a9448a8a2b00a444864bb5dbf7162da842a0f7",
          "dweb:/ipfs/QmYciAwNiJzgGMAqSTUANwMjy5HykNUvmkQ5PQhNTRqrB5"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
        "keccak256": "0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329",
        "urls": [
          "bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95",
          "dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238",
        "urls": [
          "bzz-raw://f5a7b96e511be78d5cdf635c784e6ab8cdd38625bb8cafb8a80914a1c89cf0f6",
          "dweb:/ipfs/QmVzTCwJxQAkjRQHboT5QrvsVJGWQHgfEjeTbvyxoKBrds"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1",
        "urls": [
          "bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269",
          "dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj"
        ],
        "license": "MIT"
      },
      "src/tenderswap/ITenderSwap.sol": {
        "keccak256": "0x366fd9dda7e43599b4b4483894c113a2b04a4e4dd525716b7bbe812acee4a920",
        "urls": [
          "bzz-raw://23aaa5abe6f8a0f5a5649de2b1f3c1cd199fcd1d383bf2ea08c3c3ee81eb236b",
          "dweb:/ipfs/QmPi1PoyhqriCPgW3j7dpNiVJBvLwGQUftHd49jumbWrrx"
        ],
        "license": "MIT"
      },
      "src/tenderswap/LiquidityPoolToken.sol": {
        "keccak256": "0xe3a13689f1edd25f26d28b18ea65512344a4dd3ac0e71c59d6ac2a93ee1c2b1a",
        "urls": [
          "bzz-raw://5680de49d1616e7681eab73e23a7917bd9427ff2e103f2ef311a8ca82dd68909",
          "dweb:/ipfs/QmSrvimPs5eLr14wqP4i5hxs6FN9ZNEeaHnQ9m3FBrSyde"
        ],
        "license": "MIT"
      },
      "src/tenderswap/MathUtils.sol": {
        "keccak256": "0xfa5186e7f90550daaa39b77032a7d58a3a9ac953ae746effa299eec54c0ce4bb",
        "urls": [
          "bzz-raw://fa2fdc7c6039b08536cf7067b8f3039f143e4f0b7b65b5ee899d64274e8853ec",
          "dweb:/ipfs/QmeMSHAsGTiX8GHe3FZ74N4PbTbhSBbbhENb1F9wB3p4tU"
        ],
        "license": "MIT"
      },
      "src/tenderswap/Multicall.sol": {
        "keccak256": "0xe8cfe6ad2555d1d9ba68c1827c2ae1f00575bf36ea952d9cd81fcb4ab16be79f",
        "urls": [
          "bzz-raw://86c89055c5a46ca47d046b6b7d9d7c76126dcb785b87db4f6bcdc1e0ff126382",
          "dweb:/ipfs/QmZ27vdoCVNNS6DoEzSxU4zNtdfCr9KfmenjSYrHUbdEYK"
        ],
        "license": "MIT"
      },
      "src/tenderswap/SelfPermit.sol": {
        "keccak256": "0xc6f923f33a71fbeabcb6524c11ecb3dcc328b8a7fc317d3363c80995df02464b",
        "urls": [
          "bzz-raw://9a82827b2c9bbf575b316ef8da6cc4ed12aacf0504fc2bc4060c6a0b366d90b7",
          "dweb:/ipfs/QmVKaFUGuHHPttWVpGZS8ADX2iWihqsJrcSuRzdvBST7Jq"
        ],
        "license": "MIT"
      },
      "src/tenderswap/SwapUtils.sol": {
        "keccak256": "0x989f69862a56517a14bcb42b179eeef94b0c0b6a81fb1de70626df6fb096121d",
        "urls": [
          "bzz-raw://af7ba80a5479e8ace0b8f4b3d994ef989047bbd0f406e7df4c9e2df35395092e",
          "dweb:/ipfs/QmbBwF3Z3WpLiMZkSTRV7tRYNL8e2hPrbr7iKrdetzd1HJ"
        ],
        "license": "MIT"
      },
      "src/tenderswap/TenderSwap.sol": {
        "keccak256": "0xdd36b2c2ca2adfb3301e7f0f8d661607de1b97794876261548eeb8f342c5e4f2",
        "urls": [
          "bzz-raw://0d39d354caf07be5df161039a899222f08c6c8e8f2f4c3a1077628cc03bf178c",
          "dweb:/ipfs/Qmf5Mp3Rc151KnLAbC7pk9rRrzVqZ8Bea7B9JwovHUopcB"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/tenderswap/TenderSwap.sol",
    "id": 32356,
    "exportedSymbols": {
      "Address": [
        27822
      ],
      "AddressUpgradeable": [
        25350
      ],
      "Clones": [
        27097
      ],
      "ContextUpgradeable": [
        25392
      ],
      "CountersUpgradeable": [
        25466
      ],
      "ECDSAUpgradeable": [
        26002
      ],
      "EIP712Upgradeable": [
        26152
      ],
      "ERC20BurnableUpgradeable": [
        24814
      ],
      "ERC20PermitUpgradeable": [
        25030
      ],
      "ERC20Upgradeable": [
        24672
      ],
      "IERC20": [
        27175
      ],
      "IERC20Decimals": [
        31543
      ],
      "IERC20MetadataUpgradeable": [
        24839
      ],
      "IERC20Permit": [
        27211
      ],
      "IERC20PermitUpgradeable": [
        25066
      ],
      "IERC20Upgradeable": [
        24750
      ],
      "ITenderSwap": [
        28169
      ],
      "Initializable": [
        23987
      ],
      "LiquidityPoolToken": [
        28239
      ],
      "MathUpgradeable": [
        27017
      ],
      "MathUtils": [
        28362
      ],
      "Multicall": [
        28456
      ],
      "OwnableUpgradeable": [
        23818
      ],
      "ReentrancyGuardUpgradeable": [
        24060
      ],
      "SafeERC20": [
        27492
      ],
      "SelfPermit": [
        28579
      ],
      "StringsUpgradeable": [
        25641
      ],
      "SwapUtils": [
        31522
      ],
      "TenderSwap": [
        32355
      ]
    },
    "nodeType": "SourceUnit",
    "src": "98:11488:40",
    "nodes": [
      {
        "id": 31524,
        "nodeType": "PragmaDirective",
        "src": "98:23:40",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 31525,
        "nodeType": "ImportDirective",
        "src": "125:65:40",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 32356,
        "sourceUnit": 27493,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 31526,
        "nodeType": "ImportDirective",
        "src": "192:85:40",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 32356,
        "sourceUnit": 24061,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 31527,
        "nodeType": "ImportDirective",
        "src": "279:50:40",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/proxy/Clones.sol",
        "file": "@openzeppelin/contracts/proxy/Clones.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 32356,
        "sourceUnit": 27098,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 31528,
        "nodeType": "ImportDirective",
        "src": "331:75:40",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 32356,
        "sourceUnit": 23819,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 31530,
        "nodeType": "ImportDirective",
        "src": "410:44:40",
        "nodes": [],
        "absolutePath": "src/tenderswap/Multicall.sol",
        "file": "./Multicall.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 32356,
        "sourceUnit": 28457,
        "symbolAliases": [
          {
            "foreign": {
              "id": 31529,
              "name": "Multicall",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 28456,
              "src": "419:9:40",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 31532,
        "nodeType": "ImportDirective",
        "src": "456:46:40",
        "nodes": [],
        "absolutePath": "src/tenderswap/SelfPermit.sol",
        "file": "./SelfPermit.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 32356,
        "sourceUnit": 28580,
        "symbolAliases": [
          {
            "foreign": {
              "id": 31531,
              "name": "SelfPermit",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 28579,
              "src": "465:10:40",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 31533,
        "nodeType": "ImportDirective",
        "src": "506:34:40",
        "nodes": [],
        "absolutePath": "src/tenderswap/LiquidityPoolToken.sol",
        "file": "./LiquidityPoolToken.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 32356,
        "sourceUnit": 28240,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 31534,
        "nodeType": "ImportDirective",
        "src": "542:25:40",
        "nodes": [],
        "absolutePath": "src/tenderswap/SwapUtils.sol",
        "file": "./SwapUtils.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 32356,
        "sourceUnit": 31523,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 31535,
        "nodeType": "ImportDirective",
        "src": "569:27:40",
        "nodes": [],
        "absolutePath": "src/tenderswap/ITenderSwap.sol",
        "file": "./ITenderSwap.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 32356,
        "sourceUnit": 28170,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 31543,
        "nodeType": "ContractDefinition",
        "src": "641:95:40",
        "nodes": [
          {
            "id": 31542,
            "nodeType": "FunctionDefinition",
            "src": "683:50:40",
            "nodes": [],
            "functionSelector": "313ce567",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "decimals",
            "nameLocation": "692:8:40",
            "parameters": {
              "id": 31538,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "700:2:40"
            },
            "returnParameters": {
              "id": 31541,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 31540,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 31542,
                  "src": "726:5:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 31539,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "726:5:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "725:7:40"
            },
            "scope": 31543,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 31536,
              "name": "IERC20",
              "nameLocations": [
                "669:6:40"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 27175,
              "src": "669:6:40"
            },
            "id": 31537,
            "nodeType": "InheritanceSpecifier",
            "src": "669:6:40"
          }
        ],
        "canonicalName": "IERC20Decimals",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          31543,
          27175
        ],
        "name": "IERC20Decimals",
        "nameLocation": "651:14:40",
        "scope": 32356,
        "usedErrors": []
      },
      {
        "id": 32355,
        "nodeType": "ContractDefinition",
        "src": "1208:10376:40",
        "nodes": [
          {
            "id": 31558,
            "nodeType": "UsingForDirective",
            "src": "1321:44:40",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 31555,
              "name": "SwapUtils",
              "nameLocations": [
                "1327:9:40"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 31522,
              "src": "1327:9:40"
            },
            "typeName": {
              "id": 31557,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 31556,
                "name": "SwapUtils.Amplification",
                "nameLocations": [
                  "1341:9:40",
                  "1351:13:40"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 31139,
                "src": "1341:23:40"
              },
              "referencedDeclaration": 31139,
              "src": "1341:23:40",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Amplification_$31139_storage_ptr",
                "typeString": "struct SwapUtils.Amplification"
              }
            }
          },
          {
            "id": 31562,
            "nodeType": "UsingForDirective",
            "src": "1371:42:40",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 31559,
              "name": "SwapUtils",
              "nameLocations": [
                "1377:9:40"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 31522,
              "src": "1377:9:40"
            },
            "typeName": {
              "id": 31561,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 31560,
                "name": "SwapUtils.PooledToken",
                "nameLocations": [
                  "1391:9:40",
                  "1401:11:40"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 28700,
                "src": "1391:21:40"
              },
              "referencedDeclaration": 28700,
              "src": "1391:21:40",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_PooledToken_$28700_storage_ptr",
                "typeString": "struct SwapUtils.PooledToken"
              }
            }
          },
          {
            "id": 31566,
            "nodeType": "UsingForDirective",
            "src": "1419:40:40",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 31563,
              "name": "SwapUtils",
              "nameLocations": [
                "1425:9:40"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 31522,
              "src": "1425:9:40"
            },
            "typeName": {
              "id": 31565,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 31564,
                "name": "SwapUtils.FeeParams",
                "nameLocations": [
                  "1439:9:40",
                  "1449:9:40"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 28694,
                "src": "1439:19:40"
              },
              "referencedDeclaration": 28694,
              "src": "1439:19:40",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_FeeParams_$28694_storage_ptr",
                "typeString": "struct SwapUtils.FeeParams"
              }
            }
          },
          {
            "id": 31569,
            "nodeType": "VariableDeclaration",
            "src": "1490:36:40",
            "nodes": [],
            "constant": false,
            "functionSelector": "9242164f",
            "mutability": "mutable",
            "name": "feeParams",
            "nameLocation": "1517:9:40",
            "scope": 32355,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_FeeParams_$28694_storage",
              "typeString": "struct SwapUtils.FeeParams"
            },
            "typeName": {
              "id": 31568,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 31567,
                "name": "SwapUtils.FeeParams",
                "nameLocations": [
                  "1490:9:40",
                  "1500:9:40"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 28694,
                "src": "1490:19:40"
              },
              "referencedDeclaration": 28694,
              "src": "1490:19:40",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_FeeParams_$28694_storage_ptr",
                "typeString": "struct SwapUtils.FeeParams"
              }
            },
            "visibility": "public"
          },
          {
            "id": 31572,
            "nodeType": "VariableDeclaration",
            "src": "1580:50:40",
            "nodes": [],
            "constant": false,
            "functionSelector": "256967ac",
            "mutability": "mutable",
            "name": "amplificationParams",
            "nameLocation": "1611:19:40",
            "scope": 32355,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Amplification_$31139_storage",
              "typeString": "struct SwapUtils.Amplification"
            },
            "typeName": {
              "id": 31571,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 31570,
                "name": "SwapUtils.Amplification",
                "nameLocations": [
                  "1580:9:40",
                  "1590:13:40"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 31139,
                "src": "1580:23:40"
              },
              "referencedDeclaration": 31139,
              "src": "1580:23:40",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Amplification_$31139_storage_ptr",
                "typeString": "struct SwapUtils.Amplification"
              }
            },
            "visibility": "public"
          },
          {
            "id": 31575,
            "nodeType": "VariableDeclaration",
            "src": "1659:36:40",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "token0",
            "nameLocation": "1689:6:40",
            "scope": 32355,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_PooledToken_$28700_storage",
              "typeString": "struct SwapUtils.PooledToken"
            },
            "typeName": {
              "id": 31574,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 31573,
                "name": "SwapUtils.PooledToken",
                "nameLocations": [
                  "1659:9:40",
                  "1669:11:40"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 28700,
                "src": "1659:21:40"
              },
              "referencedDeclaration": 28700,
              "src": "1659:21:40",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_PooledToken_$28700_storage_ptr",
                "typeString": "struct SwapUtils.PooledToken"
              }
            },
            "visibility": "private"
          },
          {
            "id": 31578,
            "nodeType": "VariableDeclaration",
            "src": "1702:36:40",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "token1",
            "nameLocation": "1732:6:40",
            "scope": 32355,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_PooledToken_$28700_storage",
              "typeString": "struct SwapUtils.PooledToken"
            },
            "typeName": {
              "id": 31577,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 31576,
                "name": "SwapUtils.PooledToken",
                "nameLocations": [
                  "1702:9:40",
                  "1712:11:40"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 28700,
                "src": "1702:21:40"
              },
              "referencedDeclaration": 28700,
              "src": "1702:21:40",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_PooledToken_$28700_storage_ptr",
                "typeString": "struct SwapUtils.PooledToken"
              }
            },
            "visibility": "private"
          },
          {
            "id": 31582,
            "nodeType": "VariableDeclaration",
            "src": "1777:42:40",
            "nodes": [],
            "baseFunctions": [
              27977
            ],
            "constant": false,
            "functionSelector": "5fcbd285",
            "mutability": "mutable",
            "name": "lpToken",
            "nameLocation": "1812:7:40",
            "overrides": {
              "id": 31581,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1803:8:40"
            },
            "scope": 32355,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_LiquidityPoolToken_$28239",
              "typeString": "contract LiquidityPoolToken"
            },
            "typeName": {
              "id": 31580,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 31579,
                "name": "LiquidityPoolToken",
                "nameLocations": [
                  "1777:18:40"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 28239,
                "src": "1777:18:40"
              },
              "referencedDeclaration": 28239,
              "src": "1777:18:40",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_LiquidityPoolToken_$28239",
                "typeString": "contract LiquidityPoolToken"
              }
            },
            "visibility": "public"
          },
          {
            "id": 31593,
            "nodeType": "ModifierDefinition",
            "src": "2011:98:40",
            "nodes": [],
            "body": {
              "id": 31592,
              "nodeType": "Block",
              "src": "2053:56:40",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 31588,
                        "name": "_deadline",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31585,
                        "src": "2079:9:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 31587,
                      "name": "_deadlineCheck",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32336,
                      "src": "2064:14:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) view"
                      }
                    },
                    "id": 31589,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2064:25:40",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31590,
                  "nodeType": "ExpressionStatement",
                  "src": "2064:25:40"
                },
                {
                  "id": 31591,
                  "nodeType": "PlaceholderStatement",
                  "src": "2100:1:40"
                }
              ]
            },
            "documentation": {
              "id": 31583,
              "nodeType": "StructuredDocumentation",
              "src": "1855:150:40",
              "text": " @notice Modifier to check deadline against current timestamp\n @param _deadline latest timestamp to accept this transaction"
            },
            "name": "deadlineCheck",
            "nameLocation": "2020:13:40",
            "parameters": {
              "id": 31586,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 31585,
                  "mutability": "mutable",
                  "name": "_deadline",
                  "nameLocation": "2042:9:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 31593,
                  "src": "2034:17:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 31584,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2034:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2033:19:40"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 31799,
            "nodeType": "FunctionDefinition",
            "src": "2150:2285:40",
            "nodes": [],
            "body": {
              "id": 31798,
              "nodeType": "Block",
              "src": "2468:1967:40",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 31621,
                      "name": "__Context_init_unchained",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25368,
                      "src": "2479:24:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 31622,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2479:26:40",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31623,
                  "nodeType": "ExpressionStatement",
                  "src": "2479:26:40"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 31624,
                      "name": "__Ownable_init_unchained",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23724,
                      "src": "2516:24:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 31625,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2516:26:40",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31626,
                  "nodeType": "ExpressionStatement",
                  "src": "2516:26:40"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 31627,
                      "name": "__ReentrancyGuard_init_unchained",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24020,
                      "src": "2553:32:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 31628,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2553:34:40",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31629,
                  "nodeType": "ExpressionStatement",
                  "src": "2553:34:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_contract$_IERC20_$27175",
                          "typeString": "contract IERC20"
                        },
                        "id": 31633,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 31631,
                          "name": "_token0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31597,
                          "src": "2666:7:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$27175",
                            "typeString": "contract IERC20"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 31632,
                          "name": "_token1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31600,
                          "src": "2677:7:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$27175",
                            "typeString": "contract IERC20"
                          }
                        },
                        "src": "2666:18:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4455504c49434154455f544f4b454e53",
                        "id": 31634,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2686:18:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_30cab00532541d6359b550926045d8ba089478fba0db37af2b354c3b261cd3d3",
                          "typeString": "literal_string \"DUPLICATE_TOKENS\""
                        },
                        "value": "DUPLICATE_TOKENS"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_30cab00532541d6359b550926045d8ba089478fba0db37af2b354c3b261cd3d3",
                          "typeString": "literal_string \"DUPLICATE_TOKENS\""
                        }
                      ],
                      "id": 31630,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2658:7:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 31635,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2658:47:40",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31636,
                  "nodeType": "ExpressionStatement",
                  "src": "2658:47:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 31646,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 31640,
                              "name": "_token0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31597,
                              "src": "2732:7:40",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$27175",
                                "typeString": "contract IERC20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$27175",
                                "typeString": "contract IERC20"
                              }
                            ],
                            "id": 31639,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2724:7:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 31638,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2724:7:40",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 31641,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2724:16:40",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 31644,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2752:1:40",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 31643,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2744:7:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 31642,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2744:7:40",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 31645,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2744:10:40",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2724:30:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "544f4b454e305f5a45524f41444452455353",
                        "id": 31647,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2756:20:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_623864eab762f57436b92258aed636890ec4ce7418285d24ff468f53f53db23a",
                          "typeString": "literal_string \"TOKEN0_ZEROADDRESS\""
                        },
                        "value": "TOKEN0_ZEROADDRESS"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_623864eab762f57436b92258aed636890ec4ce7418285d24ff468f53f53db23a",
                          "typeString": "literal_string \"TOKEN0_ZEROADDRESS\""
                        }
                      ],
                      "id": 31637,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2716:7:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 31648,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2716:61:40",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31649,
                  "nodeType": "ExpressionStatement",
                  "src": "2716:61:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 31659,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 31653,
                              "name": "_token1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31600,
                              "src": "2804:7:40",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$27175",
                                "typeString": "contract IERC20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$27175",
                                "typeString": "contract IERC20"
                              }
                            ],
                            "id": 31652,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2796:7:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 31651,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2796:7:40",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 31654,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2796:16:40",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 31657,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2824:1:40",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 31656,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2816:7:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 31655,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2816:7:40",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 31658,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2816:10:40",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2796:30:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "544f4b454e315f5a45524f41444452455353",
                        "id": 31660,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2828:20:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a1a839a89673d037be06d675faba26ecdd5ab340f2bfdeaa0d818373a8e42eb9",
                          "typeString": "literal_string \"TOKEN1_ZEROADDRESS\""
                        },
                        "value": "TOKEN1_ZEROADDRESS"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a1a839a89673d037be06d675faba26ecdd5ab340f2bfdeaa0d818373a8e42eb9",
                          "typeString": "literal_string \"TOKEN1_ZEROADDRESS\""
                        }
                      ],
                      "id": 31650,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2788:7:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 31661,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2788:61:40",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31662,
                  "nodeType": "ExpressionStatement",
                  "src": "2788:61:40"
                },
                {
                  "assignments": [
                    31664
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 31664,
                      "mutability": "mutable",
                      "name": "_tenderTokenDecimals",
                      "nameLocation": "2906:20:40",
                      "nodeType": "VariableDeclaration",
                      "scope": 31798,
                      "src": "2900:26:40",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 31663,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "2900:5:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 31673,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 31668,
                                "name": "_token0",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31597,
                                "src": "2952:7:40",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$27175",
                                  "typeString": "contract IERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IERC20_$27175",
                                  "typeString": "contract IERC20"
                                }
                              ],
                              "id": 31667,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2944:7:40",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 31666,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2944:7:40",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 31669,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2944:16:40",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 31665,
                          "name": "IERC20Decimals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31543,
                          "src": "2929:14:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Decimals_$31543_$",
                            "typeString": "type(contract IERC20Decimals)"
                          }
                        },
                        "id": 31670,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2929:32:40",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Decimals_$31543",
                          "typeString": "contract IERC20Decimals"
                        }
                      },
                      "id": 31671,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2962:8:40",
                      "memberName": "decimals",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31542,
                      "src": "2929:41:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                        "typeString": "function () view external returns (uint8)"
                      }
                    },
                    "id": 31672,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2929:43:40",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2900:72:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 31677,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 31675,
                          "name": "_tenderTokenDecimals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31664,
                          "src": "2991:20:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 31676,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3014:1:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2991:24:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 31674,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2983:7:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 31678,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2983:33:40",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31679,
                  "nodeType": "ExpressionStatement",
                  "src": "2983:33:40"
                },
                {
                  "expression": {
                    "id": 31692,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 31680,
                      "name": "token0",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31575,
                      "src": "3027:6:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PooledToken_$28700_storage",
                        "typeString": "struct SwapUtils.PooledToken storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 31683,
                          "name": "_token0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31597,
                          "src": "3080:7:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$27175",
                            "typeString": "contract IERC20"
                          }
                        },
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 31690,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3130",
                            "id": 31684,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3123:2:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                },
                                "id": 31688,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 31685,
                                    "name": "SwapUtils",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 31522,
                                    "src": "3128:9:40",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_SwapUtils_$31522_$",
                                      "typeString": "type(library SwapUtils)"
                                    }
                                  },
                                  "id": 31686,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "3138:23:40",
                                  "memberName": "POOL_PRECISION_DECIMALS",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 28668,
                                  "src": "3128:33:40",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "id": 31687,
                                  "name": "_tenderTokenDecimals",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 31664,
                                  "src": "3164:20:40",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                "src": "3128:56:40",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              }
                            ],
                            "id": 31689,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "3127:58:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "src": "3123:62:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IERC20_$27175",
                            "typeString": "contract IERC20"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 31681,
                          "name": "SwapUtils",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31522,
                          "src": "3036:9:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_SwapUtils_$31522_$",
                            "typeString": "type(library SwapUtils)"
                          }
                        },
                        "id": 31682,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3046:11:40",
                        "memberName": "PooledToken",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 28700,
                        "src": "3036:21:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_PooledToken_$28700_storage_ptr_$",
                          "typeString": "type(struct SwapUtils.PooledToken storage pointer)"
                        }
                      },
                      "id": 31691,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "nameLocations": [
                        "3073:5:40",
                        "3102:19:40"
                      ],
                      "names": [
                        "token",
                        "precisionMultiplier"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "3036:161:40",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PooledToken_$28700_memory_ptr",
                        "typeString": "struct SwapUtils.PooledToken memory"
                      }
                    },
                    "src": "3027:170:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PooledToken_$28700_storage",
                      "typeString": "struct SwapUtils.PooledToken storage ref"
                    }
                  },
                  "id": 31693,
                  "nodeType": "ExpressionStatement",
                  "src": "3027:170:40"
                },
                {
                  "assignments": [
                    31695
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 31695,
                      "mutability": "mutable",
                      "name": "_tokenDecimals",
                      "nameLocation": "3216:14:40",
                      "nodeType": "VariableDeclaration",
                      "scope": 31798,
                      "src": "3210:20:40",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 31694,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "3210:5:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 31704,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 31699,
                                "name": "_token1",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31600,
                                "src": "3256:7:40",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$27175",
                                  "typeString": "contract IERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IERC20_$27175",
                                  "typeString": "contract IERC20"
                                }
                              ],
                              "id": 31698,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3248:7:40",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 31697,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3248:7:40",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 31700,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3248:16:40",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 31696,
                          "name": "IERC20Decimals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31543,
                          "src": "3233:14:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Decimals_$31543_$",
                            "typeString": "type(contract IERC20Decimals)"
                          }
                        },
                        "id": 31701,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3233:32:40",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Decimals_$31543",
                          "typeString": "contract IERC20Decimals"
                        }
                      },
                      "id": 31702,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3266:8:40",
                      "memberName": "decimals",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31542,
                      "src": "3233:41:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                        "typeString": "function () view external returns (uint8)"
                      }
                    },
                    "id": 31703,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3233:43:40",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3210:66:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 31708,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 31706,
                          "name": "_tokenDecimals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31695,
                          "src": "3295:14:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 31707,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3312:1:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3295:18:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 31705,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3287:7:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 31709,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3287:27:40",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31710,
                  "nodeType": "ExpressionStatement",
                  "src": "3287:27:40"
                },
                {
                  "expression": {
                    "id": 31723,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 31711,
                      "name": "token1",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31578,
                      "src": "3325:6:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PooledToken_$28700_storage",
                        "typeString": "struct SwapUtils.PooledToken storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 31714,
                          "name": "_token1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31600,
                          "src": "3378:7:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$27175",
                            "typeString": "contract IERC20"
                          }
                        },
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 31721,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3130",
                            "id": 31715,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3421:2:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                },
                                "id": 31719,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 31716,
                                    "name": "SwapUtils",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 31522,
                                    "src": "3426:9:40",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_SwapUtils_$31522_$",
                                      "typeString": "type(library SwapUtils)"
                                    }
                                  },
                                  "id": 31717,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "3436:23:40",
                                  "memberName": "POOL_PRECISION_DECIMALS",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 28668,
                                  "src": "3426:33:40",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "id": 31718,
                                  "name": "_tokenDecimals",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 31695,
                                  "src": "3462:14:40",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                "src": "3426:50:40",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              }
                            ],
                            "id": 31720,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "3425:52:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "src": "3421:56:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IERC20_$27175",
                            "typeString": "contract IERC20"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 31712,
                          "name": "SwapUtils",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31522,
                          "src": "3334:9:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_SwapUtils_$31522_$",
                            "typeString": "type(library SwapUtils)"
                          }
                        },
                        "id": 31713,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3344:11:40",
                        "memberName": "PooledToken",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 28700,
                        "src": "3334:21:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_PooledToken_$28700_storage_ptr_$",
                          "typeString": "type(struct SwapUtils.PooledToken storage pointer)"
                        }
                      },
                      "id": 31722,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "nameLocations": [
                        "3371:5:40",
                        "3400:19:40"
                      ],
                      "names": [
                        "token",
                        "precisionMultiplier"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "3334:155:40",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PooledToken_$28700_memory_ptr",
                        "typeString": "struct SwapUtils.PooledToken memory"
                      }
                    },
                    "src": "3325:164:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PooledToken_$28700_storage",
                      "typeString": "struct SwapUtils.PooledToken storage ref"
                    }
                  },
                  "id": 31724,
                  "nodeType": "ExpressionStatement",
                  "src": "3325:164:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 31729,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 31726,
                          "name": "_a",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31606,
                          "src": "3563:2:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "expression": {
                            "id": 31727,
                            "name": "SwapUtils",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31522,
                            "src": "3568:9:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_SwapUtils_$31522_$",
                              "typeString": "type(library SwapUtils)"
                            }
                          },
                          "id": 31728,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "3578:5:40",
                          "memberName": "MAX_A",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 31124,
                          "src": "3568:15:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3563:20:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5f612065786365656473206d6178696d756d",
                        "id": 31730,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3585:20:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6d10d9193d6dae542704df3b3ab8bcf0eeb6847d3d136ed4b04aee07a7f72dfe",
                          "typeString": "literal_string \"_a exceeds maximum\""
                        },
                        "value": "_a exceeds maximum"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6d10d9193d6dae542704df3b3ab8bcf0eeb6847d3d136ed4b04aee07a7f72dfe",
                          "typeString": "literal_string \"_a exceeds maximum\""
                        }
                      ],
                      "id": 31725,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3555:7:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 31731,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3555:51:40",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31732,
                  "nodeType": "ExpressionStatement",
                  "src": "3555:51:40"
                },
                {
                  "expression": {
                    "id": 31740,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 31733,
                        "name": "amplificationParams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31572,
                        "src": "3617:19:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Amplification_$31139_storage",
                          "typeString": "struct SwapUtils.Amplification storage ref"
                        }
                      },
                      "id": 31735,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "3637:8:40",
                      "memberName": "initialA",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31132,
                      "src": "3617:28:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 31739,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 31736,
                        "name": "_a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31606,
                        "src": "3648:2:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "expression": {
                          "id": 31737,
                          "name": "SwapUtils",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31522,
                          "src": "3653:9:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_SwapUtils_$31522_$",
                            "typeString": "type(library SwapUtils)"
                          }
                        },
                        "id": 31738,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "3663:11:40",
                        "memberName": "A_PRECISION",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 31119,
                        "src": "3653:21:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "3648:26:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3617:57:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 31741,
                  "nodeType": "ExpressionStatement",
                  "src": "3617:57:40"
                },
                {
                  "expression": {
                    "id": 31749,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 31742,
                        "name": "amplificationParams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31572,
                        "src": "3685:19:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Amplification_$31139_storage",
                          "typeString": "struct SwapUtils.Amplification storage ref"
                        }
                      },
                      "id": 31744,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "3705:7:40",
                      "memberName": "futureA",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31134,
                      "src": "3685:27:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 31748,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 31745,
                        "name": "_a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31606,
                        "src": "3715:2:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "expression": {
                          "id": 31746,
                          "name": "SwapUtils",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31522,
                          "src": "3720:9:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_SwapUtils_$31522_$",
                            "typeString": "type(library SwapUtils)"
                          }
                        },
                        "id": 31747,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "3730:11:40",
                        "memberName": "A_PRECISION",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 31119,
                        "src": "3720:21:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "3715:26:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3685:56:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 31750,
                  "nodeType": "ExpressionStatement",
                  "src": "3685:56:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 31755,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 31752,
                          "name": "_fee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31608,
                          "src": "3819:4:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "expression": {
                            "id": 31753,
                            "name": "SwapUtils",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31522,
                            "src": "3826:9:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_SwapUtils_$31522_$",
                              "typeString": "type(library SwapUtils)"
                            }
                          },
                          "id": 31754,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "3836:12:40",
                          "memberName": "MAX_SWAP_FEE",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 28678,
                          "src": "3826:22:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3819:29:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5f6665652065786365656473206d6178696d756d",
                        "id": 31756,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3850:22:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c2ec1c8b95f7fdd82a9cd723ab25579d58e30b4630228130b1c03ae94813d95b",
                          "typeString": "literal_string \"_fee exceeds maximum\""
                        },
                        "value": "_fee exceeds maximum"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c2ec1c8b95f7fdd82a9cd723ab25579d58e30b4630228130b1c03ae94813d95b",
                          "typeString": "literal_string \"_fee exceeds maximum\""
                        }
                      ],
                      "id": 31751,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3811:7:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 31757,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3811:62:40",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31758,
                  "nodeType": "ExpressionStatement",
                  "src": "3811:62:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 31763,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 31760,
                          "name": "_adminFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31610,
                          "src": "3892:9:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "expression": {
                            "id": 31761,
                            "name": "SwapUtils",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31522,
                            "src": "3904:9:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_SwapUtils_$31522_$",
                              "typeString": "type(library SwapUtils)"
                            }
                          },
                          "id": 31762,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "3914:13:40",
                          "memberName": "MAX_ADMIN_FEE",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 28683,
                          "src": "3904:23:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3892:35:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5f61646d696e4665652065786365656473206d6178696d756d",
                        "id": 31764,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3929:27:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5e9995c4674de2ad727ffbe3c3110784ecdbab72c3e1a2bdc6129e561bb0f370",
                          "typeString": "literal_string \"_adminFee exceeds maximum\""
                        },
                        "value": "_adminFee exceeds maximum"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5e9995c4674de2ad727ffbe3c3110784ecdbab72c3e1a2bdc6129e561bb0f370",
                          "typeString": "literal_string \"_adminFee exceeds maximum\""
                        }
                      ],
                      "id": 31759,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3884:7:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 31765,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3884:73:40",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31766,
                  "nodeType": "ExpressionStatement",
                  "src": "3884:73:40"
                },
                {
                  "expression": {
                    "id": 31773,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 31767,
                      "name": "feeParams",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31569,
                      "src": "3968:9:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_FeeParams_$28694_storage",
                        "typeString": "struct SwapUtils.FeeParams storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 31770,
                          "name": "_fee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31608,
                          "src": "4011:4:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 31771,
                          "name": "_adminFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31610,
                          "src": "4027:9:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 31768,
                          "name": "SwapUtils",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31522,
                          "src": "3980:9:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_SwapUtils_$31522_$",
                            "typeString": "type(library SwapUtils)"
                          }
                        },
                        "id": 31769,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3990:9:40",
                        "memberName": "FeeParams",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 28694,
                        "src": "3980:19:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_FeeParams_$28694_storage_ptr_$",
                          "typeString": "type(struct SwapUtils.FeeParams storage pointer)"
                        }
                      },
                      "id": 31772,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "nameLocations": [
                        "4002:7:40",
                        "4017:8:40"
                      ],
                      "names": [
                        "swapFee",
                        "adminFee"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "3980:59:40",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_FeeParams_$28694_memory_ptr",
                        "typeString": "struct SwapUtils.FeeParams memory"
                      }
                    },
                    "src": "3968:71:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_FeeParams_$28694_storage",
                      "typeString": "struct SwapUtils.FeeParams storage ref"
                    }
                  },
                  "id": 31774,
                  "nodeType": "ExpressionStatement",
                  "src": "3968:71:40"
                },
                {
                  "expression": {
                    "id": 31785,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 31775,
                      "name": "lpToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31582,
                      "src": "4232:7:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LiquidityPoolToken_$28239",
                        "typeString": "contract LiquidityPoolToken"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 31781,
                                  "name": "lpTokenTargetAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 31613,
                                  "src": "4282:20:40",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_LiquidityPoolToken_$28239",
                                    "typeString": "contract LiquidityPoolToken"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_LiquidityPoolToken_$28239",
                                    "typeString": "contract LiquidityPoolToken"
                                  }
                                ],
                                "id": 31780,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4274:7:40",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 31779,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4274:7:40",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 31782,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4274:29:40",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 31777,
                              "name": "Clones",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 27097,
                              "src": "4261:6:40",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_Clones_$27097_$",
                                "typeString": "type(library Clones)"
                              }
                            },
                            "id": 31778,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4268:5:40",
                            "memberName": "clone",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 27040,
                            "src": "4261:12:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_address_$",
                              "typeString": "function (address) returns (address)"
                            }
                          },
                          "id": 31783,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4261:43:40",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 31776,
                        "name": "LiquidityPoolToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28239,
                        "src": "4242:18:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_LiquidityPoolToken_$28239_$",
                          "typeString": "type(contract LiquidityPoolToken)"
                        }
                      },
                      "id": 31784,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4242:63:40",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LiquidityPoolToken_$28239",
                        "typeString": "contract LiquidityPoolToken"
                      }
                    },
                    "src": "4232:73:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_LiquidityPoolToken_$28239",
                      "typeString": "contract LiquidityPoolToken"
                    }
                  },
                  "id": 31786,
                  "nodeType": "ExpressionStatement",
                  "src": "4232:73:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 31790,
                            "name": "lpTokenName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31602,
                            "src": "4343:11:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 31791,
                            "name": "lpTokenSymbol",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31604,
                            "src": "4356:13:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "expression": {
                            "id": 31788,
                            "name": "lpToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31582,
                            "src": "4324:7:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LiquidityPoolToken_$28239",
                              "typeString": "contract LiquidityPoolToken"
                            }
                          },
                          "id": 31789,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4332:10:40",
                          "memberName": "initialize",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 28215,
                          "src": "4324:18:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (string memory,string memory) external returns (bool)"
                          }
                        },
                        "id": 31792,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4324:46:40",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "636f756c64206e6f7420696e6974206c70546f6b656e20636c6f6e65",
                        "id": 31793,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4372:30:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ef06697a0ef9ea911497bdcdba4dca4da1254e21c81d969c12b4cc8c2147f5f7",
                          "typeString": "literal_string \"could not init lpToken clone\""
                        },
                        "value": "could not init lpToken clone"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ef06697a0ef9ea911497bdcdba4dca4da1254e21c81d969c12b4cc8c2147f5f7",
                          "typeString": "literal_string \"could not init lpToken clone\""
                        }
                      ],
                      "id": 31787,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4316:7:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 31794,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4316:87:40",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31795,
                  "nodeType": "ExpressionStatement",
                  "src": "4316:87:40"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 31796,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4423:4:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 31620,
                  "id": 31797,
                  "nodeType": "Return",
                  "src": "4416:11:40"
                }
              ]
            },
            "baseFunctions": [
              27970
            ],
            "documentation": {
              "id": 31594,
              "nodeType": "StructuredDocumentation",
              "src": "2117:27:40",
              "text": "@inheritdoc ITenderSwap"
            },
            "functionSelector": "afcd5f4b",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 31617,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 31616,
                  "name": "initializer",
                  "nameLocations": [
                    "2441:11:40"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 23889,
                  "src": "2441:11:40"
                },
                "nodeType": "ModifierInvocation",
                "src": "2441:11:40"
              }
            ],
            "name": "initialize",
            "nameLocation": "2159:10:40",
            "overrides": {
              "id": 31615,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2432:8:40"
            },
            "parameters": {
              "id": 31614,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 31597,
                  "mutability": "mutable",
                  "name": "_token0",
                  "nameLocation": "2187:7:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 31799,
                  "src": "2180:14:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$27175",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 31596,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 31595,
                      "name": "IERC20",
                      "nameLocations": [
                        "2180:6:40"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 27175,
                      "src": "2180:6:40"
                    },
                    "referencedDeclaration": 27175,
                    "src": "2180:6:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$27175",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 31600,
                  "mutability": "mutable",
                  "name": "_token1",
                  "nameLocation": "2212:7:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 31799,
                  "src": "2205:14:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$27175",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 31599,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 31598,
                      "name": "IERC20",
                      "nameLocations": [
                        "2205:6:40"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 27175,
                      "src": "2205:6:40"
                    },
                    "referencedDeclaration": 27175,
                    "src": "2205:6:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$27175",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 31602,
                  "mutability": "mutable",
                  "name": "lpTokenName",
                  "nameLocation": "2244:11:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 31799,
                  "src": "2230:25:40",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 31601,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2230:6:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 31604,
                  "mutability": "mutable",
                  "name": "lpTokenSymbol",
                  "nameLocation": "2280:13:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 31799,
                  "src": "2266:27:40",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 31603,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2266:6:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 31606,
                  "mutability": "mutable",
                  "name": "_a",
                  "nameLocation": "2312:2:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 31799,
                  "src": "2304:10:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 31605,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2304:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 31608,
                  "mutability": "mutable",
                  "name": "_fee",
                  "nameLocation": "2333:4:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 31799,
                  "src": "2325:12:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 31607,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2325:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 31610,
                  "mutability": "mutable",
                  "name": "_adminFee",
                  "nameLocation": "2356:9:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 31799,
                  "src": "2348:17:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 31609,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2348:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 31613,
                  "mutability": "mutable",
                  "name": "lpTokenTargetAddress",
                  "nameLocation": "2395:20:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 31799,
                  "src": "2376:39:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_LiquidityPoolToken_$28239",
                    "typeString": "contract LiquidityPoolToken"
                  },
                  "typeName": {
                    "id": 31612,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 31611,
                      "name": "LiquidityPoolToken",
                      "nameLocations": [
                        "2376:18:40"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 28239,
                      "src": "2376:18:40"
                    },
                    "referencedDeclaration": 28239,
                    "src": "2376:18:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_LiquidityPoolToken_$28239",
                      "typeString": "contract LiquidityPoolToken"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2169:253:40"
            },
            "returnParameters": {
              "id": 31620,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 31619,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 31799,
                  "src": "2462:4:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 31618,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2462:4:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2461:6:40"
            },
            "scope": 32355,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 31811,
            "nodeType": "FunctionDefinition",
            "src": "4508:109:40",
            "nodes": [],
            "body": {
              "id": 31810,
              "nodeType": "Block",
              "src": "4565:52:40",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 31806,
                        "name": "amplificationParams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31572,
                        "src": "4583:19:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Amplification_$31139_storage",
                          "typeString": "struct SwapUtils.Amplification storage ref"
                        }
                      },
                      "id": 31807,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4603:4:40",
                      "memberName": "getA",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31171,
                      "src": "4583:24:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_view$_t_struct$_Amplification_$31139_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Amplification_$31139_storage_ptr_$",
                        "typeString": "function (struct SwapUtils.Amplification storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 31808,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4583:26:40",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 31805,
                  "id": 31809,
                  "nodeType": "Return",
                  "src": "4576:33:40"
                }
              ]
            },
            "baseFunctions": [
              27983
            ],
            "documentation": {
              "id": 31800,
              "nodeType": "StructuredDocumentation",
              "src": "4475:27:40",
              "text": "@inheritdoc ITenderSwap"
            },
            "functionSelector": "d46300fd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getA",
            "nameLocation": "4517:4:40",
            "overrides": {
              "id": 31802,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4538:8:40"
            },
            "parameters": {
              "id": 31801,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4521:2:40"
            },
            "returnParameters": {
              "id": 31805,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 31804,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 31811,
                  "src": "4556:7:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 31803,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4556:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4555:9:40"
            },
            "scope": 32355,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 31823,
            "nodeType": "FunctionDefinition",
            "src": "4658:123:40",
            "nodes": [],
            "body": {
              "id": 31822,
              "nodeType": "Block",
              "src": "4722:59:40",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 31818,
                        "name": "amplificationParams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31572,
                        "src": "4740:19:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Amplification_$31139_storage",
                          "typeString": "struct SwapUtils.Amplification storage ref"
                        }
                      },
                      "id": 31819,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4760:11:40",
                      "memberName": "getAPrecise",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31185,
                      "src": "4740:31:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_view$_t_struct$_Amplification_$31139_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Amplification_$31139_storage_ptr_$",
                        "typeString": "function (struct SwapUtils.Amplification storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 31820,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4740:33:40",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 31817,
                  "id": 31821,
                  "nodeType": "Return",
                  "src": "4733:40:40"
                }
              ]
            },
            "baseFunctions": [
              27989
            ],
            "documentation": {
              "id": 31812,
              "nodeType": "StructuredDocumentation",
              "src": "4625:27:40",
              "text": "@inheritdoc ITenderSwap"
            },
            "functionSelector": "0ba81959",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAPrecise",
            "nameLocation": "4667:11:40",
            "overrides": {
              "id": 31814,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4695:8:40"
            },
            "parameters": {
              "id": 31813,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4678:2:40"
            },
            "returnParameters": {
              "id": 31817,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 31816,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 31823,
                  "src": "4713:7:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 31815,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4713:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4712:9:40"
            },
            "scope": 32355,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 31835,
            "nodeType": "FunctionDefinition",
            "src": "4822:99:40",
            "nodes": [],
            "body": {
              "id": 31834,
              "nodeType": "Block",
              "src": "4883:38:40",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 31831,
                      "name": "token0",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31575,
                      "src": "4901:6:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PooledToken_$28700_storage",
                        "typeString": "struct SwapUtils.PooledToken storage ref"
                      }
                    },
                    "id": 31832,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "4908:5:40",
                    "memberName": "token",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 28697,
                    "src": "4901:12:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$27175",
                      "typeString": "contract IERC20"
                    }
                  },
                  "functionReturnParameters": 31830,
                  "id": 31833,
                  "nodeType": "Return",
                  "src": "4894:19:40"
                }
              ]
            },
            "baseFunctions": [
              27996
            ],
            "documentation": {
              "id": 31824,
              "nodeType": "StructuredDocumentation",
              "src": "4789:27:40",
              "text": "@inheritdoc ITenderSwap"
            },
            "functionSelector": "ba94a315",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getToken0",
            "nameLocation": "4831:9:40",
            "overrides": {
              "id": 31826,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4857:8:40"
            },
            "parameters": {
              "id": 31825,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4840:2:40"
            },
            "returnParameters": {
              "id": 31830,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 31829,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 31835,
                  "src": "4875:6:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$27175",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 31828,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 31827,
                      "name": "IERC20",
                      "nameLocations": [
                        "4875:6:40"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 27175,
                      "src": "4875:6:40"
                    },
                    "referencedDeclaration": 27175,
                    "src": "4875:6:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$27175",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4874:8:40"
            },
            "scope": 32355,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 31847,
            "nodeType": "FunctionDefinition",
            "src": "4962:99:40",
            "nodes": [],
            "body": {
              "id": 31846,
              "nodeType": "Block",
              "src": "5023:38:40",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 31843,
                      "name": "token1",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31578,
                      "src": "5041:6:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PooledToken_$28700_storage",
                        "typeString": "struct SwapUtils.PooledToken storage ref"
                      }
                    },
                    "id": 31844,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "5048:5:40",
                    "memberName": "token",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 28697,
                    "src": "5041:12:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$27175",
                      "typeString": "contract IERC20"
                    }
                  },
                  "functionReturnParameters": 31842,
                  "id": 31845,
                  "nodeType": "Return",
                  "src": "5034:19:40"
                }
              ]
            },
            "baseFunctions": [
              28003
            ],
            "documentation": {
              "id": 31836,
              "nodeType": "StructuredDocumentation",
              "src": "4929:27:40",
              "text": "@inheritdoc ITenderSwap"
            },
            "functionSelector": "6f26a710",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getToken1",
            "nameLocation": "4971:9:40",
            "overrides": {
              "id": 31838,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4997:8:40"
            },
            "parameters": {
              "id": 31837,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4980:2:40"
            },
            "returnParameters": {
              "id": 31842,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 31841,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 31847,
                  "src": "5015:6:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$27175",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 31840,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 31839,
                      "name": "IERC20",
                      "nameLocations": [
                        "5015:6:40"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 27175,
                      "src": "5015:6:40"
                    },
                    "referencedDeclaration": 27175,
                    "src": "5015:6:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$27175",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5014:8:40"
            },
            "scope": 32355,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 31859,
            "nodeType": "FunctionDefinition",
            "src": "5102:119:40",
            "nodes": [],
            "body": {
              "id": 31858,
              "nodeType": "Block",
              "src": "5171:50:40",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 31854,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31575,
                        "src": "5189:6:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PooledToken_$28700_storage",
                          "typeString": "struct SwapUtils.PooledToken storage ref"
                        }
                      },
                      "id": 31855,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5196:15:40",
                      "memberName": "getTokenBalance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31450,
                      "src": "5189:22:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_view$_t_struct$_PooledToken_$28700_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_PooledToken_$28700_storage_ptr_$",
                        "typeString": "function (struct SwapUtils.PooledToken storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 31856,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5189:24:40",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 31853,
                  "id": 31857,
                  "nodeType": "Return",
                  "src": "5182:31:40"
                }
              ]
            },
            "baseFunctions": [
              28009
            ],
            "documentation": {
              "id": 31848,
              "nodeType": "StructuredDocumentation",
              "src": "5069:27:40",
              "text": "@inheritdoc ITenderSwap"
            },
            "functionSelector": "c2d9ecfa",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getToken0Balance",
            "nameLocation": "5111:16:40",
            "overrides": {
              "id": 31850,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5144:8:40"
            },
            "parameters": {
              "id": 31849,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5127:2:40"
            },
            "returnParameters": {
              "id": 31853,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 31852,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 31859,
                  "src": "5162:7:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 31851,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5162:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5161:9:40"
            },
            "scope": 32355,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 31871,
            "nodeType": "FunctionDefinition",
            "src": "5262:119:40",
            "nodes": [],
            "body": {
              "id": 31870,
              "nodeType": "Block",
              "src": "5331:50:40",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 31866,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31578,
                        "src": "5349:6:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PooledToken_$28700_storage",
                          "typeString": "struct SwapUtils.PooledToken storage ref"
                        }
                      },
                      "id": 31867,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5356:15:40",
                      "memberName": "getTokenBalance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31450,
                      "src": "5349:22:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_view$_t_struct$_PooledToken_$28700_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_PooledToken_$28700_storage_ptr_$",
                        "typeString": "function (struct SwapUtils.PooledToken storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 31868,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5349:24:40",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 31865,
                  "id": 31869,
                  "nodeType": "Return",
                  "src": "5342:31:40"
                }
              ]
            },
            "baseFunctions": [
              28015
            ],
            "documentation": {
              "id": 31860,
              "nodeType": "StructuredDocumentation",
              "src": "5229:27:40",
              "text": "@inheritdoc ITenderSwap"
            },
            "functionSelector": "5153786b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getToken1Balance",
            "nameLocation": "5271:16:40",
            "overrides": {
              "id": 31862,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5304:8:40"
            },
            "parameters": {
              "id": 31861,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5287:2:40"
            },
            "returnParameters": {
              "id": 31865,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 31864,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 31871,
                  "src": "5322:7:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 31863,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5322:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5321:9:40"
            },
            "scope": 32355,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 31887,
            "nodeType": "FunctionDefinition",
            "src": "5422:165:40",
            "nodes": [],
            "body": {
              "id": 31886,
              "nodeType": "Block",
              "src": "5490:97:40",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 31880,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31575,
                        "src": "5534:6:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PooledToken_$28700_storage",
                          "typeString": "struct SwapUtils.PooledToken storage ref"
                        }
                      },
                      {
                        "id": 31881,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31578,
                        "src": "5542:6:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PooledToken_$28700_storage",
                          "typeString": "struct SwapUtils.PooledToken storage ref"
                        }
                      },
                      {
                        "id": 31882,
                        "name": "amplificationParams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31572,
                        "src": "5550:19:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Amplification_$31139_storage",
                          "typeString": "struct SwapUtils.Amplification storage ref"
                        }
                      },
                      {
                        "id": 31883,
                        "name": "lpToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31582,
                        "src": "5571:7:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LiquidityPoolToken_$28239",
                          "typeString": "contract LiquidityPoolToken"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_PooledToken_$28700_storage",
                          "typeString": "struct SwapUtils.PooledToken storage ref"
                        },
                        {
                          "typeIdentifier": "t_struct$_PooledToken_$28700_storage",
                          "typeString": "struct SwapUtils.PooledToken storage ref"
                        },
                        {
                          "typeIdentifier": "t_struct$_Amplification_$31139_storage",
                          "typeString": "struct SwapUtils.Amplification storage ref"
                        },
                        {
                          "typeIdentifier": "t_contract$_LiquidityPoolToken_$28239",
                          "typeString": "contract LiquidityPoolToken"
                        }
                      ],
                      "expression": {
                        "id": 31878,
                        "name": "SwapUtils",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31522,
                        "src": "5508:9:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SwapUtils_$31522_$",
                          "typeString": "type(library SwapUtils)"
                        }
                      },
                      "id": 31879,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5518:15:40",
                      "memberName": "getVirtualPrice",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28920,
                      "src": "5508:25:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_view$_t_struct$_PooledToken_$28700_storage_ptr_$_t_struct$_PooledToken_$28700_storage_ptr_$_t_struct$_Amplification_$31139_storage_ptr_$_t_contract$_LiquidityPoolToken_$28239_$returns$_t_uint256_$",
                        "typeString": "function (struct SwapUtils.PooledToken storage pointer,struct SwapUtils.PooledToken storage pointer,struct SwapUtils.Amplification storage pointer,contract LiquidityPoolToken) view returns (uint256)"
                      }
                    },
                    "id": 31884,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5508:71:40",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 31877,
                  "id": 31885,
                  "nodeType": "Return",
                  "src": "5501:78:40"
                }
              ]
            },
            "baseFunctions": [
              28021
            ],
            "documentation": {
              "id": 31872,
              "nodeType": "StructuredDocumentation",
              "src": "5389:27:40",
              "text": "@inheritdoc ITenderSwap"
            },
            "functionSelector": "e25aa5fa",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getVirtualPrice",
            "nameLocation": "5431:15:40",
            "overrides": {
              "id": 31874,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5463:8:40"
            },
            "parameters": {
              "id": 31873,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5446:2:40"
            },
            "returnParameters": {
              "id": 31877,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 31876,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 31887,
                  "src": "5481:7:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 31875,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5481:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5480:9:40"
            },
            "scope": 32355,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 31922,
            "nodeType": "FunctionDefinition",
            "src": "5628:353:40",
            "nodes": [],
            "body": {
              "id": 31921,
              "nodeType": "Block",
              "src": "5724:257:40",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_contract$_IERC20_$27175",
                        "typeString": "contract IERC20"
                      },
                      "id": 31902,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 31899,
                        "name": "_tokenFrom",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31891,
                        "src": "5755:10:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$27175",
                          "typeString": "contract IERC20"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "id": 31900,
                          "name": "token0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31575,
                          "src": "5769:6:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PooledToken_$28700_storage",
                            "typeString": "struct SwapUtils.PooledToken storage ref"
                          }
                        },
                        "id": 31901,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5776:5:40",
                        "memberName": "token",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 28697,
                        "src": "5769:12:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$27175",
                          "typeString": "contract IERC20"
                        }
                      },
                      "src": "5755:26:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "arguments": [
                        {
                          "id": 31913,
                          "name": "token1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31578,
                          "src": "5921:6:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PooledToken_$28700_storage",
                            "typeString": "struct SwapUtils.PooledToken storage ref"
                          }
                        },
                        {
                          "id": 31914,
                          "name": "token0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31575,
                          "src": "5929:6:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PooledToken_$28700_storage",
                            "typeString": "struct SwapUtils.PooledToken storage ref"
                          }
                        },
                        {
                          "id": 31915,
                          "name": "_dx",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31893,
                          "src": "5937:3:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 31916,
                          "name": "amplificationParams",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31572,
                          "src": "5942:19:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Amplification_$31139_storage",
                            "typeString": "struct SwapUtils.Amplification storage ref"
                          }
                        },
                        {
                          "id": 31917,
                          "name": "feeParams",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31569,
                          "src": "5963:9:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FeeParams_$28694_storage",
                            "typeString": "struct SwapUtils.FeeParams storage ref"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_PooledToken_$28700_storage",
                            "typeString": "struct SwapUtils.PooledToken storage ref"
                          },
                          {
                            "typeIdentifier": "t_struct$_PooledToken_$28700_storage",
                            "typeString": "struct SwapUtils.PooledToken storage ref"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_struct$_Amplification_$31139_storage",
                            "typeString": "struct SwapUtils.Amplification storage ref"
                          },
                          {
                            "typeIdentifier": "t_struct$_FeeParams_$28694_storage",
                            "typeString": "struct SwapUtils.FeeParams storage ref"
                          }
                        ],
                        "expression": {
                          "id": 31911,
                          "name": "SwapUtils",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31522,
                          "src": "5897:9:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_SwapUtils_$31522_$",
                            "typeString": "type(library SwapUtils)"
                          }
                        },
                        "id": 31912,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5907:13:40",
                        "memberName": "calculateSwap",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 28952,
                        "src": "5897:23:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_delegatecall_view$_t_struct$_PooledToken_$28700_storage_ptr_$_t_struct$_PooledToken_$28700_storage_ptr_$_t_uint256_$_t_struct$_Amplification_$31139_storage_ptr_$_t_struct$_FeeParams_$28694_storage_ptr_$returns$_t_uint256_$",
                          "typeString": "function (struct SwapUtils.PooledToken storage pointer,struct SwapUtils.PooledToken storage pointer,uint256,struct SwapUtils.Amplification storage pointer,struct SwapUtils.FeeParams storage pointer) view returns (uint256)"
                        }
                      },
                      "id": 31918,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5897:76:40",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 31919,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "5755:218:40",
                    "trueExpression": {
                      "arguments": [
                        {
                          "id": 31905,
                          "name": "token0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31575,
                          "src": "5825:6:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PooledToken_$28700_storage",
                            "typeString": "struct SwapUtils.PooledToken storage ref"
                          }
                        },
                        {
                          "id": 31906,
                          "name": "token1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31578,
                          "src": "5833:6:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PooledToken_$28700_storage",
                            "typeString": "struct SwapUtils.PooledToken storage ref"
                          }
                        },
                        {
                          "id": 31907,
                          "name": "_dx",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31893,
                          "src": "5841:3:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 31908,
                          "name": "amplificationParams",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31572,
                          "src": "5846:19:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Amplification_$31139_storage",
                            "typeString": "struct SwapUtils.Amplification storage ref"
                          }
                        },
                        {
                          "id": 31909,
                          "name": "feeParams",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31569,
                          "src": "5867:9:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FeeParams_$28694_storage",
                            "typeString": "struct SwapUtils.FeeParams storage ref"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_PooledToken_$28700_storage",
                            "typeString": "struct SwapUtils.PooledToken storage ref"
                          },
                          {
                            "typeIdentifier": "t_struct$_PooledToken_$28700_storage",
                            "typeString": "struct SwapUtils.PooledToken storage ref"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_struct$_Amplification_$31139_storage",
                            "typeString": "struct SwapUtils.Amplification storage ref"
                          },
                          {
                            "typeIdentifier": "t_struct$_FeeParams_$28694_storage",
                            "typeString": "struct SwapUtils.FeeParams storage ref"
                          }
                        ],
                        "expression": {
                          "id": 31903,
                          "name": "SwapUtils",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31522,
                          "src": "5801:9:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_SwapUtils_$31522_$",
                            "typeString": "type(library SwapUtils)"
                          }
                        },
                        "id": 31904,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5811:13:40",
                        "memberName": "calculateSwap",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 28952,
                        "src": "5801:23:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_delegatecall_view$_t_struct$_PooledToken_$28700_storage_ptr_$_t_struct$_PooledToken_$28700_storage_ptr_$_t_uint256_$_t_struct$_Amplification_$31139_storage_ptr_$_t_struct$_FeeParams_$28694_storage_ptr_$returns$_t_uint256_$",
                          "typeString": "function (struct SwapUtils.PooledToken storage pointer,struct SwapUtils.PooledToken storage pointer,uint256,struct SwapUtils.Amplification storage pointer,struct SwapUtils.FeeParams storage pointer) view returns (uint256)"
                        }
                      },
                      "id": 31910,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5801:76:40",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 31898,
                  "id": 31920,
                  "nodeType": "Return",
                  "src": "5735:238:40"
                }
              ]
            },
            "baseFunctions": [
              28032
            ],
            "documentation": {
              "id": 31888,
              "nodeType": "StructuredDocumentation",
              "src": "5595:27:40",
              "text": "@inheritdoc ITenderSwap"
            },
            "functionSelector": "1de8d8cb",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calculateSwap",
            "nameLocation": "5637:13:40",
            "overrides": {
              "id": 31895,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5697:8:40"
            },
            "parameters": {
              "id": 31894,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 31891,
                  "mutability": "mutable",
                  "name": "_tokenFrom",
                  "nameLocation": "5658:10:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 31922,
                  "src": "5651:17:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$27175",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 31890,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 31889,
                      "name": "IERC20",
                      "nameLocations": [
                        "5651:6:40"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 27175,
                      "src": "5651:6:40"
                    },
                    "referencedDeclaration": 27175,
                    "src": "5651:6:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$27175",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 31893,
                  "mutability": "mutable",
                  "name": "_dx",
                  "nameLocation": "5678:3:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 31922,
                  "src": "5670:11:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 31892,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5670:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5650:32:40"
            },
            "returnParameters": {
              "id": 31898,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 31897,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 31922,
                  "src": "5715:7:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 31896,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5715:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5714:9:40"
            },
            "scope": 32355,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 31952,
            "nodeType": "FunctionDefinition",
            "src": "6022:256:40",
            "nodes": [],
            "body": {
              "id": 31951,
              "nodeType": "Block",
              "src": "6123:155:40",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    31939
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 31939,
                      "mutability": "mutable",
                      "name": "tokens_",
                      "nameLocation": "6166:7:40",
                      "nodeType": "VariableDeclaration",
                      "scope": 31951,
                      "src": "6134:39:40",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_PooledToken_$28700_memory_ptr_$2_memory_ptr",
                        "typeString": "struct SwapUtils.PooledToken[2]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 31937,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 31936,
                            "name": "SwapUtils.PooledToken",
                            "nameLocations": [
                              "6134:9:40",
                              "6144:11:40"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 28700,
                            "src": "6134:21:40"
                          },
                          "referencedDeclaration": 28700,
                          "src": "6134:21:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PooledToken_$28700_storage_ptr",
                            "typeString": "struct SwapUtils.PooledToken"
                          }
                        },
                        "id": 31938,
                        "length": {
                          "hexValue": "32",
                          "id": 31935,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6156:1:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "nodeType": "ArrayTypeName",
                        "src": "6134:24:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_PooledToken_$28700_storage_$2_storage_ptr",
                          "typeString": "struct SwapUtils.PooledToken[2]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 31943,
                  "initialValue": {
                    "components": [
                      {
                        "id": 31940,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31575,
                        "src": "6177:6:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PooledToken_$28700_storage",
                          "typeString": "struct SwapUtils.PooledToken storage ref"
                        }
                      },
                      {
                        "id": 31941,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31578,
                        "src": "6185:6:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PooledToken_$28700_storage",
                          "typeString": "struct SwapUtils.PooledToken storage ref"
                        }
                      }
                    ],
                    "id": 31942,
                    "isConstant": false,
                    "isInlineArray": true,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "6176:16:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_PooledToken_$28700_memory_ptr_$2_memory_ptr",
                      "typeString": "struct SwapUtils.PooledToken memory[2] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6134:58:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 31946,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31925,
                        "src": "6245:6:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 31947,
                        "name": "tokens_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31939,
                        "src": "6253:7:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_PooledToken_$28700_memory_ptr_$2_memory_ptr",
                          "typeString": "struct SwapUtils.PooledToken memory[2] memory"
                        }
                      },
                      {
                        "id": 31948,
                        "name": "lpToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31582,
                        "src": "6262:7:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LiquidityPoolToken_$28239",
                          "typeString": "contract LiquidityPoolToken"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_struct$_PooledToken_$28700_memory_ptr_$2_memory_ptr",
                          "typeString": "struct SwapUtils.PooledToken memory[2] memory"
                        },
                        {
                          "typeIdentifier": "t_contract$_LiquidityPoolToken_$28239",
                          "typeString": "contract LiquidityPoolToken"
                        }
                      ],
                      "expression": {
                        "id": 31944,
                        "name": "SwapUtils",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31522,
                        "src": "6210:9:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SwapUtils_$31522_$",
                          "typeString": "type(library SwapUtils)"
                        }
                      },
                      "id": 31945,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6220:24:40",
                      "memberName": "calculateRemoveLiquidity",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30765,
                      "src": "6210:34:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_view$_t_uint256_$_t_array$_t_struct$_PooledToken_$28700_memory_ptr_$2_memory_ptr_$_t_contract$_LiquidityPoolToken_$28239_$returns$_t_array$_t_uint256_$2_memory_ptr_$",
                        "typeString": "function (uint256,struct SwapUtils.PooledToken memory[2] memory,contract LiquidityPoolToken) view returns (uint256[2] memory)"
                      }
                    },
                    "id": 31949,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6210:60:40",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                      "typeString": "uint256[2] memory"
                    }
                  },
                  "functionReturnParameters": 31932,
                  "id": 31950,
                  "nodeType": "Return",
                  "src": "6203:67:40"
                }
              ]
            },
            "baseFunctions": [
              28042
            ],
            "documentation": {
              "id": 31923,
              "nodeType": "StructuredDocumentation",
              "src": "5989:27:40",
              "text": "@inheritdoc ITenderSwap"
            },
            "functionSelector": "f2fad2b6",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calculateRemoveLiquidity",
            "nameLocation": "6031:24:40",
            "overrides": {
              "id": 31927,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6086:8:40"
            },
            "parameters": {
              "id": 31926,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 31925,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "6064:6:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 31952,
                  "src": "6056:14:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 31924,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6056:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6055:16:40"
            },
            "returnParameters": {
              "id": 31932,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 31931,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 31952,
                  "src": "6104:17:40",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 31928,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "6104:7:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 31930,
                    "length": {
                      "hexValue": "32",
                      "id": 31929,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6112:1:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "6104:10:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6103:19:40"
            },
            "scope": 32355,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 31989,
            "nodeType": "FunctionDefinition",
            "src": "6319:773:40",
            "nodes": [],
            "body": {
              "id": 31988,
              "nodeType": "Block",
              "src": "6485:607:40",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_contract$_IERC20_$27175",
                        "typeString": "contract IERC20"
                      },
                      "id": 31967,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 31964,
                        "name": "tokenReceive",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31958,
                        "src": "6516:12:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$27175",
                          "typeString": "contract IERC20"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "id": 31965,
                          "name": "token0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31575,
                          "src": "6532:6:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PooledToken_$28700_storage",
                            "typeString": "struct SwapUtils.PooledToken storage ref"
                          }
                        },
                        "id": 31966,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6539:5:40",
                        "memberName": "token",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 28697,
                        "src": "6532:12:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$27175",
                          "typeString": "contract IERC20"
                        }
                      },
                      "src": "6516:28:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "arguments": [
                        {
                          "id": 31979,
                          "name": "tokenAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31955,
                          "src": "6892:11:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 31980,
                          "name": "token1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31578,
                          "src": "6926:6:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PooledToken_$28700_storage",
                            "typeString": "struct SwapUtils.PooledToken storage ref"
                          }
                        },
                        {
                          "id": 31981,
                          "name": "token0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31575,
                          "src": "6955:6:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PooledToken_$28700_storage",
                            "typeString": "struct SwapUtils.PooledToken storage ref"
                          }
                        },
                        {
                          "id": 31982,
                          "name": "amplificationParams",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31572,
                          "src": "6984:19:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Amplification_$31139_storage",
                            "typeString": "struct SwapUtils.Amplification storage ref"
                          }
                        },
                        {
                          "id": 31983,
                          "name": "feeParams",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31569,
                          "src": "7026:9:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FeeParams_$28694_storage",
                            "typeString": "struct SwapUtils.FeeParams storage ref"
                          }
                        },
                        {
                          "id": 31984,
                          "name": "lpToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31582,
                          "src": "7058:7:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LiquidityPoolToken_$28239",
                            "typeString": "contract LiquidityPoolToken"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_struct$_PooledToken_$28700_storage",
                            "typeString": "struct SwapUtils.PooledToken storage ref"
                          },
                          {
                            "typeIdentifier": "t_struct$_PooledToken_$28700_storage",
                            "typeString": "struct SwapUtils.PooledToken storage ref"
                          },
                          {
                            "typeIdentifier": "t_struct$_Amplification_$31139_storage",
                            "typeString": "struct SwapUtils.Amplification storage ref"
                          },
                          {
                            "typeIdentifier": "t_struct$_FeeParams_$28694_storage",
                            "typeString": "struct SwapUtils.FeeParams storage ref"
                          },
                          {
                            "typeIdentifier": "t_contract$_LiquidityPoolToken_$28239",
                            "typeString": "contract LiquidityPoolToken"
                          }
                        ],
                        "expression": {
                          "id": 31977,
                          "name": "SwapUtils",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31522,
                          "src": "6834:9:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_SwapUtils_$31522_$",
                            "typeString": "type(library SwapUtils)"
                          }
                        },
                        "id": 31978,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6844:25:40",
                        "memberName": "calculateWithdrawOneToken",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 30035,
                        "src": "6834:35:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_struct$_PooledToken_$28700_storage_ptr_$_t_struct$_PooledToken_$28700_storage_ptr_$_t_struct$_Amplification_$31139_storage_ptr_$_t_struct$_FeeParams_$28694_storage_ptr_$_t_contract$_LiquidityPoolToken_$28239_$returns$_t_uint256_$",
                          "typeString": "function (uint256,struct SwapUtils.PooledToken storage pointer,struct SwapUtils.PooledToken storage pointer,struct SwapUtils.Amplification storage pointer,struct SwapUtils.FeeParams storage pointer,contract LiquidityPoolToken) view returns (uint256)"
                        }
                      },
                      "id": 31985,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6834:250:40",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 31986,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "6516:568:40",
                    "trueExpression": {
                      "arguments": [
                        {
                          "id": 31970,
                          "name": "tokenAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31955,
                          "src": "6622:11:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 31971,
                          "name": "token0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31575,
                          "src": "6656:6:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PooledToken_$28700_storage",
                            "typeString": "struct SwapUtils.PooledToken storage ref"
                          }
                        },
                        {
                          "id": 31972,
                          "name": "token1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31578,
                          "src": "6685:6:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PooledToken_$28700_storage",
                            "typeString": "struct SwapUtils.PooledToken storage ref"
                          }
                        },
                        {
                          "id": 31973,
                          "name": "amplificationParams",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31572,
                          "src": "6714:19:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Amplification_$31139_storage",
                            "typeString": "struct SwapUtils.Amplification storage ref"
                          }
                        },
                        {
                          "id": 31974,
                          "name": "feeParams",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31569,
                          "src": "6756:9:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FeeParams_$28694_storage",
                            "typeString": "struct SwapUtils.FeeParams storage ref"
                          }
                        },
                        {
                          "id": 31975,
                          "name": "lpToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31582,
                          "src": "6788:7:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LiquidityPoolToken_$28239",
                            "typeString": "contract LiquidityPoolToken"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_struct$_PooledToken_$28700_storage",
                            "typeString": "struct SwapUtils.PooledToken storage ref"
                          },
                          {
                            "typeIdentifier": "t_struct$_PooledToken_$28700_storage",
                            "typeString": "struct SwapUtils.PooledToken storage ref"
                          },
                          {
                            "typeIdentifier": "t_struct$_Amplification_$31139_storage",
                            "typeString": "struct SwapUtils.Amplification storage ref"
                          },
                          {
                            "typeIdentifier": "t_struct$_FeeParams_$28694_storage",
                            "typeString": "struct SwapUtils.FeeParams storage ref"
                          },
                          {
                            "typeIdentifier": "t_contract$_LiquidityPoolToken_$28239",
                            "typeString": "contract LiquidityPoolToken"
                          }
                        ],
                        "expression": {
                          "id": 31968,
                          "name": "SwapUtils",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31522,
                          "src": "6564:9:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_SwapUtils_$31522_$",
                            "typeString": "type(library SwapUtils)"
                          }
                        },
                        "id": 31969,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6574:25:40",
                        "memberName": "calculateWithdrawOneToken",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 30035,
                        "src": "6564:35:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_struct$_PooledToken_$28700_storage_ptr_$_t_struct$_PooledToken_$28700_storage_ptr_$_t_struct$_Amplification_$31139_storage_ptr_$_t_struct$_FeeParams_$28694_storage_ptr_$_t_contract$_LiquidityPoolToken_$28239_$returns$_t_uint256_$",
                          "typeString": "function (uint256,struct SwapUtils.PooledToken storage pointer,struct SwapUtils.PooledToken storage pointer,struct SwapUtils.Amplification storage pointer,struct SwapUtils.FeeParams storage pointer,contract LiquidityPoolToken) view returns (uint256)"
                        }
                      },
                      "id": 31976,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6564:250:40",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 31963,
                  "id": 31987,
                  "nodeType": "Return",
                  "src": "6496:588:40"
                }
              ]
            },
            "baseFunctions": [
              28053
            ],
            "documentation": {
              "id": 31953,
              "nodeType": "StructuredDocumentation",
              "src": "6286:27:40",
              "text": "@inheritdoc ITenderSwap"
            },
            "functionSelector": "805d2766",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calculateRemoveLiquidityOneToken",
            "nameLocation": "6328:32:40",
            "overrides": {
              "id": 31960,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6444:8:40"
            },
            "parameters": {
              "id": 31959,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 31955,
                  "mutability": "mutable",
                  "name": "tokenAmount",
                  "nameLocation": "6369:11:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 31989,
                  "src": "6361:19:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 31954,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6361:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 31958,
                  "mutability": "mutable",
                  "name": "tokenReceive",
                  "nameLocation": "6389:12:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 31989,
                  "src": "6382:19:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$27175",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 31957,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 31956,
                      "name": "IERC20",
                      "nameLocations": [
                        "6382:6:40"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 27175,
                      "src": "6382:6:40"
                    },
                    "referencedDeclaration": 27175,
                    "src": "6382:6:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$27175",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6360:42:40"
            },
            "returnParameters": {
              "id": 31963,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 31962,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 31989,
                  "src": "6471:7:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 31961,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6471:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6470:9:40"
            },
            "scope": 32355,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 32022,
            "nodeType": "FunctionDefinition",
            "src": "7133:297:40",
            "nodes": [],
            "body": {
              "id": 32021,
              "nodeType": "Block",
              "src": "7246:184:40",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    32007
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 32007,
                      "mutability": "mutable",
                      "name": "tokens_",
                      "nameLocation": "7289:7:40",
                      "nodeType": "VariableDeclaration",
                      "scope": 32021,
                      "src": "7257:39:40",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_PooledToken_$28700_memory_ptr_$2_memory_ptr",
                        "typeString": "struct SwapUtils.PooledToken[2]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 32005,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 32004,
                            "name": "SwapUtils.PooledToken",
                            "nameLocations": [
                              "7257:9:40",
                              "7267:11:40"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 28700,
                            "src": "7257:21:40"
                          },
                          "referencedDeclaration": 28700,
                          "src": "7257:21:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PooledToken_$28700_storage_ptr",
                            "typeString": "struct SwapUtils.PooledToken"
                          }
                        },
                        "id": 32006,
                        "length": {
                          "hexValue": "32",
                          "id": 32003,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7279:1:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "nodeType": "ArrayTypeName",
                        "src": "7257:24:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_PooledToken_$28700_storage_$2_storage_ptr",
                          "typeString": "struct SwapUtils.PooledToken[2]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 32011,
                  "initialValue": {
                    "components": [
                      {
                        "id": 32008,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31575,
                        "src": "7300:6:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PooledToken_$28700_storage",
                          "typeString": "struct SwapUtils.PooledToken storage ref"
                        }
                      },
                      {
                        "id": 32009,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31578,
                        "src": "7308:6:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PooledToken_$28700_storage",
                          "typeString": "struct SwapUtils.PooledToken storage ref"
                        }
                      }
                    ],
                    "id": 32010,
                    "isConstant": false,
                    "isInlineArray": true,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "7299:16:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_PooledToken_$28700_memory_ptr_$2_memory_ptr",
                      "typeString": "struct SwapUtils.PooledToken memory[2] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7257:58:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 32014,
                        "name": "tokens_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32007,
                        "src": "7366:7:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_PooledToken_$28700_memory_ptr_$2_memory_ptr",
                          "typeString": "struct SwapUtils.PooledToken memory[2] memory"
                        }
                      },
                      {
                        "id": 32015,
                        "name": "amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31993,
                        "src": "7375:7:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        }
                      },
                      {
                        "id": 32016,
                        "name": "deposit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31995,
                        "src": "7384:7:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "id": 32017,
                        "name": "amplificationParams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31572,
                        "src": "7393:19:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Amplification_$31139_storage",
                          "typeString": "struct SwapUtils.Amplification storage ref"
                        }
                      },
                      {
                        "id": 32018,
                        "name": "lpToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31582,
                        "src": "7414:7:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LiquidityPoolToken_$28239",
                          "typeString": "contract LiquidityPoolToken"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_struct$_PooledToken_$28700_memory_ptr_$2_memory_ptr",
                          "typeString": "struct SwapUtils.PooledToken memory[2] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_struct$_Amplification_$31139_storage",
                          "typeString": "struct SwapUtils.Amplification storage ref"
                        },
                        {
                          "typeIdentifier": "t_contract$_LiquidityPoolToken_$28239",
                          "typeString": "contract LiquidityPoolToken"
                        }
                      ],
                      "expression": {
                        "id": 32012,
                        "name": "SwapUtils",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31522,
                        "src": "7335:9:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SwapUtils_$31522_$",
                          "typeString": "type(library SwapUtils)"
                        }
                      },
                      "id": 32013,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7345:20:40",
                      "memberName": "calculateTokenAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30504,
                      "src": "7335:30:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_view$_t_array$_t_struct$_PooledToken_$28700_memory_ptr_$2_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bool_$_t_struct$_Amplification_$31139_storage_ptr_$_t_contract$_LiquidityPoolToken_$28239_$returns$_t_uint256_$",
                        "typeString": "function (struct SwapUtils.PooledToken memory[2] memory,uint256[] memory,bool,struct SwapUtils.Amplification storage pointer,contract LiquidityPoolToken) view returns (uint256)"
                      }
                    },
                    "id": 32019,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7335:87:40",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 32000,
                  "id": 32020,
                  "nodeType": "Return",
                  "src": "7328:94:40"
                }
              ]
            },
            "baseFunctions": [
              28064
            ],
            "documentation": {
              "id": 31990,
              "nodeType": "StructuredDocumentation",
              "src": "7100:27:40",
              "text": "@inheritdoc ITenderSwap"
            },
            "functionSelector": "e6ab2806",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calculateTokenAmount",
            "nameLocation": "7142:20:40",
            "overrides": {
              "id": 31997,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7219:8:40"
            },
            "parameters": {
              "id": 31996,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 31993,
                  "mutability": "mutable",
                  "name": "amounts",
                  "nameLocation": "7182:7:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 32022,
                  "src": "7163:26:40",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 31991,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "7163:7:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 31992,
                    "nodeType": "ArrayTypeName",
                    "src": "7163:9:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 31995,
                  "mutability": "mutable",
                  "name": "deposit",
                  "nameLocation": "7196:7:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 32022,
                  "src": "7191:12:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 31994,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7191:4:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7162:42:40"
            },
            "returnParameters": {
              "id": 32000,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 31999,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 32022,
                  "src": "7237:7:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 31998,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7237:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7236:9:40"
            },
            "scope": 32355,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 32081,
            "nodeType": "FunctionDefinition",
            "src": "7514:561:40",
            "nodes": [],
            "body": {
              "id": 32080,
              "nodeType": "Block",
              "src": "7712:363:40",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_contract$_IERC20_$27175",
                      "typeString": "contract IERC20"
                    },
                    "id": 32046,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 32043,
                      "name": "_tokenFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32026,
                      "src": "7727:10:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$27175",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 32044,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31575,
                        "src": "7741:6:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PooledToken_$28700_storage",
                          "typeString": "struct SwapUtils.PooledToken storage ref"
                        }
                      },
                      "id": 32045,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7748:5:40",
                      "memberName": "token",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28697,
                      "src": "7741:12:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$27175",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "7727:26:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_contract$_IERC20_$27175",
                        "typeString": "contract IERC20"
                      },
                      "id": 32061,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 32058,
                        "name": "_tokenFrom",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32026,
                        "src": "7874:10:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$27175",
                          "typeString": "contract IERC20"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "id": 32059,
                          "name": "token1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31578,
                          "src": "7888:6:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PooledToken_$28700_storage",
                            "typeString": "struct SwapUtils.PooledToken storage ref"
                          }
                        },
                        "id": 32060,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7895:5:40",
                        "memberName": "token",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 28697,
                        "src": "7888:12:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$27175",
                          "typeString": "contract IERC20"
                        }
                      },
                      "src": "7874:26:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "id": 32077,
                      "nodeType": "Block",
                      "src": "8017:51:40",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "hexValue": "4241445f544f4b454e5f46524f4d",
                                "id": 32074,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8039:16:40",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_63ffb9653efd98ea2e7b3fcef101c528f714b1200ce3e51b6e55f401c41a3c79",
                                  "typeString": "literal_string \"BAD_TOKEN_FROM\""
                                },
                                "value": "BAD_TOKEN_FROM"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_63ffb9653efd98ea2e7b3fcef101c528f714b1200ce3e51b6e55f401c41a3c79",
                                  "typeString": "literal_string \"BAD_TOKEN_FROM\""
                                }
                              ],
                              "id": 32073,
                              "name": "revert",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                -19,
                                -19
                              ],
                              "referencedDeclaration": -19,
                              "src": "8032:6:40",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                "typeString": "function (string memory) pure"
                              }
                            },
                            "id": 32075,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8032:24:40",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 32076,
                          "nodeType": "ExpressionStatement",
                          "src": "8032:24:40"
                        }
                      ]
                    },
                    "id": 32078,
                    "nodeType": "IfStatement",
                    "src": "7870:198:40",
                    "trueBody": {
                      "id": 32072,
                      "nodeType": "Block",
                      "src": "7902:109:40",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 32064,
                                "name": "token1",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31578,
                                "src": "7939:6:40",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_PooledToken_$28700_storage",
                                  "typeString": "struct SwapUtils.PooledToken storage ref"
                                }
                              },
                              {
                                "id": 32065,
                                "name": "token0",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31575,
                                "src": "7947:6:40",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_PooledToken_$28700_storage",
                                  "typeString": "struct SwapUtils.PooledToken storage ref"
                                }
                              },
                              {
                                "id": 32066,
                                "name": "_dx",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32028,
                                "src": "7955:3:40",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 32067,
                                "name": "_minDy",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32030,
                                "src": "7960:6:40",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 32068,
                                "name": "amplificationParams",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31572,
                                "src": "7968:19:40",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Amplification_$31139_storage",
                                  "typeString": "struct SwapUtils.Amplification storage ref"
                                }
                              },
                              {
                                "id": 32069,
                                "name": "feeParams",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31569,
                                "src": "7989:9:40",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_FeeParams_$28694_storage",
                                  "typeString": "struct SwapUtils.FeeParams storage ref"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_struct$_PooledToken_$28700_storage",
                                  "typeString": "struct SwapUtils.PooledToken storage ref"
                                },
                                {
                                  "typeIdentifier": "t_struct$_PooledToken_$28700_storage",
                                  "typeString": "struct SwapUtils.PooledToken storage ref"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_struct$_Amplification_$31139_storage",
                                  "typeString": "struct SwapUtils.Amplification storage ref"
                                },
                                {
                                  "typeIdentifier": "t_struct$_FeeParams_$28694_storage",
                                  "typeString": "struct SwapUtils.FeeParams storage ref"
                                }
                              ],
                              "expression": {
                                "id": 32062,
                                "name": "SwapUtils",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31522,
                                "src": "7924:9:40",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_SwapUtils_$31522_$",
                                  "typeString": "type(library SwapUtils)"
                                }
                              },
                              "id": 32063,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7934:4:40",
                              "memberName": "swap",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 28846,
                              "src": "7924:14:40",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_delegatecall_nonpayable$_t_struct$_PooledToken_$28700_storage_ptr_$_t_struct$_PooledToken_$28700_storage_ptr_$_t_uint256_$_t_uint256_$_t_struct$_Amplification_$31139_storage_ptr_$_t_struct$_FeeParams_$28694_storage_ptr_$returns$_t_uint256_$",
                                "typeString": "function (struct SwapUtils.PooledToken storage pointer,struct SwapUtils.PooledToken storage pointer,uint256,uint256,struct SwapUtils.Amplification storage pointer,struct SwapUtils.FeeParams storage pointer) returns (uint256)"
                              }
                            },
                            "id": 32070,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7924:75:40",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "functionReturnParameters": 32042,
                          "id": 32071,
                          "nodeType": "Return",
                          "src": "7917:82:40"
                        }
                      ]
                    }
                  },
                  "id": 32079,
                  "nodeType": "IfStatement",
                  "src": "7723:345:40",
                  "trueBody": {
                    "id": 32057,
                    "nodeType": "Block",
                    "src": "7755:109:40",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 32049,
                              "name": "token0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31575,
                              "src": "7792:6:40",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PooledToken_$28700_storage",
                                "typeString": "struct SwapUtils.PooledToken storage ref"
                              }
                            },
                            {
                              "id": 32050,
                              "name": "token1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31578,
                              "src": "7800:6:40",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PooledToken_$28700_storage",
                                "typeString": "struct SwapUtils.PooledToken storage ref"
                              }
                            },
                            {
                              "id": 32051,
                              "name": "_dx",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32028,
                              "src": "7808:3:40",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 32052,
                              "name": "_minDy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32030,
                              "src": "7813:6:40",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 32053,
                              "name": "amplificationParams",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31572,
                              "src": "7821:19:40",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Amplification_$31139_storage",
                                "typeString": "struct SwapUtils.Amplification storage ref"
                              }
                            },
                            {
                              "id": 32054,
                              "name": "feeParams",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31569,
                              "src": "7842:9:40",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_FeeParams_$28694_storage",
                                "typeString": "struct SwapUtils.FeeParams storage ref"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_PooledToken_$28700_storage",
                                "typeString": "struct SwapUtils.PooledToken storage ref"
                              },
                              {
                                "typeIdentifier": "t_struct$_PooledToken_$28700_storage",
                                "typeString": "struct SwapUtils.PooledToken storage ref"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_struct$_Amplification_$31139_storage",
                                "typeString": "struct SwapUtils.Amplification storage ref"
                              },
                              {
                                "typeIdentifier": "t_struct$_FeeParams_$28694_storage",
                                "typeString": "struct SwapUtils.FeeParams storage ref"
                              }
                            ],
                            "expression": {
                              "id": 32047,
                              "name": "SwapUtils",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31522,
                              "src": "7777:9:40",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_SwapUtils_$31522_$",
                                "typeString": "type(library SwapUtils)"
                              }
                            },
                            "id": 32048,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7787:4:40",
                            "memberName": "swap",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 28846,
                            "src": "7777:14:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_delegatecall_nonpayable$_t_struct$_PooledToken_$28700_storage_ptr_$_t_struct$_PooledToken_$28700_storage_ptr_$_t_uint256_$_t_uint256_$_t_struct$_Amplification_$31139_storage_ptr_$_t_struct$_FeeParams_$28694_storage_ptr_$returns$_t_uint256_$",
                              "typeString": "function (struct SwapUtils.PooledToken storage pointer,struct SwapUtils.PooledToken storage pointer,uint256,uint256,struct SwapUtils.Amplification storage pointer,struct SwapUtils.FeeParams storage pointer) returns (uint256)"
                            }
                          },
                          "id": 32055,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7777:75:40",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 32042,
                        "id": 32056,
                        "nodeType": "Return",
                        "src": "7770:82:40"
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              28079
            ],
            "documentation": {
              "id": 32023,
              "nodeType": "StructuredDocumentation",
              "src": "7481:27:40",
              "text": "@inheritdoc ITenderSwap"
            },
            "functionSelector": "c9ec9248",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 32036,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 32035,
                  "name": "nonReentrant",
                  "nameLocations": [
                    "7656:12:40"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 24031,
                  "src": "7656:12:40"
                },
                "nodeType": "ModifierInvocation",
                "src": "7656:12:40"
              },
              {
                "arguments": [
                  {
                    "id": 32038,
                    "name": "_deadline",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 32032,
                    "src": "7683:9:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 32039,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 32037,
                  "name": "deadlineCheck",
                  "nameLocations": [
                    "7669:13:40"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31593,
                  "src": "7669:13:40"
                },
                "nodeType": "ModifierInvocation",
                "src": "7669:24:40"
              }
            ],
            "name": "swap",
            "nameLocation": "7523:4:40",
            "overrides": {
              "id": 32034,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7647:8:40"
            },
            "parameters": {
              "id": 32033,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32026,
                  "mutability": "mutable",
                  "name": "_tokenFrom",
                  "nameLocation": "7545:10:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 32081,
                  "src": "7538:17:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$27175",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 32025,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 32024,
                      "name": "IERC20",
                      "nameLocations": [
                        "7538:6:40"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 27175,
                      "src": "7538:6:40"
                    },
                    "referencedDeclaration": 27175,
                    "src": "7538:6:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$27175",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 32028,
                  "mutability": "mutable",
                  "name": "_dx",
                  "nameLocation": "7574:3:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 32081,
                  "src": "7566:11:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32027,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7566:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 32030,
                  "mutability": "mutable",
                  "name": "_minDy",
                  "nameLocation": "7596:6:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 32081,
                  "src": "7588:14:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32029,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7588:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 32032,
                  "mutability": "mutable",
                  "name": "_deadline",
                  "nameLocation": "7621:9:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 32081,
                  "src": "7613:17:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32031,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7613:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7527:110:40"
            },
            "returnParameters": {
              "id": 32042,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32041,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 32081,
                  "src": "7703:7:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32040,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7703:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7702:9:40"
            },
            "scope": 32355,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 32123,
            "nodeType": "FunctionDefinition",
            "src": "8116:390:40",
            "nodes": [],
            "body": {
              "id": 32122,
              "nodeType": "Block",
              "src": "8315:191:40",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    32107
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 32107,
                      "mutability": "mutable",
                      "name": "tokens_",
                      "nameLocation": "8358:7:40",
                      "nodeType": "VariableDeclaration",
                      "scope": 32122,
                      "src": "8326:39:40",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_PooledToken_$28700_memory_ptr_$2_memory_ptr",
                        "typeString": "struct SwapUtils.PooledToken[2]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 32105,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 32104,
                            "name": "SwapUtils.PooledToken",
                            "nameLocations": [
                              "8326:9:40",
                              "8336:11:40"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 28700,
                            "src": "8326:21:40"
                          },
                          "referencedDeclaration": 28700,
                          "src": "8326:21:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PooledToken_$28700_storage_ptr",
                            "typeString": "struct SwapUtils.PooledToken"
                          }
                        },
                        "id": 32106,
                        "length": {
                          "hexValue": "32",
                          "id": 32103,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8348:1:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "nodeType": "ArrayTypeName",
                        "src": "8326:24:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_PooledToken_$28700_storage_$2_storage_ptr",
                          "typeString": "struct SwapUtils.PooledToken[2]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 32111,
                  "initialValue": {
                    "components": [
                      {
                        "id": 32108,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31575,
                        "src": "8369:6:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PooledToken_$28700_storage",
                          "typeString": "struct SwapUtils.PooledToken storage ref"
                        }
                      },
                      {
                        "id": 32109,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31578,
                        "src": "8377:6:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PooledToken_$28700_storage",
                          "typeString": "struct SwapUtils.PooledToken storage ref"
                        }
                      }
                    ],
                    "id": 32110,
                    "isConstant": false,
                    "isInlineArray": true,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "8368:16:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_PooledToken_$28700_memory_ptr_$2_memory_ptr",
                      "typeString": "struct SwapUtils.PooledToken memory[2] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8326:58:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 32114,
                        "name": "tokens_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32107,
                        "src": "8427:7:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_PooledToken_$28700_memory_ptr_$2_memory_ptr",
                          "typeString": "struct SwapUtils.PooledToken memory[2] memory"
                        }
                      },
                      {
                        "id": 32115,
                        "name": "_amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32086,
                        "src": "8436:8:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$2_calldata_ptr",
                          "typeString": "uint256[2] calldata"
                        }
                      },
                      {
                        "id": 32116,
                        "name": "_minToMint",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32088,
                        "src": "8446:10:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 32117,
                        "name": "amplificationParams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31572,
                        "src": "8458:19:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Amplification_$31139_storage",
                          "typeString": "struct SwapUtils.Amplification storage ref"
                        }
                      },
                      {
                        "id": 32118,
                        "name": "feeParams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31569,
                        "src": "8479:9:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_FeeParams_$28694_storage",
                          "typeString": "struct SwapUtils.FeeParams storage ref"
                        }
                      },
                      {
                        "id": 32119,
                        "name": "lpToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31582,
                        "src": "8490:7:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LiquidityPoolToken_$28239",
                          "typeString": "contract LiquidityPoolToken"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_struct$_PooledToken_$28700_memory_ptr_$2_memory_ptr",
                          "typeString": "struct SwapUtils.PooledToken memory[2] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$2_calldata_ptr",
                          "typeString": "uint256[2] calldata"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_struct$_Amplification_$31139_storage",
                          "typeString": "struct SwapUtils.Amplification storage ref"
                        },
                        {
                          "typeIdentifier": "t_struct$_FeeParams_$28694_storage",
                          "typeString": "struct SwapUtils.FeeParams storage ref"
                        },
                        {
                          "typeIdentifier": "t_contract$_LiquidityPoolToken_$28239",
                          "typeString": "contract LiquidityPoolToken"
                        }
                      ],
                      "expression": {
                        "id": 32112,
                        "name": "SwapUtils",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31522,
                        "src": "8404:9:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SwapUtils_$31522_$",
                          "typeString": "type(library SwapUtils)"
                        }
                      },
                      "id": 32113,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8414:12:40",
                      "memberName": "addLiquidity",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29380,
                      "src": "8404:22:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_nonpayable$_t_array$_t_struct$_PooledToken_$28700_memory_ptr_$2_memory_ptr_$_t_array$_t_uint256_$2_memory_ptr_$_t_uint256_$_t_struct$_Amplification_$31139_storage_ptr_$_t_struct$_FeeParams_$28694_storage_ptr_$_t_contract$_LiquidityPoolToken_$28239_$returns$_t_uint256_$",
                        "typeString": "function (struct SwapUtils.PooledToken memory[2] memory,uint256[2] memory,uint256,struct SwapUtils.Amplification storage pointer,struct SwapUtils.FeeParams storage pointer,contract LiquidityPoolToken) returns (uint256)"
                      }
                    },
                    "id": 32120,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8404:94:40",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 32100,
                  "id": 32121,
                  "nodeType": "Return",
                  "src": "8397:101:40"
                }
              ]
            },
            "baseFunctions": [
              28093
            ],
            "documentation": {
              "id": 32082,
              "nodeType": "StructuredDocumentation",
              "src": "8083:27:40",
              "text": "@inheritdoc ITenderSwap"
            },
            "functionSelector": "46eda749",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 32094,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 32093,
                  "name": "nonReentrant",
                  "nameLocations": [
                    "8259:12:40"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 24031,
                  "src": "8259:12:40"
                },
                "nodeType": "ModifierInvocation",
                "src": "8259:12:40"
              },
              {
                "arguments": [
                  {
                    "id": 32096,
                    "name": "_deadline",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 32090,
                    "src": "8286:9:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 32097,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 32095,
                  "name": "deadlineCheck",
                  "nameLocations": [
                    "8272:13:40"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31593,
                  "src": "8272:13:40"
                },
                "nodeType": "ModifierInvocation",
                "src": "8272:24:40"
              }
            ],
            "name": "addLiquidity",
            "nameLocation": "8125:12:40",
            "overrides": {
              "id": 32092,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8250:8:40"
            },
            "parameters": {
              "id": 32091,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32086,
                  "mutability": "mutable",
                  "name": "_amounts",
                  "nameLocation": "8168:8:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 32123,
                  "src": "8148:28:40",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_calldata_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 32083,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "8148:7:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 32085,
                    "length": {
                      "hexValue": "32",
                      "id": 32084,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8156:1:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "8148:10:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 32088,
                  "mutability": "mutable",
                  "name": "_minToMint",
                  "nameLocation": "8195:10:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 32123,
                  "src": "8187:18:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32087,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8187:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 32090,
                  "mutability": "mutable",
                  "name": "_deadline",
                  "nameLocation": "8224:9:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 32123,
                  "src": "8216:17:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32089,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8216:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8137:103:40"
            },
            "returnParameters": {
              "id": 32100,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32099,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 32123,
                  "src": "8306:7:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32098,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8306:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8305:9:40"
            },
            "scope": 32355,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 32165,
            "nodeType": "FunctionDefinition",
            "src": "8547:368:40",
            "nodes": [],
            "body": {
              "id": 32164,
              "nodeType": "Block",
              "src": "8755:160:40",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    32151
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 32151,
                      "mutability": "mutable",
                      "name": "tokens_",
                      "nameLocation": "8798:7:40",
                      "nodeType": "VariableDeclaration",
                      "scope": 32164,
                      "src": "8766:39:40",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_PooledToken_$28700_memory_ptr_$2_memory_ptr",
                        "typeString": "struct SwapUtils.PooledToken[2]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 32149,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 32148,
                            "name": "SwapUtils.PooledToken",
                            "nameLocations": [
                              "8766:9:40",
                              "8776:11:40"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 28700,
                            "src": "8766:21:40"
                          },
                          "referencedDeclaration": 28700,
                          "src": "8766:21:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PooledToken_$28700_storage_ptr",
                            "typeString": "struct SwapUtils.PooledToken"
                          }
                        },
                        "id": 32150,
                        "length": {
                          "hexValue": "32",
                          "id": 32147,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8788:1:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "nodeType": "ArrayTypeName",
                        "src": "8766:24:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_PooledToken_$28700_storage_$2_storage_ptr",
                          "typeString": "struct SwapUtils.PooledToken[2]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 32155,
                  "initialValue": {
                    "components": [
                      {
                        "id": 32152,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31575,
                        "src": "8809:6:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PooledToken_$28700_storage",
                          "typeString": "struct SwapUtils.PooledToken storage ref"
                        }
                      },
                      {
                        "id": 32153,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31578,
                        "src": "8817:6:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PooledToken_$28700_storage",
                          "typeString": "struct SwapUtils.PooledToken storage ref"
                        }
                      }
                    ],
                    "id": 32154,
                    "isConstant": false,
                    "isInlineArray": true,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "8808:16:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_PooledToken_$28700_memory_ptr_$2_memory_ptr",
                      "typeString": "struct SwapUtils.PooledToken memory[2] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8766:58:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 32158,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32126,
                        "src": "8870:6:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 32159,
                        "name": "tokens_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32151,
                        "src": "8878:7:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_PooledToken_$28700_memory_ptr_$2_memory_ptr",
                          "typeString": "struct SwapUtils.PooledToken memory[2] memory"
                        }
                      },
                      {
                        "id": 32160,
                        "name": "minAmounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32130,
                        "src": "8887:10:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$2_calldata_ptr",
                          "typeString": "uint256[2] calldata"
                        }
                      },
                      {
                        "id": 32161,
                        "name": "lpToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31582,
                        "src": "8899:7:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LiquidityPoolToken_$28239",
                          "typeString": "contract LiquidityPoolToken"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_struct$_PooledToken_$28700_memory_ptr_$2_memory_ptr",
                          "typeString": "struct SwapUtils.PooledToken memory[2] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$2_calldata_ptr",
                          "typeString": "uint256[2] calldata"
                        },
                        {
                          "typeIdentifier": "t_contract$_LiquidityPoolToken_$28239",
                          "typeString": "contract LiquidityPoolToken"
                        }
                      ],
                      "expression": {
                        "id": 32156,
                        "name": "SwapUtils",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31522,
                        "src": "8844:9:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SwapUtils_$31522_$",
                          "typeString": "type(library SwapUtils)"
                        }
                      },
                      "id": 32157,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8854:15:40",
                      "memberName": "removeLiquidity",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29476,
                      "src": "8844:25:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_nonpayable$_t_uint256_$_t_array$_t_struct$_PooledToken_$28700_memory_ptr_$2_memory_ptr_$_t_array$_t_uint256_$2_memory_ptr_$_t_contract$_LiquidityPoolToken_$28239_$returns$_t_array$_t_uint256_$2_memory_ptr_$",
                        "typeString": "function (uint256,struct SwapUtils.PooledToken memory[2] memory,uint256[2] memory,contract LiquidityPoolToken) returns (uint256[2] memory)"
                      }
                    },
                    "id": 32162,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8844:63:40",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                      "typeString": "uint256[2] memory"
                    }
                  },
                  "functionReturnParameters": 32144,
                  "id": 32163,
                  "nodeType": "Return",
                  "src": "8837:70:40"
                }
              ]
            },
            "baseFunctions": [
              28109
            ],
            "documentation": {
              "id": 32124,
              "nodeType": "StructuredDocumentation",
              "src": "8514:27:40",
              "text": "@inheritdoc ITenderSwap"
            },
            "functionSelector": "d6f0df62",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 32136,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 32135,
                  "name": "nonReentrant",
                  "nameLocations": [
                    "8690:12:40"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 24031,
                  "src": "8690:12:40"
                },
                "nodeType": "ModifierInvocation",
                "src": "8690:12:40"
              },
              {
                "arguments": [
                  {
                    "id": 32138,
                    "name": "deadline",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 32132,
                    "src": "8717:8:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 32139,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 32137,
                  "name": "deadlineCheck",
                  "nameLocations": [
                    "8703:13:40"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31593,
                  "src": "8703:13:40"
                },
                "nodeType": "ModifierInvocation",
                "src": "8703:23:40"
              }
            ],
            "name": "removeLiquidity",
            "nameLocation": "8556:15:40",
            "overrides": {
              "id": 32134,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8681:8:40"
            },
            "parameters": {
              "id": 32133,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32126,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "8590:6:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 32165,
                  "src": "8582:14:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32125,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8582:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 32130,
                  "mutability": "mutable",
                  "name": "minAmounts",
                  "nameLocation": "8627:10:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 32165,
                  "src": "8607:30:40",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_calldata_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 32127,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "8607:7:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 32129,
                    "length": {
                      "hexValue": "32",
                      "id": 32128,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8615:1:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "8607:10:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 32132,
                  "mutability": "mutable",
                  "name": "deadline",
                  "nameLocation": "8656:8:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 32165,
                  "src": "8648:16:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32131,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8648:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8571:100:40"
            },
            "returnParameters": {
              "id": 32144,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32143,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 32165,
                  "src": "8736:17:40",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 32140,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "8736:7:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 32142,
                    "length": {
                      "hexValue": "32",
                      "id": 32141,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8744:1:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "8736:10:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8735:19:40"
            },
            "scope": 32355,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 32216,
            "nodeType": "FunctionDefinition",
            "src": "8956:958:40",
            "nodes": [],
            "body": {
              "id": 32215,
              "nodeType": "Block",
              "src": "9189:725:40",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_contract$_IERC20_$27175",
                      "typeString": "contract IERC20"
                    },
                    "id": 32189,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 32186,
                      "name": "_tokenReceive",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32171,
                      "src": "9204:13:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$27175",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 32187,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31575,
                        "src": "9221:6:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PooledToken_$28700_storage",
                          "typeString": "struct SwapUtils.PooledToken storage ref"
                        }
                      },
                      "id": 32188,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9228:5:40",
                      "memberName": "token",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28697,
                      "src": "9221:12:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$27175",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "9204:29:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 32213,
                    "nodeType": "Block",
                    "src": "9574:333:40",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 32204,
                              "name": "_tokenAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32168,
                              "src": "9669:12:40",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 32205,
                              "name": "token1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31578,
                              "src": "9704:6:40",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PooledToken_$28700_storage",
                                "typeString": "struct SwapUtils.PooledToken storage ref"
                              }
                            },
                            {
                              "id": 32206,
                              "name": "token0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31575,
                              "src": "9733:6:40",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PooledToken_$28700_storage",
                                "typeString": "struct SwapUtils.PooledToken storage ref"
                              }
                            },
                            {
                              "id": 32207,
                              "name": "_minAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32173,
                              "src": "9762:10:40",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 32208,
                              "name": "amplificationParams",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31572,
                              "src": "9795:19:40",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Amplification_$31139_storage",
                                "typeString": "struct SwapUtils.Amplification storage ref"
                              }
                            },
                            {
                              "id": 32209,
                              "name": "feeParams",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31569,
                              "src": "9837:9:40",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_FeeParams_$28694_storage",
                                "typeString": "struct SwapUtils.FeeParams storage ref"
                              }
                            },
                            {
                              "id": 32210,
                              "name": "lpToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31582,
                              "src": "9869:7:40",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_LiquidityPoolToken_$28239",
                                "typeString": "contract LiquidityPoolToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_struct$_PooledToken_$28700_storage",
                                "typeString": "struct SwapUtils.PooledToken storage ref"
                              },
                              {
                                "typeIdentifier": "t_struct$_PooledToken_$28700_storage",
                                "typeString": "struct SwapUtils.PooledToken storage ref"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_struct$_Amplification_$31139_storage",
                                "typeString": "struct SwapUtils.Amplification storage ref"
                              },
                              {
                                "typeIdentifier": "t_struct$_FeeParams_$28694_storage",
                                "typeString": "struct SwapUtils.FeeParams storage ref"
                              },
                              {
                                "typeIdentifier": "t_contract$_LiquidityPoolToken_$28239",
                                "typeString": "contract LiquidityPoolToken"
                              }
                            ],
                            "expression": {
                              "id": 32202,
                              "name": "SwapUtils",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31522,
                              "src": "9613:9:40",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_SwapUtils_$31522_$",
                                "typeString": "type(library SwapUtils)"
                              }
                            },
                            "id": 32203,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "9623:23:40",
                            "memberName": "removeLiquidityOneToken",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 29567,
                            "src": "9613:33:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_delegatecall_nonpayable$_t_uint256_$_t_struct$_PooledToken_$28700_storage_ptr_$_t_struct$_PooledToken_$28700_storage_ptr_$_t_uint256_$_t_struct$_Amplification_$31139_storage_ptr_$_t_struct$_FeeParams_$28694_storage_ptr_$_t_contract$_LiquidityPoolToken_$28239_$returns$_t_uint256_$",
                              "typeString": "function (uint256,struct SwapUtils.PooledToken storage pointer,struct SwapUtils.PooledToken storage pointer,uint256,struct SwapUtils.Amplification storage pointer,struct SwapUtils.FeeParams storage pointer,contract LiquidityPoolToken) returns (uint256)"
                            }
                          },
                          "id": 32211,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9613:282:40",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 32185,
                        "id": 32212,
                        "nodeType": "Return",
                        "src": "9589:306:40"
                      }
                    ]
                  },
                  "id": 32214,
                  "nodeType": "IfStatement",
                  "src": "9200:707:40",
                  "trueBody": {
                    "id": 32201,
                    "nodeType": "Block",
                    "src": "9235:333:40",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 32192,
                              "name": "_tokenAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32168,
                              "src": "9330:12:40",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 32193,
                              "name": "token0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31575,
                              "src": "9365:6:40",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PooledToken_$28700_storage",
                                "typeString": "struct SwapUtils.PooledToken storage ref"
                              }
                            },
                            {
                              "id": 32194,
                              "name": "token1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31578,
                              "src": "9394:6:40",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PooledToken_$28700_storage",
                                "typeString": "struct SwapUtils.PooledToken storage ref"
                              }
                            },
                            {
                              "id": 32195,
                              "name": "_minAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32173,
                              "src": "9423:10:40",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 32196,
                              "name": "amplificationParams",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31572,
                              "src": "9456:19:40",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Amplification_$31139_storage",
                                "typeString": "struct SwapUtils.Amplification storage ref"
                              }
                            },
                            {
                              "id": 32197,
                              "name": "feeParams",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31569,
                              "src": "9498:9:40",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_FeeParams_$28694_storage",
                                "typeString": "struct SwapUtils.FeeParams storage ref"
                              }
                            },
                            {
                              "id": 32198,
                              "name": "lpToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31582,
                              "src": "9530:7:40",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_LiquidityPoolToken_$28239",
                                "typeString": "contract LiquidityPoolToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_struct$_PooledToken_$28700_storage",
                                "typeString": "struct SwapUtils.PooledToken storage ref"
                              },
                              {
                                "typeIdentifier": "t_struct$_PooledToken_$28700_storage",
                                "typeString": "struct SwapUtils.PooledToken storage ref"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_struct$_Amplification_$31139_storage",
                                "typeString": "struct SwapUtils.Amplification storage ref"
                              },
                              {
                                "typeIdentifier": "t_struct$_FeeParams_$28694_storage",
                                "typeString": "struct SwapUtils.FeeParams storage ref"
                              },
                              {
                                "typeIdentifier": "t_contract$_LiquidityPoolToken_$28239",
                                "typeString": "contract LiquidityPoolToken"
                              }
                            ],
                            "expression": {
                              "id": 32190,
                              "name": "SwapUtils",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31522,
                              "src": "9274:9:40",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_SwapUtils_$31522_$",
                                "typeString": "type(library SwapUtils)"
                              }
                            },
                            "id": 32191,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "9284:23:40",
                            "memberName": "removeLiquidityOneToken",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 29567,
                            "src": "9274:33:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_delegatecall_nonpayable$_t_uint256_$_t_struct$_PooledToken_$28700_storage_ptr_$_t_struct$_PooledToken_$28700_storage_ptr_$_t_uint256_$_t_struct$_Amplification_$31139_storage_ptr_$_t_struct$_FeeParams_$28694_storage_ptr_$_t_contract$_LiquidityPoolToken_$28239_$returns$_t_uint256_$",
                              "typeString": "function (uint256,struct SwapUtils.PooledToken storage pointer,struct SwapUtils.PooledToken storage pointer,uint256,struct SwapUtils.Amplification storage pointer,struct SwapUtils.FeeParams storage pointer,contract LiquidityPoolToken) returns (uint256)"
                            }
                          },
                          "id": 32199,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9274:282:40",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 32185,
                        "id": 32200,
                        "nodeType": "Return",
                        "src": "9250:306:40"
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              28124
            ],
            "documentation": {
              "id": 32166,
              "nodeType": "StructuredDocumentation",
              "src": "8923:27:40",
              "text": "@inheritdoc ITenderSwap"
            },
            "functionSelector": "ce1fdb8b",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 32179,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 32178,
                  "name": "nonReentrant",
                  "nameLocations": [
                    "9133:12:40"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 24031,
                  "src": "9133:12:40"
                },
                "nodeType": "ModifierInvocation",
                "src": "9133:12:40"
              },
              {
                "arguments": [
                  {
                    "id": 32181,
                    "name": "_deadline",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 32175,
                    "src": "9160:9:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 32182,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 32180,
                  "name": "deadlineCheck",
                  "nameLocations": [
                    "9146:13:40"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31593,
                  "src": "9146:13:40"
                },
                "nodeType": "ModifierInvocation",
                "src": "9146:24:40"
              }
            ],
            "name": "removeLiquidityOneToken",
            "nameLocation": "8965:23:40",
            "overrides": {
              "id": 32177,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "9124:8:40"
            },
            "parameters": {
              "id": 32176,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32168,
                  "mutability": "mutable",
                  "name": "_tokenAmount",
                  "nameLocation": "9007:12:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 32216,
                  "src": "8999:20:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32167,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8999:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 32171,
                  "mutability": "mutable",
                  "name": "_tokenReceive",
                  "nameLocation": "9037:13:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 32216,
                  "src": "9030:20:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$27175",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 32170,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 32169,
                      "name": "IERC20",
                      "nameLocations": [
                        "9030:6:40"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 27175,
                      "src": "9030:6:40"
                    },
                    "referencedDeclaration": 27175,
                    "src": "9030:6:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$27175",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 32173,
                  "mutability": "mutable",
                  "name": "_minAmount",
                  "nameLocation": "9069:10:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 32216,
                  "src": "9061:18:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32172,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9061:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 32175,
                  "mutability": "mutable",
                  "name": "_deadline",
                  "nameLocation": "9098:9:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 32216,
                  "src": "9090:17:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32174,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9090:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8988:126:40"
            },
            "returnParameters": {
              "id": 32185,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32184,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 32216,
                  "src": "9180:7:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32183,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9180:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9179:9:40"
            },
            "scope": 32355,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 32258,
            "nodeType": "FunctionDefinition",
            "src": "9955:552:40",
            "nodes": [],
            "body": {
              "id": 32257,
              "nodeType": "Block",
              "src": "10170:337:40",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    32242
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 32242,
                      "mutability": "mutable",
                      "name": "tokens_",
                      "nameLocation": "10213:7:40",
                      "nodeType": "VariableDeclaration",
                      "scope": 32257,
                      "src": "10181:39:40",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_PooledToken_$28700_memory_ptr_$2_memory_ptr",
                        "typeString": "struct SwapUtils.PooledToken[2]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 32240,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 32239,
                            "name": "SwapUtils.PooledToken",
                            "nameLocations": [
                              "10181:9:40",
                              "10191:11:40"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 28700,
                            "src": "10181:21:40"
                          },
                          "referencedDeclaration": 28700,
                          "src": "10181:21:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PooledToken_$28700_storage_ptr",
                            "typeString": "struct SwapUtils.PooledToken"
                          }
                        },
                        "id": 32241,
                        "length": {
                          "hexValue": "32",
                          "id": 32238,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10203:1:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "nodeType": "ArrayTypeName",
                        "src": "10181:24:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_PooledToken_$28700_storage_$2_storage_ptr",
                          "typeString": "struct SwapUtils.PooledToken[2]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 32246,
                  "initialValue": {
                    "components": [
                      {
                        "id": 32243,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31575,
                        "src": "10224:6:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PooledToken_$28700_storage",
                          "typeString": "struct SwapUtils.PooledToken storage ref"
                        }
                      },
                      {
                        "id": 32244,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31578,
                        "src": "10232:6:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PooledToken_$28700_storage",
                          "typeString": "struct SwapUtils.PooledToken storage ref"
                        }
                      }
                    ],
                    "id": 32245,
                    "isConstant": false,
                    "isInlineArray": true,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "10223:16:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_PooledToken_$28700_memory_ptr_$2_memory_ptr",
                      "typeString": "struct SwapUtils.PooledToken memory[2] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10181:58:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 32249,
                        "name": "tokens_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32242,
                        "src": "10325:7:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_PooledToken_$28700_memory_ptr_$2_memory_ptr",
                          "typeString": "struct SwapUtils.PooledToken memory[2] memory"
                        }
                      },
                      {
                        "id": 32250,
                        "name": "_amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32221,
                        "src": "10351:8:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$2_calldata_ptr",
                          "typeString": "uint256[2] calldata"
                        }
                      },
                      {
                        "id": 32251,
                        "name": "_maxBurnAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32223,
                        "src": "10378:14:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 32252,
                        "name": "amplificationParams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31572,
                        "src": "10411:19:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Amplification_$31139_storage",
                          "typeString": "struct SwapUtils.Amplification storage ref"
                        }
                      },
                      {
                        "id": 32253,
                        "name": "feeParams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31569,
                        "src": "10449:9:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_FeeParams_$28694_storage",
                          "typeString": "struct SwapUtils.FeeParams storage ref"
                        }
                      },
                      {
                        "id": 32254,
                        "name": "lpToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31582,
                        "src": "10477:7:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LiquidityPoolToken_$28239",
                          "typeString": "contract LiquidityPoolToken"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_struct$_PooledToken_$28700_memory_ptr_$2_memory_ptr",
                          "typeString": "struct SwapUtils.PooledToken memory[2] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$2_calldata_ptr",
                          "typeString": "uint256[2] calldata"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_struct$_Amplification_$31139_storage",
                          "typeString": "struct SwapUtils.Amplification storage ref"
                        },
                        {
                          "typeIdentifier": "t_struct$_FeeParams_$28694_storage",
                          "typeString": "struct SwapUtils.FeeParams storage ref"
                        },
                        {
                          "typeIdentifier": "t_contract$_LiquidityPoolToken_$28239",
                          "typeString": "contract LiquidityPoolToken"
                        }
                      ],
                      "expression": {
                        "id": 32247,
                        "name": "SwapUtils",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31522,
                        "src": "10272:9:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SwapUtils_$31522_$",
                          "typeString": "type(library SwapUtils)"
                        }
                      },
                      "id": 32248,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10282:24:40",
                      "memberName": "removeLiquidityImbalance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29996,
                      "src": "10272:34:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_nonpayable$_t_array$_t_struct$_PooledToken_$28700_memory_ptr_$2_memory_ptr_$_t_array$_t_uint256_$2_memory_ptr_$_t_uint256_$_t_struct$_Amplification_$31139_storage_ptr_$_t_struct$_FeeParams_$28694_storage_ptr_$_t_contract$_LiquidityPoolToken_$28239_$returns$_t_uint256_$",
                        "typeString": "function (struct SwapUtils.PooledToken memory[2] memory,uint256[2] memory,uint256,struct SwapUtils.Amplification storage pointer,struct SwapUtils.FeeParams storage pointer,contract LiquidityPoolToken) returns (uint256)"
                      }
                    },
                    "id": 32255,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10272:227:40",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 32235,
                  "id": 32256,
                  "nodeType": "Return",
                  "src": "10252:247:40"
                }
              ]
            },
            "baseFunctions": [
              28138
            ],
            "documentation": {
              "id": 32217,
              "nodeType": "StructuredDocumentation",
              "src": "9922:27:40",
              "text": "@inheritdoc ITenderSwap"
            },
            "functionSelector": "bfc65c9b",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 32229,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 32228,
                  "name": "nonReentrant",
                  "nameLocations": [
                    "10114:12:40"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 24031,
                  "src": "10114:12:40"
                },
                "nodeType": "ModifierInvocation",
                "src": "10114:12:40"
              },
              {
                "arguments": [
                  {
                    "id": 32231,
                    "name": "_deadline",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 32225,
                    "src": "10141:9:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 32232,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 32230,
                  "name": "deadlineCheck",
                  "nameLocations": [
                    "10127:13:40"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31593,
                  "src": "10127:13:40"
                },
                "nodeType": "ModifierInvocation",
                "src": "10127:24:40"
              }
            ],
            "name": "removeLiquidityImbalance",
            "nameLocation": "9964:24:40",
            "overrides": {
              "id": 32227,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "10105:8:40"
            },
            "parameters": {
              "id": 32226,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32221,
                  "mutability": "mutable",
                  "name": "_amounts",
                  "nameLocation": "10019:8:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 32258,
                  "src": "9999:28:40",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_calldata_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 32218,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "9999:7:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 32220,
                    "length": {
                      "hexValue": "32",
                      "id": 32219,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10007:1:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "9999:10:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 32223,
                  "mutability": "mutable",
                  "name": "_maxBurnAmount",
                  "nameLocation": "10046:14:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 32258,
                  "src": "10038:22:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32222,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10038:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 32225,
                  "mutability": "mutable",
                  "name": "_deadline",
                  "nameLocation": "10079:9:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 32258,
                  "src": "10071:17:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32224,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10071:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9988:107:40"
            },
            "returnParameters": {
              "id": 32235,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32234,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 32258,
                  "src": "10161:7:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32233,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10161:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10160:9:40"
            },
            "scope": 32355,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 32274,
            "nodeType": "FunctionDefinition",
            "src": "10581:123:40",
            "nodes": [],
            "body": {
              "id": 32273,
              "nodeType": "Block",
              "src": "10651:53:40",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 32270,
                        "name": "newAdminFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32261,
                        "src": "10684:11:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 32267,
                        "name": "feeParams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31569,
                        "src": "10662:9:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_FeeParams_$28694_storage",
                          "typeString": "struct SwapUtils.FeeParams storage ref"
                        }
                      },
                      "id": 32269,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10672:11:40",
                      "memberName": "setAdminFee",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31494,
                      "src": "10662:21:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_nonpayable$_t_struct$_FeeParams_$28694_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_struct$_FeeParams_$28694_storage_ptr_$",
                        "typeString": "function (struct SwapUtils.FeeParams storage pointer,uint256)"
                      }
                    },
                    "id": 32271,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10662:34:40",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32272,
                  "nodeType": "ExpressionStatement",
                  "src": "10662:34:40"
                }
              ]
            },
            "baseFunctions": [
              28144
            ],
            "documentation": {
              "id": 32259,
              "nodeType": "StructuredDocumentation",
              "src": "10548:27:40",
              "text": "@inheritdoc ITenderSwap"
            },
            "functionSelector": "8beb60b6",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 32265,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 32264,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "10641:9:40"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 23732,
                  "src": "10641:9:40"
                },
                "nodeType": "ModifierInvocation",
                "src": "10641:9:40"
              }
            ],
            "name": "setAdminFee",
            "nameLocation": "10590:11:40",
            "overrides": {
              "id": 32263,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "10632:8:40"
            },
            "parameters": {
              "id": 32262,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32261,
                  "mutability": "mutable",
                  "name": "newAdminFee",
                  "nameLocation": "10610:11:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 32274,
                  "src": "10602:19:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32260,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10602:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10601:21:40"
            },
            "returnParameters": {
              "id": 32266,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10651:0:40"
            },
            "scope": 32355,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 32290,
            "nodeType": "FunctionDefinition",
            "src": "10745:119:40",
            "nodes": [],
            "body": {
              "id": 32289,
              "nodeType": "Block",
              "src": "10813:51:40",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 32286,
                        "name": "newSwapFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32277,
                        "src": "10845:10:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 32283,
                        "name": "feeParams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31569,
                        "src": "10824:9:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_FeeParams_$28694_storage",
                          "typeString": "struct SwapUtils.FeeParams storage ref"
                        }
                      },
                      "id": 32285,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10834:10:40",
                      "memberName": "setSwapFee",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31521,
                      "src": "10824:20:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_nonpayable$_t_struct$_FeeParams_$28694_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_struct$_FeeParams_$28694_storage_ptr_$",
                        "typeString": "function (struct SwapUtils.FeeParams storage pointer,uint256)"
                      }
                    },
                    "id": 32287,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10824:32:40",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32288,
                  "nodeType": "ExpressionStatement",
                  "src": "10824:32:40"
                }
              ]
            },
            "baseFunctions": [
              28150
            ],
            "documentation": {
              "id": 32275,
              "nodeType": "StructuredDocumentation",
              "src": "10712:27:40",
              "text": "@inheritdoc ITenderSwap"
            },
            "functionSelector": "34e19907",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 32281,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 32280,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "10803:9:40"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 23732,
                  "src": "10803:9:40"
                },
                "nodeType": "ModifierInvocation",
                "src": "10803:9:40"
              }
            ],
            "name": "setSwapFee",
            "nameLocation": "10754:10:40",
            "overrides": {
              "id": 32279,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "10794:8:40"
            },
            "parameters": {
              "id": 32278,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32277,
                  "mutability": "mutable",
                  "name": "newSwapFee",
                  "nameLocation": "10773:10:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 32290,
                  "src": "10765:18:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32276,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10765:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10764:20:40"
            },
            "returnParameters": {
              "id": 32282,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10813:0:40"
            },
            "scope": 32355,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 32309,
            "nodeType": "FunctionDefinition",
            "src": "10905:145:40",
            "nodes": [],
            "body": {
              "id": 32308,
              "nodeType": "Block",
              "src": "10985:65:40",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 32304,
                        "name": "futureA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32293,
                        "src": "11022:7:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 32305,
                        "name": "futureTime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32295,
                        "src": "11031:10:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 32301,
                        "name": "amplificationParams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31572,
                        "src": "10996:19:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Amplification_$31139_storage",
                          "typeString": "struct SwapUtils.Amplification storage ref"
                        }
                      },
                      "id": 32303,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11016:5:40",
                      "memberName": "rampA",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31381,
                      "src": "10996:25:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_nonpayable$_t_struct$_Amplification_$31139_storage_ptr_$_t_uint256_$_t_uint256_$returns$__$attached_to$_t_struct$_Amplification_$31139_storage_ptr_$",
                        "typeString": "function (struct SwapUtils.Amplification storage pointer,uint256,uint256)"
                      }
                    },
                    "id": 32306,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10996:46:40",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32307,
                  "nodeType": "ExpressionStatement",
                  "src": "10996:46:40"
                }
              ]
            },
            "baseFunctions": [
              28158
            ],
            "documentation": {
              "id": 32291,
              "nodeType": "StructuredDocumentation",
              "src": "10872:27:40",
              "text": "@inheritdoc ITenderSwap"
            },
            "functionSelector": "593d132c",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 32299,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 32298,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "10975:9:40"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 23732,
                  "src": "10975:9:40"
                },
                "nodeType": "ModifierInvocation",
                "src": "10975:9:40"
              }
            ],
            "name": "rampA",
            "nameLocation": "10914:5:40",
            "overrides": {
              "id": 32297,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "10966:8:40"
            },
            "parameters": {
              "id": 32296,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32293,
                  "mutability": "mutable",
                  "name": "futureA",
                  "nameLocation": "10928:7:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 32309,
                  "src": "10920:15:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32292,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10920:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 32295,
                  "mutability": "mutable",
                  "name": "futureTime",
                  "nameLocation": "10945:10:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 32309,
                  "src": "10937:18:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32294,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10937:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10919:37:40"
            },
            "returnParameters": {
              "id": 32300,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10985:0:40"
            },
            "scope": 32355,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 32322,
            "nodeType": "FunctionDefinition",
            "src": "11091:99:40",
            "nodes": [],
            "body": {
              "id": 32321,
              "nodeType": "Block",
              "src": "11140:50:40",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 32316,
                        "name": "amplificationParams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31572,
                        "src": "11151:19:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Amplification_$31139_storage",
                          "typeString": "struct SwapUtils.Amplification storage ref"
                        }
                      },
                      "id": 32318,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11171:9:40",
                      "memberName": "stopRampA",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31436,
                      "src": "11151:29:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_nonpayable$_t_struct$_Amplification_$31139_storage_ptr_$returns$__$attached_to$_t_struct$_Amplification_$31139_storage_ptr_$",
                        "typeString": "function (struct SwapUtils.Amplification storage pointer)"
                      }
                    },
                    "id": 32319,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11151:31:40",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32320,
                  "nodeType": "ExpressionStatement",
                  "src": "11151:31:40"
                }
              ]
            },
            "baseFunctions": [
              28162
            ],
            "documentation": {
              "id": 32310,
              "nodeType": "StructuredDocumentation",
              "src": "11058:27:40",
              "text": "@inheritdoc ITenderSwap"
            },
            "functionSelector": "c4db7fa0",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 32314,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 32313,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "11130:9:40"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 23732,
                  "src": "11130:9:40"
                },
                "nodeType": "ModifierInvocation",
                "src": "11130:9:40"
              }
            ],
            "name": "stopRampA",
            "nameLocation": "11100:9:40",
            "overrides": {
              "id": 32312,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "11121:8:40"
            },
            "parameters": {
              "id": 32311,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11109:2:40"
            },
            "returnParameters": {
              "id": 32315,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11140:0:40"
            },
            "scope": 32355,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 32336,
            "nodeType": "FunctionDefinition",
            "src": "11234:133:40",
            "nodes": [],
            "body": {
              "id": 32335,
              "nodeType": "Block",
              "src": "11291:76:40",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 32331,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 32328,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "11310:5:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 32329,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "11316:9:40",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "11310:15:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 32330,
                          "name": "_deadline",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32324,
                          "src": "11329:9:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "11310:28:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "446561646c696e65206e6f74206d6574",
                        "id": 32332,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11340:18:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a167df2a4d2ab6c5ee865e91ee543461cb54682b898fb54f9c2d17424e75a781",
                          "typeString": "literal_string \"Deadline not met\""
                        },
                        "value": "Deadline not met"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a167df2a4d2ab6c5ee865e91ee543461cb54682b898fb54f9c2d17424e75a781",
                          "typeString": "literal_string \"Deadline not met\""
                        }
                      ],
                      "id": 32327,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11302:7:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 32333,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11302:57:40",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32334,
                  "nodeType": "ExpressionStatement",
                  "src": "11302:57:40"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_deadlineCheck",
            "nameLocation": "11243:14:40",
            "parameters": {
              "id": 32325,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32324,
                  "mutability": "mutable",
                  "name": "_deadline",
                  "nameLocation": "11266:9:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 32336,
                  "src": "11258:17:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32323,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11258:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11257:19:40"
            },
            "returnParameters": {
              "id": 32326,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11291:0:40"
            },
            "scope": 32355,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 32354,
            "nodeType": "FunctionDefinition",
            "src": "11408:173:40",
            "nodes": [],
            "body": {
              "id": 32353,
              "nodeType": "Block",
              "src": "11514:67:40",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 32350,
                        "name": "_newOwnner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32339,
                        "src": "11562:10:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 32347,
                        "name": "OwnableUpgradeable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23818,
                        "src": "11525:18:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_OwnableUpgradeable_$23818_$",
                          "typeString": "type(contract OwnableUpgradeable)"
                        }
                      },
                      "id": 32349,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11544:17:40",
                      "memberName": "transferOwnership",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23792,
                      "src": "11525:36:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 32351,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11525:48:40",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32352,
                  "nodeType": "ExpressionStatement",
                  "src": "11525:48:40"
                }
              ]
            },
            "baseFunctions": [
              23792,
              28168
            ],
            "documentation": {
              "id": 32337,
              "nodeType": "StructuredDocumentation",
              "src": "11375:27:40",
              "text": "@inheritdoc ITenderSwap"
            },
            "functionSelector": "f2fde38b",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 32345,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 32344,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "11504:9:40"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 23732,
                  "src": "11504:9:40"
                },
                "nodeType": "ModifierInvocation",
                "src": "11504:9:40"
              }
            ],
            "name": "transferOwnership",
            "nameLocation": "11417:17:40",
            "overrides": {
              "id": 32343,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 32341,
                  "name": "OwnableUpgradeable",
                  "nameLocations": [
                    "11471:18:40"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 23818,
                  "src": "11471:18:40"
                },
                {
                  "id": 32342,
                  "name": "ITenderSwap",
                  "nameLocations": [
                    "11491:11:40"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 28169,
                  "src": "11491:11:40"
                }
              ],
              "src": "11462:41:40"
            },
            "parameters": {
              "id": 32340,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32339,
                  "mutability": "mutable",
                  "name": "_newOwnner",
                  "nameLocation": "11443:10:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 32354,
                  "src": "11435:18:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 32338,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11435:7:40",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11434:20:40"
            },
            "returnParameters": {
              "id": 32346,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11514:0:40"
            },
            "scope": 32355,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 31545,
              "name": "OwnableUpgradeable",
              "nameLocations": [
                "1231:18:40"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 23818,
              "src": "1231:18:40"
            },
            "id": 31546,
            "nodeType": "InheritanceSpecifier",
            "src": "1231:18:40"
          },
          {
            "baseName": {
              "id": 31547,
              "name": "ReentrancyGuardUpgradeable",
              "nameLocations": [
                "1251:26:40"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 24060,
              "src": "1251:26:40"
            },
            "id": 31548,
            "nodeType": "InheritanceSpecifier",
            "src": "1251:26:40"
          },
          {
            "baseName": {
              "id": 31549,
              "name": "ITenderSwap",
              "nameLocations": [
                "1279:11:40"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 28169,
              "src": "1279:11:40"
            },
            "id": 31550,
            "nodeType": "InheritanceSpecifier",
            "src": "1279:11:40"
          },
          {
            "baseName": {
              "id": 31551,
              "name": "Multicall",
              "nameLocations": [
                "1292:9:40"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 28456,
              "src": "1292:9:40"
            },
            "id": 31552,
            "nodeType": "InheritanceSpecifier",
            "src": "1292:9:40"
          },
          {
            "baseName": {
              "id": 31553,
              "name": "SelfPermit",
              "nameLocations": [
                "1303:10:40"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 28579,
              "src": "1303:10:40"
            },
            "id": 31554,
            "nodeType": "InheritanceSpecifier",
            "src": "1303:10:40"
          }
        ],
        "canonicalName": "TenderSwap",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 31544,
          "nodeType": "StructuredDocumentation",
          "src": "740:464:40",
          "text": " @title TenderSwap\n @dev TenderSwap is a light-weight StableSwap implementation for two assets.\n See the Curve StableSwap paper for more details (https://curve.fi/files/stableswap-paper.pdf).\n that trade 1:1 with eachother (e.g. USD stablecoins or tenderToken derivatives vs their underlying assets).\n It supports Elastic Supply ERC20 tokens, which are tokens of which the balances can change\n as the total supply of the token 'rebases'."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          32355,
          28579,
          28494,
          28456,
          28375,
          28169,
          24060,
          23818,
          25392,
          23987
        ],
        "name": "TenderSwap",
        "nameLocation": "1217:10:40",
        "scope": 32356,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 40
}