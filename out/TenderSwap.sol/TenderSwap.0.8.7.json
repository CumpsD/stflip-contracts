{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "provider",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256[2]",
          "name": "tokenAmounts",
          "type": "uint256[2]"
        },
        {
          "indexed": false,
          "internalType": "uint256[2]",
          "name": "fees",
          "type": "uint256[2]"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "invariant",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "lpTokenSupply",
          "type": "uint256"
        }
      ],
      "name": "AddLiquidity",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newAdminFee",
          "type": "uint256"
        }
      ],
      "name": "NewAdminFee",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newSwapFee",
          "type": "uint256"
        }
      ],
      "name": "NewSwapFee",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldA",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newA",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "initialTime",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "futureTime",
          "type": "uint256"
        }
      ],
      "name": "RampA",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "provider",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256[2]",
          "name": "tokenAmounts",
          "type": "uint256[2]"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "lpTokenSupply",
          "type": "uint256"
        }
      ],
      "name": "RemoveLiquidity",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "provider",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256[2]",
          "name": "tokenAmounts",
          "type": "uint256[2]"
        },
        {
          "indexed": false,
          "internalType": "uint256[2]",
          "name": "fees",
          "type": "uint256[2]"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "invariant",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "lpTokenSupply",
          "type": "uint256"
        }
      ],
      "name": "RemoveLiquidityImbalance",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "provider",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "lpTokenAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "lpTokenSupply",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "contract IERC20",
          "name": "tokenReceived",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "receivedAmount",
          "type": "uint256"
        }
      ],
      "name": "RemoveLiquidityOne",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "currentA",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        }
      ],
      "name": "StopRampA",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "contract IERC20",
          "name": "tokenSold",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountSold",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountReceived",
          "type": "uint256"
        }
      ],
      "name": "Swap",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[2]",
          "name": "_amounts",
          "type": "uint256[2]"
        },
        {
          "internalType": "uint256",
          "name": "_minToMint",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_deadline",
          "type": "uint256"
        }
      ],
      "name": "addLiquidity",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "amplificationParams",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "initialA",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "futureA",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "initialATime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "futureATime",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "calculateRemoveLiquidity",
      "outputs": [
        {
          "internalType": "uint256[2]",
          "name": "",
          "type": "uint256[2]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenAmount",
          "type": "uint256"
        },
        {
          "internalType": "contract IERC20",
          "name": "tokenReceive",
          "type": "address"
        }
      ],
      "name": "calculateRemoveLiquidityOneToken",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "_tokenFrom",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_dx",
          "type": "uint256"
        }
      ],
      "name": "calculateSwap",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        },
        {
          "internalType": "bool",
          "name": "deposit",
          "type": "bool"
        }
      ],
      "name": "calculateTokenAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feeParams",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "swapFee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "adminFee",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getA",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAPrecise",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getToken0",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getToken0Balance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getToken1",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getToken1Balance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getVirtualPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "_token0",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "_token1",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "lpTokenName",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "lpTokenSymbol",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_a",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_fee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_adminFee",
          "type": "uint256"
        },
        {
          "internalType": "contract LiquidityPoolToken",
          "name": "lpTokenTargetAddress",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lpToken",
      "outputs": [
        {
          "internalType": "contract LiquidityPoolToken",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes[]",
          "name": "_data",
          "type": "bytes[]"
        }
      ],
      "name": "multicall",
      "outputs": [
        {
          "internalType": "bytes[]",
          "name": "results",
          "type": "bytes[]"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "futureA",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "futureTime",
          "type": "uint256"
        }
      ],
      "name": "rampA",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256[2]",
          "name": "minAmounts",
          "type": "uint256[2]"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "name": "removeLiquidity",
      "outputs": [
        {
          "internalType": "uint256[2]",
          "name": "",
          "type": "uint256[2]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[2]",
          "name": "_amounts",
          "type": "uint256[2]"
        },
        {
          "internalType": "uint256",
          "name": "_maxBurnAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_deadline",
          "type": "uint256"
        }
      ],
      "name": "removeLiquidityImbalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenAmount",
          "type": "uint256"
        },
        {
          "internalType": "contract IERC20",
          "name": "_tokenReceive",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_minAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_deadline",
          "type": "uint256"
        }
      ],
      "name": "removeLiquidityOneToken",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_deadline",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "_v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "_r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "_s",
          "type": "bytes32"
        }
      ],
      "name": "selfPermit",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_deadline",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "_v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "_r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "_s",
          "type": "bytes32"
        }
      ],
      "name": "selfPermitIfNecessary",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newAdminFee",
          "type": "uint256"
        }
      ],
      "name": "setAdminFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newSwapFee",
          "type": "uint256"
        }
      ],
      "name": "setSwapFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stopRampA",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "_tokenFrom",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_dx",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_minDy",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_deadline",
          "type": "uint256"
        }
      ],
      "name": "swap",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newOwnner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b50612fbc806100206000396000f3fe6080604052600436106101cd5760003560e01c8063afcd5f4b116100f7578063ce1fdb8b11610095578063e6ab280611610064578063e6ab28061461052f578063f2fad2b61461054f578063f2fde38b1461056f578063f3995c671461058f57600080fd5b8063ce1fdb8b146104b8578063d46300fd146104d8578063d6f0df62146104ed578063e25aa5fa1461051a57600080fd5b8063c2d9ecfa116100d1578063c2d9ecfa1461045b578063c2e3140a14610470578063c4db7fa014610483578063c9ec92481461049857600080fd5b8063afcd5f4b146103ed578063ba94a3151461041d578063bfc65c9b1461043b57600080fd5b80635fcbd2851161016f5780638beb60b61161013e5780638beb60b61461035f5780638da5cb5b1461037f5780639242164f1461039d578063ac9650d8146103cd57600080fd5b80635fcbd285146102d45780636f26a7101461030c578063715018a61461032a578063805d27661461033f57600080fd5b806334e19907116101ab57806334e199071461025d57806346eda7491461027f5780635153786b1461029f578063593d132c146102b457600080fd5b80630ba81959146101d25780631de8d8cb146101fa578063256967ac1461021a575b600080fd5b3480156101de57600080fd5b506101e76105a2565b6040519081526020015b60405180910390f35b34801561020657600080fd5b506101e76102153660046127e6565b61062e565b34801561022657600080fd5b50609954609a54609b54609c5461023d9392919084565b6040805194855260208501939093529183015260608201526080016101f1565b34801561026957600080fd5b5061027d6102783660046128bb565b610792565b005b34801561028b57600080fd5b506101e761029a3660046125fb565b610808565b3480156102ab57600080fd5b506101e7610910565b3480156102c057600080fd5b5061027d6102cf366004612990565b61094b565b3480156102e057600080fd5b5060a1546102f4906001600160a01b031681565b6040516001600160a01b0390911681526020016101f1565b34801561031857600080fd5b50609f546001600160a01b03166102f4565b34801561033657600080fd5b5061027d6109c8565b34801561034b57600080fd5b506101e761035a366004612923565b6109dc565b34801561036b57600080fd5b5061027d61037a3660046128bb565b610a3a565b34801561038b57600080fd5b506033546001600160a01b03166102f4565b3480156103a957600080fd5b506097546098546103b8919082565b604080519283526020830191909152016101f1565b6103e06103db3660046125b9565b610a81565b6040516101f19190612a43565b3480156103f957600080fd5b5061040d61040836600461272b565b610be2565b60405190151581526020016101f1565b34801561042957600080fd5b50609d546001600160a01b03166102f4565b34801561044757600080fd5b506101e76104563660046125fb565b6111c4565b34801561046757600080fd5b506101e7611267565b61027d61047e36600461255d565b6112a2565b34801561048f57600080fd5b5061027d61134c565b3480156104a457600080fd5b506101e76104b3366004612812565b6113b9565b3480156104c457600080fd5b506101e76104d3366004612953565b61154e565b3480156104e457600080fd5b506101e761161c565b3480156104f957600080fd5b5061050d6105083660046128ed565b611657565b6040516101f19190612b59565b34801561052657600080fd5b506101e7611746565b34801561053b57600080fd5b506101e761054a3660046126b7565b6117a2565b34801561055b57600080fd5b5061050d61056a3660046128bb565b611888565b34801561057b57600080fd5b5061027d61058a366004612540565b611966565b61027d61059d36600461255d565b61197a565b604051632eae27cb60e11b81526099600482015260009073__$cbcc74385362534c50df661ce3578a62af$__90635d5c4f96906024015b60206040518083038186803b1580156105f157600080fd5b505af4158015610605573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061062991906128d4565b905090565b609d546000906001600160a01b038481169116146106ea5760405163072a9be960e51b8152609f6004820152609d602482015260448101839052609960648201526097608482015273__$cbcc74385362534c50df661ce3578a62af$__9063e5537d209060a40160206040518083038186803b1580156106ad57600080fd5b505af41580156106c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106e591906128d4565b610789565b60405163072a9be960e51b8152609d6004820152609f602482015260448101839052609960648201526097608482015273__$cbcc74385362534c50df661ce3578a62af$__9063e5537d209060a40160206040518083038186803b15801561075157600080fd5b505af4158015610765573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061078991906128d4565b90505b92915050565b61079a611a06565b60405163112d146760e21b8152609760048201526024810182905273__$cbcc74385362534c50df661ce3578a62af$__906344b4519c906044015b60006040518083038186803b1580156107ed57600080fd5b505af4158015610801573d6000803e3d6000fd5b5050505050565b6000610812611a60565b8161081c81611aba565b60408051608081018252609d546001600160a01b03908116828401908152609e546060840152825282518084018452609f548216815260a05460208281019190915283015260a1549251632d5299f760e11b8152919273__$cbcc74385362534c50df661ce3578a62af$__92635aa533ee926108ab9286928c928c926099926097929190911690600401612aa5565b60206040518083038186803b1580156108c357600080fd5b505af41580156108d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108fb91906128d4565b925050506109096001606555565b9392505050565b60405163366318fd60e11b8152609f600482015260009073__$cbcc74385362534c50df661ce3578a62af$__90636cc631fa906024016105d9565b610953611a06565b6040516314f685c360e01b815260996004820152602481018390526044810182905273__$cbcc74385362534c50df661ce3578a62af$__906314f685c39060640160006040518083038186803b1580156109ac57600080fd5b505af41580156109c0573d6000803e3d6000fd5b505050505050565b6109d0611a06565b6109da6000611b04565b565b609d546000906001600160a01b03838116911614610a175760a1546106e5908490609f90609d906099906097906001600160a01b0316611b56565b60a154610789908490609d90609f906099906097906001600160a01b0316611b56565b610a42611a06565b6040516327d0477560e01b8152609760048201526024810182905273__$cbcc74385362534c50df661ce3578a62af$__906327d04775906044016107d5565b60608167ffffffffffffffff811115610a9c57610a9c612f3e565b604051908082528060200260200182016040528015610acf57816020015b6060815260200190600190039081610aba5790505b50905060005b82811015610bdb5760008030868685818110610af357610af3612f28565b9050602002810190610b059190612caa565b604051610b13929190612a33565b600060405180830381855af49150503d8060008114610b4e576040519150601f19603f3d011682016040523d82523d6000602084013e610b53565b606091505b509150915081610ba857604481511015610b6c57600080fd5b60048101905080806020019051810190610b86919061284d565b60405162461bcd60e51b8152600401610b9f9190612b8a565b60405180910390fd5b80848481518110610bbb57610bbb612f28565b602002602001018190525050508080610bd390612ef7565b915050610ad5565b5092915050565b60008054610100900460ff1615808015610c035750600054600160ff909116105b80610c1d5750303b158015610c1d575060005460ff166001145b610c805760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610b9f565b6000805460ff191660011790558015610ca3576000805461ff0019166101001790555b610cab611bd7565b610cb3611bfe565b610cbb611c2e565b886001600160a01b03168a6001600160a01b03161415610d105760405162461bcd60e51b815260206004820152601060248201526f4455504c49434154455f544f4b454e5360801b6044820152606401610b9f565b6001600160a01b038a16610d5b5760405162461bcd60e51b8152602060048201526012602482015271544f4b454e305f5a45524f4144445245535360701b6044820152606401610b9f565b6001600160a01b038916610da65760405162461bcd60e51b8152602060048201526012602482015271544f4b454e315f5a45524f4144445245535360701b6044820152606401610b9f565b60008a6001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b158015610de157600080fd5b505afa158015610df5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e1991906129b2565b905060008160ff1611610e2b57600080fd5b60405180604001604052808c6001600160a01b03168152602001826012610e529190612ea8565b610e5d90600a612dc7565b90528051609d80546001600160a01b0319166001600160a01b03928316179055602091820151609e556040805163313ce56760e01b81529051600093928e169263313ce5679260048082019391829003018186803b158015610ebe57600080fd5b505afa158015610ed2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ef691906129b2565b905060008160ff1611610f0857600080fd5b60405180604001604052808c6001600160a01b03168152602001826012610f2f9190612ea8565b610f3a90600a612dc7565b90528051609f80546001600160a01b0319166001600160a01b039092169190911790556020015160a055620f42408810610fab5760405162461bcd60e51b81526020600482015260126024820152715f612065786365656473206d6178696d756d60701b6044820152606401610b9f565b610fb6606489612e72565b609955610fc4606489612e72565b609a556305f5e10087106110115760405162461bcd60e51b81526020600482015260146024820152735f6665652065786365656473206d6178696d756d60601b6044820152606401610b9f565b6402540be40086106110655760405162461bcd60e51b815260206004820152601960248201527f5f61646d696e4665652065786365656473206d6178696d756d000000000000006044820152606401610b9f565b604080518082019091528781526020018690526097879055609886905561108b85611c55565b60a180546001600160a01b0319166001600160a01b0392909216918217905560405163266c45bb60e11b8152634cd88b76906110cd908d908d90600401612b9d565b602060405180830381600087803b1580156110e757600080fd5b505af11580156110fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061111f919061270e565b61116b5760405162461bcd60e51b815260206004820152601c60248201527f636f756c64206e6f7420696e6974206c70546f6b656e20636c6f6e65000000006044820152606401610b9f565b60019350505080156111b7576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5098975050505050505050565b60006111ce611a60565b816111d881611aba565b60408051608081018252609d546001600160a01b03908116828401908152609e546060840152825282518084018452609f548216815260a05460208281019190915283015260a1549251630175961160e11b8152919273__$cbcc74385362534c50df661ce3578a62af$__926302eb2c22926108ab9286928c928c926099926097929190911690600401612aa5565b60405163366318fd60e11b8152609d600482015260009073__$cbcc74385362534c50df661ce3578a62af$__90636cc631fa906024016105d9565b604051636eb1769f60e11b81523360048201523060248201526000906001600160a01b0388169063dd62ed3e9060440160206040518083038186803b1580156112ea57600080fd5b505afa1580156112fe573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061132291906128d4565b905085811015611343576113438761133a8389612e91565b8787878761197a565b50505050505050565b611354611a06565b60405163b0845bc560e01b81526099600482015273__$cbcc74385362534c50df661ce3578a62af$__9063b0845bc59060240160006040518083038186803b15801561139f57600080fd5b505af41580156113b3573d6000803e3d6000fd5b50505050565b60006113c3611a60565b816113cd81611aba565b609d546001600160a01b03878116911614156114915760405163cbab294f60e01b8152609d6004820152609f6024820152604481018690526064810185905260996084820152609760a482015273__$cbcc74385362534c50df661ce3578a62af$__9063cbab294f9060c4015b60206040518083038186803b15801561145257600080fd5b505af4158015611466573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061148a91906128d4565b915061153b565b609f546001600160a01b03878116911614156115025760405163cbab294f60e01b8152609f6004820152609d6024820152604481018690526064810185905260996084820152609760a482015273__$cbcc74385362534c50df661ce3578a62af$__9063cbab294f9060c40161143a565b60405162461bcd60e51b815260206004820152600e60248201526d4241445f544f4b454e5f46524f4d60901b6044820152606401610b9f565b506115466001606555565b949350505050565b6000611558611a60565b8161156281611aba565b609d546001600160a01b03868116911614156115ca5760a1546040516353d5d9cb60e11b815273__$cbcc74385362534c50df661ce3578a62af$__9163a7abb3969161143a918a91609d91609f918b916099916097916001600160a01b031690600401612c71565b60a1546040516353d5d9cb60e11b815273__$cbcc74385362534c50df661ce3578a62af$__9163a7abb3969161143a918a91609f91609d918b916099916097916001600160a01b031690600401612c71565b604051633057705f60e21b81526099600482015260009073__$cbcc74385362534c50df661ce3578a62af$__9063c15dc17c906024016105d9565b61165f61246f565b611667611a60565b8161167181611aba565b60408051608081018252609d546001600160a01b03908116828401908152609e546060840152825282518084018452609f548216815260a05460208281019190915283015260a1549251632657942960e01b8152919273__$cbcc74385362534c50df661ce3578a62af$__926326579429926116f7928b9287928c921690600401612c0d565b604080518083038186803b15801561170e57600080fd5b505af4158015611722573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108fb919061262f565b60a154604051631013a0c960e31b8152609d6004820152609f6024820152609960448201526001600160a01b03909116606482015260009073__$cbcc74385362534c50df661ce3578a62af$__9063809d0648906084016105d9565b60408051608081018252609d546001600160a01b03908116828401908152609e546060840152825282518084018452609f548216815260a05460208281019190915283015260a154925163196d005960e31b815260009373__$cbcc74385362534c50df661ce3578a62af$__9263cb6802c89261182f9286928b928b928b92609992911690600401612aeb565b60206040518083038186803b15801561184757600080fd5b505af415801561185b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061187f91906128d4565b95945050505050565b61189061246f565b60408051608081018252609d546001600160a01b03908116828401908152609e546060840152825282518084018452609f548216815260a05460208281019190915283015260a154925163296104cd60e01b8152919273__$cbcc74385362534c50df661ce3578a62af$__9263296104cd9261191792889287929190911690600401612c44565b604080518083038186803b15801561192e57600080fd5b505af4158015611942573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610909919061262f565b61196e611a06565b61197781611cef565b50565b60405163d505accf60e01b8152336004820152306024820152604481018690526064810185905260ff8416608482015260a4810183905260c481018290526001600160a01b0387169063d505accf9060e401600060405180830381600087803b1580156119e657600080fd5b505af11580156119fa573d6000803e3d6000fd5b50505050505050505050565b6033546001600160a01b031633146109da5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610b9f565b60026065541415611ab35760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610b9f565b6002606555565b804211156119775760405162461bcd60e51b815260206004820152601060248201526f111958591b1a5b99481b9bdd081b595d60821b6044820152606401610b9f565b6001606555565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000806111b7888888866001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b158015611b9857600080fd5b505afa158015611bac573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bd091906128d4565b8989611d65565b600054610100900460ff166109da5760405162461bcd60e51b8152600401610b9f90612bc2565b600054610100900460ff16611c255760405162461bcd60e51b8152600401610b9f90612bc2565b6109da33611b04565b600054610100900460ff16611afd5760405162461bcd60e51b8152600401610b9f90612bc2565b6000763d602d80600a3d3981f3363d3d373d3d3d363d730000008260601b60e81c176000526e5af43d82803e903d91602b57fd5bf38260781b17602052603760096000f090506001600160a01b038116611cea5760405162461bcd60e51b8152602060048201526016602482015275115490cc4c4d8dce8818dc99585d194819985a5b195960521b6044820152606401610b9f565b919050565b611cf7611a06565b6001600160a01b038116611d5c5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610b9f565b61197781611b04565b6000806000806000611d848b8b8b8b611d7d8c611dc7565b8b54611e6e565b60018d015492955090935091506000908490611da08585612e91565b611daa9190612d62565b611db49190612e91565b939c939b50929950505050505050505050565b600381015460018201546000919042821115610909576002840154845480831115611e3257611df68285612e91565b611e008342612e91565b611e0a8386612e91565b611e149190612e72565b611e1e9190612d62565b611e289082612d4a565b9695505050505050565b611e3c8285612e91565b611e468342612e91565b611e508584612e91565b611e5a9190612e72565b611e649190612d62565b611e289082612e91565b8454600090819081908190611e8b906001600160a01b03166120bb565b90506000611e9d828b60010154612135565b8954909150600090611eb7906001600160a01b03166120bb565b90506000611ec9828c60010154612135565b6040805160a0810182526000808252602082018190529181018290526060810191909152608081018b9052909150611f0282858c612141565b8160000181815250508a81600001518f611f1c9190612e72565b611f269190612d62565b8151611f329190612e91565b6020820152838e1115611f875760405162461bcd60e51b815260206004820152601860248201527f414d4f554e545f455843454544535f415641494c41424c4500000000000000006044820152606401610b9f565b611f9a81608001518383602001516122c5565b6040820152611fa889612426565b606082018190526040820151825160208401516000936402540be4009390929091611fd3908a612e72565b611fdd9190612d62565b611fe79190612e91565b611ff19190612e72565b611ffb9190612d62565b6120059086612e91565b905060006402540be400836060015184600001518560200151876120299190612e72565b6120339190612d62565b61203d9087612e91565b6120479190612e72565b6120519190612d62565b61205b9085612e91565b9050600061207284608001518386602001516122c5565b61207c9084612e91565b90508f600101546001826120909190612e91565b61209a9190612d62565b604090940151939a5092985094965050505050505096509650969350505050565b6040516370a0823160e01b81523060048201526000906001600160a01b038316906370a082319060240160206040518083038186803b1580156120fd57600080fd5b505afa158015612111573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061078c91906128d4565b60006107898284612e72565b60008061214e8486612d4a565b90508061215f576000915050610909565b6000818161216e600287612e72565b905060005b610100811015612286578261218960028b612e72565b6121938583612e72565b61219d9190612d62565b90506121aa60028a612e72565b6121b48583612e72565b6121be9190612d62565b90508394506000846002836121d39190612e72565b60646121df8a88612e72565b6121e99190612d62565b6121f39190612d4a565b6121fd9190612e72565b905060008261220e60026001612d4a565b6122189190612e72565b6064876122258289612e91565b61222f9190612e72565b6122399190612d62565b6122439190612d4a565b905061224f8183612d62565b955061225b8688612433565b15612270578598505050505050505050610909565b505050808061227e90612ef7565b915050612173565b5060405162461bcd60e51b81526020600482015260136024820152724420646f6573206e6f7420636f6e766572676560681b6044820152606401610b9f565b6000806122d3600285612e72565b6122dd8480612e72565b6122e79190612d62565b90508360006122f7600288612e72565b9050612304600282612e72565b60646123108786612e72565b61231a9190612e72565b6123249190612d62565b9250600081612334606488612e72565b61233e9190612d62565b6123489084612d4a565b9050600086815b6101008110156123dd57819250600087838461236b9190612e72565b6123759190612d4a565b905060008a86612386866002612e72565b6123909190612d4a565b61239a9190612e91565b90506123a68183612d62565b93506123b28486612433565b156123c857839950505050505050505050610909565b505080806123d590612ef7565b91505061234f565b5060405162461bcd60e51b815260206004820152601e60248201527f417070726f78696d6174696f6e20646964206e6f7420636f6e766572676500006044820152606401610b9f565b600061078c600283612d62565b60006001612441848461244a565b11159392505050565b6000818311156124655761245e8284612e91565b905061078c565b6107898383612e91565b60405180604001604052806002906020820280368337509192915050565b60008083601f84011261249f57600080fd5b50813567ffffffffffffffff8111156124b757600080fd5b6020830191508360208260051b85010111156124d257600080fd5b9250929050565b806040810183101561078c57600080fd5b600082601f8301126124fb57600080fd5b813561250e61250982612d22565b612cf1565b81815284602083860101111561252357600080fd5b816020850160208301376000918101602001919091529392505050565b60006020828403121561255257600080fd5b813561090981612f54565b60008060008060008060c0878903121561257657600080fd5b863561258181612f54565b95506020870135945060408701359350606087013561259f81612f77565b9598949750929560808101359460a0909101359350915050565b600080602083850312156125cc57600080fd5b823567ffffffffffffffff8111156125e357600080fd5b6125ef8582860161248d565b90969095509350505050565b60008060006080848603121561261057600080fd5b61261a85856124d9565b95604085013595506060909401359392505050565b60006040828403121561264157600080fd5b82601f83011261265057600080fd5b6040516040810181811067ffffffffffffffff8211171561267357612673612f3e565b806040525080838560408601111561268a57600080fd5b60005b60028110156126ac57815183526020928301929091019060010161268d565b509195945050505050565b6000806000604084860312156126cc57600080fd5b833567ffffffffffffffff8111156126e357600080fd5b6126ef8682870161248d565b909450925050602084013561270381612f69565b809150509250925092565b60006020828403121561272057600080fd5b815161090981612f69565b600080600080600080600080610100898b03121561274857600080fd5b883561275381612f54565b9750602089013561276381612f54565b9650604089013567ffffffffffffffff8082111561278057600080fd5b61278c8c838d016124ea565b975060608b01359150808211156127a257600080fd5b506127af8b828c016124ea565b9550506080890135935060a0890135925060c0890135915060e08901356127d581612f54565b809150509295985092959890939650565b600080604083850312156127f957600080fd5b823561280481612f54565b946020939093013593505050565b6000806000806080858703121561282857600080fd5b843561283381612f54565b966020860135965060408601359560600135945092505050565b60006020828403121561285f57600080fd5b815167ffffffffffffffff81111561287657600080fd5b8201601f8101841361288757600080fd5b805161289561250982612d22565b8181528560208385010111156128aa57600080fd5b61187f826020830160208601612ecb565b6000602082840312156128cd57600080fd5b5035919050565b6000602082840312156128e657600080fd5b5051919050565b60008060006080848603121561290257600080fd5b8335925061291385602086016124d9565b9150606084013590509250925092565b6000806040838503121561293657600080fd5b82359150602083013561294881612f54565b809150509250929050565b6000806000806080858703121561296957600080fd5b84359350602085013561297b81612f54565b93969395505050506040820135916060013590565b600080604083850312156129a357600080fd5b50508035926020909101359150565b6000602082840312156129c457600080fd5b815161090981612f77565b8060005b60028110156113b357815180516001600160a01b0316855260209081015181860152604090940193909101906001016129d3565b60008151808452612a1f816020860160208601612ecb565b601f01601f19169290920160200192915050565b8183823760009101908152919050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015612a9857603f19888603018452612a86858351612a07565b94509285019290850190600101612a6a565b5092979650505050505050565b6101408101612ab482896129cf565b604087608084013760c082019590955260e08101939093526101008301919091526001600160a01b03166101209091015292915050565b6000610100612afa838a6129cf565b6080830181905282018690526101206001600160fb1b03871115612b1d57600080fd5b8660051b808983860137600090840190910190815294151560a08301525060c08101929092526001600160a01b031660e0909101529392505050565b60408101818360005b6002811015612b81578151835260209283019290910190600101612b62565b50505092915050565b6020815260006107896020830184612a07565b604081526000612bb06040830185612a07565b828103602084015261187f8185612a07565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b8481526101008101612c2260208301866129cf565b60408460a08401376001600160a01b039290921660e091909101529392505050565b83815260c08101612c5860208301856129cf565b6001600160a01b039290921660a0919091015292915050565b968752602087019590955260408601939093526060850191909152608084015260a08301526001600160a01b031660c082015260e00190565b6000808335601e19843603018112612cc157600080fd5b83018035915067ffffffffffffffff821115612cdc57600080fd5b6020019150368190038213156124d257600080fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715612d1a57612d1a612f3e565b604052919050565b600067ffffffffffffffff821115612d3c57612d3c612f3e565b50601f01601f191660200190565b60008219821115612d5d57612d5d612f12565b500190565b600082612d7f57634e487b7160e01b600052601260045260246000fd5b500490565b600181815b80851115612dbf578160001904821115612da557612da5612f12565b80851615612db257918102915b93841c9390800290612d89565b509250929050565b600061078960ff841683600082612de05750600161078c565b81612ded5750600061078c565b8160018114612e035760028114612e0d57612e29565b600191505061078c565b60ff841115612e1e57612e1e612f12565b50506001821b61078c565b5060208310610133831016604e8410600b8410161715612e4c575081810a61078c565b612e568383612d84565b8060001904821115612e6a57612e6a612f12565b029392505050565b6000816000190483118215151615612e8c57612e8c612f12565b500290565b600082821015612ea357612ea3612f12565b500390565b600060ff821660ff841680821015612ec257612ec2612f12565b90039392505050565b60005b83811015612ee6578181015183820152602001612ece565b838111156113b35750506000910152565b6000600019821415612f0b57612f0b612f12565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461197757600080fd5b801515811461197757600080fd5b60ff8116811461197757600080fdfea26469706673582212202950cdc86cc3bae6a6c66aa941a42b775d747db5d4e530a17656992b03c1948e64736f6c63430008070033",
    "sourceMap": "1208:10376:50:-:0;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {
      "src/tenderswap/SwapUtils.sol": {
        "SwapUtils": [
          {
            "start": 1499,
            "length": 20
          },
          {
            "start": 1688,
            "length": 20
          },
          {
            "start": 1852,
            "length": 20
          },
          {
            "start": 2007,
            "length": 20
          },
          {
            "start": 2196,
            "length": 20
          },
          {
            "start": 2377,
            "length": 20
          },
          {
            "start": 2455,
            "length": 20
          },
          {
            "start": 2687,
            "length": 20
          },
          {
            "start": 4688,
            "length": 20
          },
          {
            "start": 4768,
            "length": 20
          },
          {
            "start": 5002,
            "length": 20
          },
          {
            "start": 5180,
            "length": 20
          },
          {
            "start": 5376,
            "length": 20
          },
          {
            "start": 5546,
            "length": 20
          },
          {
            "start": 5628,
            "length": 20
          },
          {
            "start": 5717,
            "length": 20
          },
          {
            "start": 5865,
            "length": 20
          },
          {
            "start": 6048,
            "length": 20
          },
          {
            "start": 6171,
            "length": 20
          },
          {
            "start": 6408,
            "length": 20
          }
        ]
      }
    }
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106101cd5760003560e01c8063afcd5f4b116100f7578063ce1fdb8b11610095578063e6ab280611610064578063e6ab28061461052f578063f2fad2b61461054f578063f2fde38b1461056f578063f3995c671461058f57600080fd5b8063ce1fdb8b146104b8578063d46300fd146104d8578063d6f0df62146104ed578063e25aa5fa1461051a57600080fd5b8063c2d9ecfa116100d1578063c2d9ecfa1461045b578063c2e3140a14610470578063c4db7fa014610483578063c9ec92481461049857600080fd5b8063afcd5f4b146103ed578063ba94a3151461041d578063bfc65c9b1461043b57600080fd5b80635fcbd2851161016f5780638beb60b61161013e5780638beb60b61461035f5780638da5cb5b1461037f5780639242164f1461039d578063ac9650d8146103cd57600080fd5b80635fcbd285146102d45780636f26a7101461030c578063715018a61461032a578063805d27661461033f57600080fd5b806334e19907116101ab57806334e199071461025d57806346eda7491461027f5780635153786b1461029f578063593d132c146102b457600080fd5b80630ba81959146101d25780631de8d8cb146101fa578063256967ac1461021a575b600080fd5b3480156101de57600080fd5b506101e76105a2565b6040519081526020015b60405180910390f35b34801561020657600080fd5b506101e76102153660046127e6565b61062e565b34801561022657600080fd5b50609954609a54609b54609c5461023d9392919084565b6040805194855260208501939093529183015260608201526080016101f1565b34801561026957600080fd5b5061027d6102783660046128bb565b610792565b005b34801561028b57600080fd5b506101e761029a3660046125fb565b610808565b3480156102ab57600080fd5b506101e7610910565b3480156102c057600080fd5b5061027d6102cf366004612990565b61094b565b3480156102e057600080fd5b5060a1546102f4906001600160a01b031681565b6040516001600160a01b0390911681526020016101f1565b34801561031857600080fd5b50609f546001600160a01b03166102f4565b34801561033657600080fd5b5061027d6109c8565b34801561034b57600080fd5b506101e761035a366004612923565b6109dc565b34801561036b57600080fd5b5061027d61037a3660046128bb565b610a3a565b34801561038b57600080fd5b506033546001600160a01b03166102f4565b3480156103a957600080fd5b506097546098546103b8919082565b604080519283526020830191909152016101f1565b6103e06103db3660046125b9565b610a81565b6040516101f19190612a43565b3480156103f957600080fd5b5061040d61040836600461272b565b610be2565b60405190151581526020016101f1565b34801561042957600080fd5b50609d546001600160a01b03166102f4565b34801561044757600080fd5b506101e76104563660046125fb565b6111c4565b34801561046757600080fd5b506101e7611267565b61027d61047e36600461255d565b6112a2565b34801561048f57600080fd5b5061027d61134c565b3480156104a457600080fd5b506101e76104b3366004612812565b6113b9565b3480156104c457600080fd5b506101e76104d3366004612953565b61154e565b3480156104e457600080fd5b506101e761161c565b3480156104f957600080fd5b5061050d6105083660046128ed565b611657565b6040516101f19190612b59565b34801561052657600080fd5b506101e7611746565b34801561053b57600080fd5b506101e761054a3660046126b7565b6117a2565b34801561055b57600080fd5b5061050d61056a3660046128bb565b611888565b34801561057b57600080fd5b5061027d61058a366004612540565b611966565b61027d61059d36600461255d565b61197a565b604051632eae27cb60e11b81526099600482015260009073__$cbcc74385362534c50df661ce3578a62af$__90635d5c4f96906024015b60206040518083038186803b1580156105f157600080fd5b505af4158015610605573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061062991906128d4565b905090565b609d546000906001600160a01b038481169116146106ea5760405163072a9be960e51b8152609f6004820152609d602482015260448101839052609960648201526097608482015273__$cbcc74385362534c50df661ce3578a62af$__9063e5537d209060a40160206040518083038186803b1580156106ad57600080fd5b505af41580156106c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106e591906128d4565b610789565b60405163072a9be960e51b8152609d6004820152609f602482015260448101839052609960648201526097608482015273__$cbcc74385362534c50df661ce3578a62af$__9063e5537d209060a40160206040518083038186803b15801561075157600080fd5b505af4158015610765573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061078991906128d4565b90505b92915050565b61079a611a06565b60405163112d146760e21b8152609760048201526024810182905273__$cbcc74385362534c50df661ce3578a62af$__906344b4519c906044015b60006040518083038186803b1580156107ed57600080fd5b505af4158015610801573d6000803e3d6000fd5b5050505050565b6000610812611a60565b8161081c81611aba565b60408051608081018252609d546001600160a01b03908116828401908152609e546060840152825282518084018452609f548216815260a05460208281019190915283015260a1549251632d5299f760e11b8152919273__$cbcc74385362534c50df661ce3578a62af$__92635aa533ee926108ab9286928c928c926099926097929190911690600401612aa5565b60206040518083038186803b1580156108c357600080fd5b505af41580156108d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108fb91906128d4565b925050506109096001606555565b9392505050565b60405163366318fd60e11b8152609f600482015260009073__$cbcc74385362534c50df661ce3578a62af$__90636cc631fa906024016105d9565b610953611a06565b6040516314f685c360e01b815260996004820152602481018390526044810182905273__$cbcc74385362534c50df661ce3578a62af$__906314f685c39060640160006040518083038186803b1580156109ac57600080fd5b505af41580156109c0573d6000803e3d6000fd5b505050505050565b6109d0611a06565b6109da6000611b04565b565b609d546000906001600160a01b03838116911614610a175760a1546106e5908490609f90609d906099906097906001600160a01b0316611b56565b60a154610789908490609d90609f906099906097906001600160a01b0316611b56565b610a42611a06565b6040516327d0477560e01b8152609760048201526024810182905273__$cbcc74385362534c50df661ce3578a62af$__906327d04775906044016107d5565b60608167ffffffffffffffff811115610a9c57610a9c612f3e565b604051908082528060200260200182016040528015610acf57816020015b6060815260200190600190039081610aba5790505b50905060005b82811015610bdb5760008030868685818110610af357610af3612f28565b9050602002810190610b059190612caa565b604051610b13929190612a33565b600060405180830381855af49150503d8060008114610b4e576040519150601f19603f3d011682016040523d82523d6000602084013e610b53565b606091505b509150915081610ba857604481511015610b6c57600080fd5b60048101905080806020019051810190610b86919061284d565b60405162461bcd60e51b8152600401610b9f9190612b8a565b60405180910390fd5b80848481518110610bbb57610bbb612f28565b602002602001018190525050508080610bd390612ef7565b915050610ad5565b5092915050565b60008054610100900460ff1615808015610c035750600054600160ff909116105b80610c1d5750303b158015610c1d575060005460ff166001145b610c805760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610b9f565b6000805460ff191660011790558015610ca3576000805461ff0019166101001790555b610cab611bd7565b610cb3611bfe565b610cbb611c2e565b886001600160a01b03168a6001600160a01b03161415610d105760405162461bcd60e51b815260206004820152601060248201526f4455504c49434154455f544f4b454e5360801b6044820152606401610b9f565b6001600160a01b038a16610d5b5760405162461bcd60e51b8152602060048201526012602482015271544f4b454e305f5a45524f4144445245535360701b6044820152606401610b9f565b6001600160a01b038916610da65760405162461bcd60e51b8152602060048201526012602482015271544f4b454e315f5a45524f4144445245535360701b6044820152606401610b9f565b60008a6001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b158015610de157600080fd5b505afa158015610df5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e1991906129b2565b905060008160ff1611610e2b57600080fd5b60405180604001604052808c6001600160a01b03168152602001826012610e529190612ea8565b610e5d90600a612dc7565b90528051609d80546001600160a01b0319166001600160a01b03928316179055602091820151609e556040805163313ce56760e01b81529051600093928e169263313ce5679260048082019391829003018186803b158015610ebe57600080fd5b505afa158015610ed2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ef691906129b2565b905060008160ff1611610f0857600080fd5b60405180604001604052808c6001600160a01b03168152602001826012610f2f9190612ea8565b610f3a90600a612dc7565b90528051609f80546001600160a01b0319166001600160a01b039092169190911790556020015160a055620f42408810610fab5760405162461bcd60e51b81526020600482015260126024820152715f612065786365656473206d6178696d756d60701b6044820152606401610b9f565b610fb6606489612e72565b609955610fc4606489612e72565b609a556305f5e10087106110115760405162461bcd60e51b81526020600482015260146024820152735f6665652065786365656473206d6178696d756d60601b6044820152606401610b9f565b6402540be40086106110655760405162461bcd60e51b815260206004820152601960248201527f5f61646d696e4665652065786365656473206d6178696d756d000000000000006044820152606401610b9f565b604080518082019091528781526020018690526097879055609886905561108b85611c55565b60a180546001600160a01b0319166001600160a01b0392909216918217905560405163266c45bb60e11b8152634cd88b76906110cd908d908d90600401612b9d565b602060405180830381600087803b1580156110e757600080fd5b505af11580156110fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061111f919061270e565b61116b5760405162461bcd60e51b815260206004820152601c60248201527f636f756c64206e6f7420696e6974206c70546f6b656e20636c6f6e65000000006044820152606401610b9f565b60019350505080156111b7576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5098975050505050505050565b60006111ce611a60565b816111d881611aba565b60408051608081018252609d546001600160a01b03908116828401908152609e546060840152825282518084018452609f548216815260a05460208281019190915283015260a1549251630175961160e11b8152919273__$cbcc74385362534c50df661ce3578a62af$__926302eb2c22926108ab9286928c928c926099926097929190911690600401612aa5565b60405163366318fd60e11b8152609d600482015260009073__$cbcc74385362534c50df661ce3578a62af$__90636cc631fa906024016105d9565b604051636eb1769f60e11b81523360048201523060248201526000906001600160a01b0388169063dd62ed3e9060440160206040518083038186803b1580156112ea57600080fd5b505afa1580156112fe573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061132291906128d4565b905085811015611343576113438761133a8389612e91565b8787878761197a565b50505050505050565b611354611a06565b60405163b0845bc560e01b81526099600482015273__$cbcc74385362534c50df661ce3578a62af$__9063b0845bc59060240160006040518083038186803b15801561139f57600080fd5b505af41580156113b3573d6000803e3d6000fd5b50505050565b60006113c3611a60565b816113cd81611aba565b609d546001600160a01b03878116911614156114915760405163cbab294f60e01b8152609d6004820152609f6024820152604481018690526064810185905260996084820152609760a482015273__$cbcc74385362534c50df661ce3578a62af$__9063cbab294f9060c4015b60206040518083038186803b15801561145257600080fd5b505af4158015611466573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061148a91906128d4565b915061153b565b609f546001600160a01b03878116911614156115025760405163cbab294f60e01b8152609f6004820152609d6024820152604481018690526064810185905260996084820152609760a482015273__$cbcc74385362534c50df661ce3578a62af$__9063cbab294f9060c40161143a565b60405162461bcd60e51b815260206004820152600e60248201526d4241445f544f4b454e5f46524f4d60901b6044820152606401610b9f565b506115466001606555565b949350505050565b6000611558611a60565b8161156281611aba565b609d546001600160a01b03868116911614156115ca5760a1546040516353d5d9cb60e11b815273__$cbcc74385362534c50df661ce3578a62af$__9163a7abb3969161143a918a91609d91609f918b916099916097916001600160a01b031690600401612c71565b60a1546040516353d5d9cb60e11b815273__$cbcc74385362534c50df661ce3578a62af$__9163a7abb3969161143a918a91609f91609d918b916099916097916001600160a01b031690600401612c71565b604051633057705f60e21b81526099600482015260009073__$cbcc74385362534c50df661ce3578a62af$__9063c15dc17c906024016105d9565b61165f61246f565b611667611a60565b8161167181611aba565b60408051608081018252609d546001600160a01b03908116828401908152609e546060840152825282518084018452609f548216815260a05460208281019190915283015260a1549251632657942960e01b8152919273__$cbcc74385362534c50df661ce3578a62af$__926326579429926116f7928b9287928c921690600401612c0d565b604080518083038186803b15801561170e57600080fd5b505af4158015611722573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108fb919061262f565b60a154604051631013a0c960e31b8152609d6004820152609f6024820152609960448201526001600160a01b03909116606482015260009073__$cbcc74385362534c50df661ce3578a62af$__9063809d0648906084016105d9565b60408051608081018252609d546001600160a01b03908116828401908152609e546060840152825282518084018452609f548216815260a05460208281019190915283015260a154925163196d005960e31b815260009373__$cbcc74385362534c50df661ce3578a62af$__9263cb6802c89261182f9286928b928b928b92609992911690600401612aeb565b60206040518083038186803b15801561184757600080fd5b505af415801561185b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061187f91906128d4565b95945050505050565b61189061246f565b60408051608081018252609d546001600160a01b03908116828401908152609e546060840152825282518084018452609f548216815260a05460208281019190915283015260a154925163296104cd60e01b8152919273__$cbcc74385362534c50df661ce3578a62af$__9263296104cd9261191792889287929190911690600401612c44565b604080518083038186803b15801561192e57600080fd5b505af4158015611942573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610909919061262f565b61196e611a06565b61197781611cef565b50565b60405163d505accf60e01b8152336004820152306024820152604481018690526064810185905260ff8416608482015260a4810183905260c481018290526001600160a01b0387169063d505accf9060e401600060405180830381600087803b1580156119e657600080fd5b505af11580156119fa573d6000803e3d6000fd5b50505050505050505050565b6033546001600160a01b031633146109da5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610b9f565b60026065541415611ab35760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610b9f565b6002606555565b804211156119775760405162461bcd60e51b815260206004820152601060248201526f111958591b1a5b99481b9bdd081b595d60821b6044820152606401610b9f565b6001606555565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000806111b7888888866001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b158015611b9857600080fd5b505afa158015611bac573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bd091906128d4565b8989611d65565b600054610100900460ff166109da5760405162461bcd60e51b8152600401610b9f90612bc2565b600054610100900460ff16611c255760405162461bcd60e51b8152600401610b9f90612bc2565b6109da33611b04565b600054610100900460ff16611afd5760405162461bcd60e51b8152600401610b9f90612bc2565b6000763d602d80600a3d3981f3363d3d373d3d3d363d730000008260601b60e81c176000526e5af43d82803e903d91602b57fd5bf38260781b17602052603760096000f090506001600160a01b038116611cea5760405162461bcd60e51b8152602060048201526016602482015275115490cc4c4d8dce8818dc99585d194819985a5b195960521b6044820152606401610b9f565b919050565b611cf7611a06565b6001600160a01b038116611d5c5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610b9f565b61197781611b04565b6000806000806000611d848b8b8b8b611d7d8c611dc7565b8b54611e6e565b60018d015492955090935091506000908490611da08585612e91565b611daa9190612d62565b611db49190612e91565b939c939b50929950505050505050505050565b600381015460018201546000919042821115610909576002840154845480831115611e3257611df68285612e91565b611e008342612e91565b611e0a8386612e91565b611e149190612e72565b611e1e9190612d62565b611e289082612d4a565b9695505050505050565b611e3c8285612e91565b611e468342612e91565b611e508584612e91565b611e5a9190612e72565b611e649190612d62565b611e289082612e91565b8454600090819081908190611e8b906001600160a01b03166120bb565b90506000611e9d828b60010154612135565b8954909150600090611eb7906001600160a01b03166120bb565b90506000611ec9828c60010154612135565b6040805160a0810182526000808252602082018190529181018290526060810191909152608081018b9052909150611f0282858c612141565b8160000181815250508a81600001518f611f1c9190612e72565b611f269190612d62565b8151611f329190612e91565b6020820152838e1115611f875760405162461bcd60e51b815260206004820152601860248201527f414d4f554e545f455843454544535f415641494c41424c4500000000000000006044820152606401610b9f565b611f9a81608001518383602001516122c5565b6040820152611fa889612426565b606082018190526040820151825160208401516000936402540be4009390929091611fd3908a612e72565b611fdd9190612d62565b611fe79190612e91565b611ff19190612e72565b611ffb9190612d62565b6120059086612e91565b905060006402540be400836060015184600001518560200151876120299190612e72565b6120339190612d62565b61203d9087612e91565b6120479190612e72565b6120519190612d62565b61205b9085612e91565b9050600061207284608001518386602001516122c5565b61207c9084612e91565b90508f600101546001826120909190612e91565b61209a9190612d62565b604090940151939a5092985094965050505050505096509650969350505050565b6040516370a0823160e01b81523060048201526000906001600160a01b038316906370a082319060240160206040518083038186803b1580156120fd57600080fd5b505afa158015612111573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061078c91906128d4565b60006107898284612e72565b60008061214e8486612d4a565b90508061215f576000915050610909565b6000818161216e600287612e72565b905060005b610100811015612286578261218960028b612e72565b6121938583612e72565b61219d9190612d62565b90506121aa60028a612e72565b6121b48583612e72565b6121be9190612d62565b90508394506000846002836121d39190612e72565b60646121df8a88612e72565b6121e99190612d62565b6121f39190612d4a565b6121fd9190612e72565b905060008261220e60026001612d4a565b6122189190612e72565b6064876122258289612e91565b61222f9190612e72565b6122399190612d62565b6122439190612d4a565b905061224f8183612d62565b955061225b8688612433565b15612270578598505050505050505050610909565b505050808061227e90612ef7565b915050612173565b5060405162461bcd60e51b81526020600482015260136024820152724420646f6573206e6f7420636f6e766572676560681b6044820152606401610b9f565b6000806122d3600285612e72565b6122dd8480612e72565b6122e79190612d62565b90508360006122f7600288612e72565b9050612304600282612e72565b60646123108786612e72565b61231a9190612e72565b6123249190612d62565b9250600081612334606488612e72565b61233e9190612d62565b6123489084612d4a565b9050600086815b6101008110156123dd57819250600087838461236b9190612e72565b6123759190612d4a565b905060008a86612386866002612e72565b6123909190612d4a565b61239a9190612e91565b90506123a68183612d62565b93506123b28486612433565b156123c857839950505050505050505050610909565b505080806123d590612ef7565b91505061234f565b5060405162461bcd60e51b815260206004820152601e60248201527f417070726f78696d6174696f6e20646964206e6f7420636f6e766572676500006044820152606401610b9f565b600061078c600283612d62565b60006001612441848461244a565b11159392505050565b6000818311156124655761245e8284612e91565b905061078c565b6107898383612e91565b60405180604001604052806002906020820280368337509192915050565b60008083601f84011261249f57600080fd5b50813567ffffffffffffffff8111156124b757600080fd5b6020830191508360208260051b85010111156124d257600080fd5b9250929050565b806040810183101561078c57600080fd5b600082601f8301126124fb57600080fd5b813561250e61250982612d22565b612cf1565b81815284602083860101111561252357600080fd5b816020850160208301376000918101602001919091529392505050565b60006020828403121561255257600080fd5b813561090981612f54565b60008060008060008060c0878903121561257657600080fd5b863561258181612f54565b95506020870135945060408701359350606087013561259f81612f77565b9598949750929560808101359460a0909101359350915050565b600080602083850312156125cc57600080fd5b823567ffffffffffffffff8111156125e357600080fd5b6125ef8582860161248d565b90969095509350505050565b60008060006080848603121561261057600080fd5b61261a85856124d9565b95604085013595506060909401359392505050565b60006040828403121561264157600080fd5b82601f83011261265057600080fd5b6040516040810181811067ffffffffffffffff8211171561267357612673612f3e565b806040525080838560408601111561268a57600080fd5b60005b60028110156126ac57815183526020928301929091019060010161268d565b509195945050505050565b6000806000604084860312156126cc57600080fd5b833567ffffffffffffffff8111156126e357600080fd5b6126ef8682870161248d565b909450925050602084013561270381612f69565b809150509250925092565b60006020828403121561272057600080fd5b815161090981612f69565b600080600080600080600080610100898b03121561274857600080fd5b883561275381612f54565b9750602089013561276381612f54565b9650604089013567ffffffffffffffff8082111561278057600080fd5b61278c8c838d016124ea565b975060608b01359150808211156127a257600080fd5b506127af8b828c016124ea565b9550506080890135935060a0890135925060c0890135915060e08901356127d581612f54565b809150509295985092959890939650565b600080604083850312156127f957600080fd5b823561280481612f54565b946020939093013593505050565b6000806000806080858703121561282857600080fd5b843561283381612f54565b966020860135965060408601359560600135945092505050565b60006020828403121561285f57600080fd5b815167ffffffffffffffff81111561287657600080fd5b8201601f8101841361288757600080fd5b805161289561250982612d22565b8181528560208385010111156128aa57600080fd5b61187f826020830160208601612ecb565b6000602082840312156128cd57600080fd5b5035919050565b6000602082840312156128e657600080fd5b5051919050565b60008060006080848603121561290257600080fd5b8335925061291385602086016124d9565b9150606084013590509250925092565b6000806040838503121561293657600080fd5b82359150602083013561294881612f54565b809150509250929050565b6000806000806080858703121561296957600080fd5b84359350602085013561297b81612f54565b93969395505050506040820135916060013590565b600080604083850312156129a357600080fd5b50508035926020909101359150565b6000602082840312156129c457600080fd5b815161090981612f77565b8060005b60028110156113b357815180516001600160a01b0316855260209081015181860152604090940193909101906001016129d3565b60008151808452612a1f816020860160208601612ecb565b601f01601f19169290920160200192915050565b8183823760009101908152919050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015612a9857603f19888603018452612a86858351612a07565b94509285019290850190600101612a6a565b5092979650505050505050565b6101408101612ab482896129cf565b604087608084013760c082019590955260e08101939093526101008301919091526001600160a01b03166101209091015292915050565b6000610100612afa838a6129cf565b6080830181905282018690526101206001600160fb1b03871115612b1d57600080fd5b8660051b808983860137600090840190910190815294151560a08301525060c08101929092526001600160a01b031660e0909101529392505050565b60408101818360005b6002811015612b81578151835260209283019290910190600101612b62565b50505092915050565b6020815260006107896020830184612a07565b604081526000612bb06040830185612a07565b828103602084015261187f8185612a07565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b8481526101008101612c2260208301866129cf565b60408460a08401376001600160a01b039290921660e091909101529392505050565b83815260c08101612c5860208301856129cf565b6001600160a01b039290921660a0919091015292915050565b968752602087019590955260408601939093526060850191909152608084015260a08301526001600160a01b031660c082015260e00190565b6000808335601e19843603018112612cc157600080fd5b83018035915067ffffffffffffffff821115612cdc57600080fd5b6020019150368190038213156124d257600080fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715612d1a57612d1a612f3e565b604052919050565b600067ffffffffffffffff821115612d3c57612d3c612f3e565b50601f01601f191660200190565b60008219821115612d5d57612d5d612f12565b500190565b600082612d7f57634e487b7160e01b600052601260045260246000fd5b500490565b600181815b80851115612dbf578160001904821115612da557612da5612f12565b80851615612db257918102915b93841c9390800290612d89565b509250929050565b600061078960ff841683600082612de05750600161078c565b81612ded5750600061078c565b8160018114612e035760028114612e0d57612e29565b600191505061078c565b60ff841115612e1e57612e1e612f12565b50506001821b61078c565b5060208310610133831016604e8410600b8410161715612e4c575081810a61078c565b612e568383612d84565b8060001904821115612e6a57612e6a612f12565b029392505050565b6000816000190483118215151615612e8c57612e8c612f12565b500290565b600082821015612ea357612ea3612f12565b500390565b600060ff821660ff841680821015612ec257612ec2612f12565b90039392505050565b60005b83811015612ee6578181015183820152602001612ece565b838111156113b35750506000910152565b6000600019821415612f0b57612f0b612f12565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461197757600080fd5b801515811461197757600080fd5b60ff8116811461197757600080fdfea26469706673582212202950cdc86cc3bae6a6c66aa941a42b775d747db5d4e530a17656992b03c1948e64736f6c63430008070033",
    "sourceMap": "1208:10376:50:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4658:123;;;;;;;;;;;;;:::i;:::-;;;22752:25:61;;;22740:2;22725:18;4658:123:50;;;;;;;;5628:353;;;;;;;;;;-1:-1:-1;5628:353:50;;;;;:::i;:::-;;:::i;1580:50::-;;;;;;;;;;-1:-1:-1;1580:50:50;;;;;;;;;;;;;;;;;;;28114:25:61;;;28170:2;28155:18;;28148:34;;;;28198:18;;;28191:34;28256:2;28241:18;;28234:34;28101:3;28086:19;1580:50:50;27883:391:61;10745:119:50;;;;;;;;;;-1:-1:-1;10745:119:50;;;;;:::i;:::-;;:::i;:::-;;8116:390;;;;;;;;;;-1:-1:-1;8116:390:50;;;;;:::i;:::-;;:::i;5262:119::-;;;;;;;;;;;;;:::i;10905:145::-;;;;;;;;;;-1:-1:-1;10905:145:50;;;;;:::i;:::-;;:::i;1777:42::-;;;;;;;;;;-1:-1:-1;1777:42:50;;;;-1:-1:-1;;;;;1777:42:50;;;;;;-1:-1:-1;;;;;10316:32:61;;;;10298:51;;10286:2;10271:18;1777:42:50;10152:203:61;4962:99:50;;;;;;;;;;-1:-1:-1;5041:6:50;:12;-1:-1:-1;;;;;5041:12:50;4962:99;;2071:101:18;;;;;;;;;;;;;:::i;6319:773:50:-;;;;;;;;;;-1:-1:-1;6319:773:50;;;;;:::i;:::-;;:::i;10581:123::-;;;;;;;;;;-1:-1:-1;10581:123:50;;;;;:::i;:::-;;:::i;1441:85:18:-;;;;;;;;;;-1:-1:-1;1513:6:18;;-1:-1:-1;;;;;1513:6:18;1441:85;;1490:36:50;;;;;;;;;;-1:-1:-1;1490:36:50;;;;;;;;;;;;;23364:25:61;;;23420:2;23405:18;;23398:34;;;;23337:18;1490:36:50;23153:285:61;827:675:47;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2150:2285:50:-;;;;;;;;;;-1:-1:-1;2150:2285:50;;;;;:::i;:::-;;:::i;:::-;;;14769:14:61;;14762:22;14744:41;;14732:2;14717:18;2150:2285:50;14604:187:61;4822:99:50;;;;;;;;;;-1:-1:-1;4901:6:50;:12;-1:-1:-1;;;;;4901:12:50;4822:99;;9955:552;;;;;;;;;;-1:-1:-1;9955:552:50;;;;;:::i;:::-;;:::i;5102:119::-;;;;;;;;;;;;;:::i;2722:389:48:-;;;;;;:::i;:::-;;:::i;11091:99:50:-;;;;;;;;;;;;;:::i;7514:561::-;;;;;;;;;;-1:-1:-1;7514:561:50;;;;;:::i;:::-;;:::i;8956:958::-;;;;;;;;;;-1:-1:-1;8956:958:50;;;;;:::i;:::-;;:::i;4508:109::-;;;;;;;;;;;;;:::i;8547:368::-;;;;;;;;;;-1:-1:-1;8547:368:50;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;5422:165::-;;;;;;;;;;;;;:::i;7133:297::-;;;;;;;;;;-1:-1:-1;7133:297:50;;;;;:::i;:::-;;:::i;6022:256::-;;;;;;;;;;-1:-1:-1;6022:256:50;;;;;:::i;:::-;;:::i;11408:173::-;;;;;;;;;;-1:-1:-1;11408:173:50;;;;;:::i;:::-;;:::i;2387:294:48:-;;;;;;:::i;:::-;;:::i;4658:123:50:-;4740:33;;-1:-1:-1;;;4740:33:50;;:19;:33;;;22752:25:61;-1:-1:-1;;4740:31:50;;;;22725:18:61;;4740:33:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4733:40;;4658:123;:::o;5628:353::-;5769:6;:12;5715:7;;-1:-1:-1;;;;;5755:26:50;;;5769:12;;5755:26;:218;;5897:76;;-1:-1:-1;;;5897:76:50;;5921:6;5897:76;;;24580:25:61;5929:6:50;24621:18:61;;;24614:34;24664:18;;;24657:34;;;5942:19:50;24707:18:61;;;24700:34;5963:9:50;24750:19:61;;;24743:35;5897:9:50;;:23;;24552:19:61;;5897:76:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5755:218;;;5801:76;;-1:-1:-1;;;5801:76:50;;5825:6;5801:76;;;24580:25:61;5833:6:50;24621:18:61;;;24614:34;24664:18;;;24657:34;;;5846:19:50;24707:18:61;;;24700:34;5867:9:50;24750:19:61;;;24743:35;5801:9:50;;:23;;24552:19:61;;5801:76:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5735:238;;5628:353;;;;;:::o;10745:119::-;1334:13:18;:11;:13::i;:::-;10824:32:50::1;::::0;-1:-1:-1;;;10824:32:50;;:9:::1;:32;::::0;::::1;23364:25:61::0;23405:18;;;23398:34;;;10824:20:50::1;::::0;::::1;::::0;23337:18:61;;10824:32:50::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;10745:119:::0;:::o;8116:390::-;8306:7;2505:21:20;:19;:21::i;:::-;8286:9:50::1;2064:25;2079:9;2064:14;:25::i;:::-;8326:58:::2;::::0;;;;;;;8369:6:::2;8326:58:::0;-1:-1:-1;;;;;8326:58:50;;::::2;::::0;;::::2;::::0;;;;;;;;;;;;;;;::::2;::::0;;8377:6:::2;8326:58:::0;;::::2;::::0;;-1:-1:-1;8326:58:50;-1:-1:-1;8326:58:50;;::::2;::::0;;;;-1:-1:-1;;8326:58:50;8490:7:::2;::::0;8404:94;;-1:-1:-1;;;8404:94:50;;8326:58;;8404:9:::2;::::0;:22:::2;::::0;:94:::2;::::0;8326:58;;8436:8;;8446:10;;8458:19:::2;::::0;8479:9:::2;::::0;8490:7;;;::::2;::::0;8404:94:::2;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8397:101;;;2536:1:20::1;2547:20:::0;1787:1;3053:7;:22;2873:209;2547:20;8116:390:50;;;;;:::o;5262:119::-;5349:24;;-1:-1:-1;;;5349:24:50;;:6;:24;;;22752:25:61;-1:-1:-1;;5349:22:50;;;;22725:18:61;;5349:24:50;22565:218:61;10905:145:50;1334:13:18;:11;:13::i;:::-;10996:46:50::1;::::0;-1:-1:-1;;;10996:46:50;;:19:::1;:46;::::0;::::1;23031:25:61::0;23072:18;;;23065:34;;;23115:18;;;23108:34;;;10996:25:50::1;::::0;::::1;::::0;23004:18:61;;10996:46:50::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;10905:145:::0;;:::o;2071:101:18:-;1334:13;:11;:13::i;:::-;2135:30:::1;2162:1;2135:18;:30::i;:::-;2071:101::o:0;6319:773:50:-;6532:6;:12;6471:7;;-1:-1:-1;;;;;6516:28:50;;;6532:12;;6516:28;:568;;7058:7;;6834:250;;6892:11;;6926:6;;6955;;6984:19;;7026:9;;-1:-1:-1;;;;;7058:7:50;6834:35;:250::i;6516:568::-;6788:7;;6564:250;;6622:11;;6656:6;;6685;;6714:19;;6756:9;;-1:-1:-1;;;;;6788:7:50;6564:35;:250::i;10581:123::-;1334:13:18;:11;:13::i;:::-;10662:34:50::1;::::0;-1:-1:-1;;;10662:34:50;;:9:::1;:34;::::0;::::1;23364:25:61::0;23405:18;;;23398:34;;;10662:21:50::1;::::0;-1:-1:-1;;23337:18:61;;10662:34:50::1;23153:285:61::0;827:675:47;905:22;962:5;950:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;940:35;;991:9;986:509;1006:16;;;986:509;;;1045:12;;1090:4;1109:5;;1115:1;1109:8;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;1082:36;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1044:74;;;;1140:7;1135:313;;1269:2;1253:6;:13;:18;1249:32;;;1273:8;;;1249:32;1354:4;1346:6;1342:17;1332:27;;1414:6;1403:28;;;;;;;;;;;;:::i;:::-;1396:36;;-1:-1:-1;;;1396:36:47;;;;;;;;:::i;:::-;;;;;;;;1135:313;1477:6;1464:7;1472:1;1464:10;;;;;;;;:::i;:::-;;;;;;:19;;;;1029:466;;1024:3;;;;;:::i;:::-;;;;986:509;;;;827:675;;;;:::o;2150:2285:50:-;2462:4;3291:13:19;;;;;;;3290:14;;3336:34;;;;-1:-1:-1;3354:12:19;;3369:1;3354:12;;;;:16;3336:34;3335:108;;;-1:-1:-1;3415:4:19;1476:19:27;:23;;;3376:66:19;;-1:-1:-1;3425:12:19;;;;;:17;3376:66;3314:201;;;;-1:-1:-1;;;3314:201:19;;19114:2:61;3314:201:19;;;19096:21:61;19153:2;19133:18;;;19126:30;19192:34;19172:18;;;19165:62;-1:-1:-1;;;19243:18:61;;;19236:44;19297:19;;3314:201:19;18912:410:61;3314:201:19;3525:12;:16;;-1:-1:-1;;3525:16:19;3540:1;3525:16;;;3551:65;;;;3585:13;:20;;-1:-1:-1;;3585:20:19;;;;;3551:65;2479:26:50::1;:24;:26::i;:::-;2516;:24;:26::i;:::-;2553:34;:32;:34::i;:::-;-1:-1:-1::0;;;;;2666:18:50;;::::1;::::0;;::::1;;;2658:47;;;::::0;-1:-1:-1;;;2658:47:50;;16674:2:61;2658:47:50::1;::::0;::::1;16656:21:61::0;16713:2;16693:18;;;16686:30;-1:-1:-1;;;16732:18:61;;;16725:46;16788:18;;2658:47:50::1;16472:340:61::0;2658:47:50::1;-1:-1:-1::0;;;;;2724:30:50;::::1;2716:61;;;::::0;-1:-1:-1;;;2716:61:50;;17726:2:61;2716:61:50::1;::::0;::::1;17708:21:61::0;17765:2;17745:18;;;17738:30;-1:-1:-1;;;17784:18:61;;;17777:48;17842:18;;2716:61:50::1;17524:342:61::0;2716:61:50::1;-1:-1:-1::0;;;;;2796:30:50;::::1;2788:61;;;::::0;-1:-1:-1;;;2788:61:50;;20235:2:61;2788:61:50::1;::::0;::::1;20217:21:61::0;20274:2;20254:18;;;20247:30;-1:-1:-1;;;20293:18:61;;;20286:48;20351:18;;2788:61:50::1;20033:342:61::0;2788:61:50::1;2900:26;2952:7;-1:-1:-1::0;;;;;2929:41:50::1;;:43;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2900:72;;3014:1;2991:20;:24;;;2983:33;;;::::0;::::1;;3036:161;::::0;;;;::::1;::::0;;;-1:-1:-1;;;;;3036:161:50;::::1;::::0;;::::1;::::0;::::1;3128:56;3164:20:::0;1630:2:49::1;3128:56:50;:::i;:::-;3123:62;::::0;:2:::1;:62;:::i;:::-;3036:161:::0;;3027:170;;:6:::1;:170:::0;;-1:-1:-1;;;;;;3027:170:50::1;-1:-1:-1::0;;;;;3027:170:50;;::::1;;::::0;;::::1;::::0;;::::1;::::0;;;3233:43:::1;::::0;;-1:-1:-1;;;3233:43:50;;;;-1:-1:-1;;3233:41:50;;::::1;::::0;-1:-1:-1;;3233:43:50::1;::::0;;::::1;::::0;;;;;;;:41;:43;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3210:66;;3312:1;3295:14;:18;;;3287:27;;;::::0;::::1;;3334:155;::::0;;;;::::1;::::0;;;-1:-1:-1;;;;;3334:155:50;::::1;::::0;;::::1;::::0;::::1;3426:50;3462:14:::0;1630:2:49::1;3426:50:50;:::i;:::-;3421:56;::::0;:2:::1;:56;:::i;:::-;3334:155:::0;;3325:164;;:6:::1;:164:::0;;-1:-1:-1;;;;;;3325:164:50::1;-1:-1:-1::0;;;;;3325:164:50;;::::1;::::0;;;::::1;::::0;;::::1;;::::0;-1:-1:-1;3325:164:50;34702:5:49::1;3563:20:50::0;::::1;3555:51;;;::::0;-1:-1:-1;;;3555:51:50;;18767:2:61;3555:51:50::1;::::0;::::1;18749:21:61::0;18806:2;18786:18;;;18779:30;-1:-1:-1;;;18825:18:61;;;18818:48;18883:18;;3555:51:50::1;18565:342:61::0;3555:51:50::1;3648:26;34660:3:49;3648:2:50::0;:26:::1;:::i;:::-;3617:19;:57:::0;3715:26:::1;34660:3:49;3715:2:50::0;:26:::1;:::i;:::-;3685:27:::0;:56;1946:5:49::1;3819:29:50::0;::::1;3811:62;;;::::0;-1:-1:-1;;;3811:62:50;;20582:2:61;3811:62:50::1;::::0;::::1;20564:21:61::0;20621:2;20601:18;;;20594:30;-1:-1:-1;;;20640:18:61;;;20633:50;20700:18;;3811:62:50::1;20380:344:61::0;3811:62:50::1;2240:6:49;3892:9:50;:35;3884:73;;;::::0;-1:-1:-1;;;3884:73:50;;17372:2:61;3884:73:50::1;::::0;::::1;17354:21:61::0;17411:2;17391:18;;;17384:30;17450:27;17430:18;;;17423:55;17495:18;;3884:73:50::1;17170:349:61::0;3884:73:50::1;3980:59;::::0;;;;::::1;::::0;;;;;;::::1;;::::0;;;3968:9:::1;:71:::0;;;;;;;4261:43:::1;4282:20:::0;4261:12:::1;:43::i;:::-;4232:7;:73:::0;;-1:-1:-1;;;;;;4232:73:50::1;-1:-1:-1::0;;;;;4232:73:50;;;::::1;::::0;;::::1;::::0;;4324:46:::1;::::0;-1:-1:-1;;;4324:46:50;;:18:::1;::::0;:46:::1;::::0;4343:11;;4356:13;;4324:46:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4316:87;;;::::0;-1:-1:-1;;;4316:87:50;;22410:2:61;4316:87:50::1;::::0;::::1;22392:21:61::0;22449:2;22429:18;;;22422:30;22488;22468:18;;;22461:58;22536:18;;4316:87:50::1;22208:352:61::0;4316:87:50::1;4423:4;4416:11;;;;3640:14:19::0;3636:99;;;3686:5;3670:21;;-1:-1:-1;;3670:21:19;;;3710:14;;-1:-1:-1;15408:36:61;;3710:14:19;;15396:2:61;15381:18;3710:14:19;;;;;;;3636:99;3258:483;2150:2285:50;;;;;;;;;;:::o;9955:552::-;10161:7;2505:21:20;:19;:21::i;:::-;10141:9:50::1;2064:25;2079:9;2064:14;:25::i;:::-;10181:58:::2;::::0;;;;;;;10224:6:::2;10181:58:::0;-1:-1:-1;;;;;10181:58:50;;::::2;::::0;;::::2;::::0;;;;;;;;;;;;;;;::::2;::::0;;10232:6:::2;10181:58:::0;;::::2;::::0;;-1:-1:-1;10181:58:50;-1:-1:-1;10181:58:50;;::::2;::::0;;;;-1:-1:-1;;10181:58:50;10477:7:::2;::::0;10272:227;;-1:-1:-1;;;10272:227:50;;10181:58;;10272:9:::2;::::0;:34:::2;::::0;:227:::2;::::0;10181:58;;10351:8;;10378:14;;10411:19:::2;::::0;10449:9:::2;::::0;10477:7;;;::::2;::::0;10272:227:::2;;;:::i;5102:119::-:0;5189:24;;-1:-1:-1;;;5189:24:50;;:6;:24;;;22752:25:61;-1:-1:-1;;5189:22:50;;;;22725:18:61;;5189:24:50;22565:218:61;2722:389:48;2956:51;;-1:-1:-1;;;2956:51:48;;2981:10;2956:51;;;10572:34:61;3001:4:48;10622:18:61;;;10615:43;2936:17:48;;-1:-1:-1;;;;;2956:24:48;;;;;10507:18:61;;2956:51:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2936:71;;3034:6;3022:9;:18;3018:85;;;3042:61;3053:6;3061:18;3070:9;3061:6;:18;:::i;:::-;3081:9;3092:2;3096;3100;3042:10;:61::i;:::-;2925:186;2722:389;;;;;;:::o;11091:99:50:-;1334:13:18;:11;:13::i;:::-;11151:31:50::1;::::0;-1:-1:-1;;;11151:31:50;;:19:::1;:31;::::0;::::1;22752:25:61::0;11151:29:50::1;::::0;::::1;::::0;22725:18:61;;11151:31:50::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;11091:99::o:0;7514:561::-;7703:7;2505:21:20;:19;:21::i;:::-;7683:9:50::1;2064:25;2079:9;2064:14;:25::i;:::-;7741:6:::2;:12:::0;-1:-1:-1;;;;;7727:26:50;;::::2;7741:12:::0;::::2;7727:26;7723:345;;;7777:75;::::0;-1:-1:-1;;;7777:75:50;;7792:6:::2;7777:75;::::0;::::2;25192:25:61::0;7800:6:50::2;25233:18:61::0;;;25226:34;25276:18;;;25269:34;;;25319:18;;;25312:34;;;7821:19:50::2;25362::61::0;;;25355:35;7842:9:50::2;25406:19:61::0;;;25399:35;7777:9:50::2;::::0;-1:-1:-1;;25164:19:61;;7777:75:50::2;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7770:82;;;;7723:345;7888:6;:12:::0;-1:-1:-1;;;;;7874:26:50;;::::2;7888:12:::0;::::2;7874:26;7870:198;;;7924:75;::::0;-1:-1:-1;;;7924:75:50;;7939:6:::2;7924:75;::::0;::::2;25192:25:61::0;7947:6:50::2;25233:18:61::0;;;25226:34;25276:18;;;25269:34;;;25319:18;;;25312:34;;;7968:19:50::2;25362::61::0;;;25355:35;7989:9:50::2;25406:19:61::0;;;25399:35;7924:9:50::2;::::0;-1:-1:-1;;25164:19:61;;7924:75:50::2;24789:651:61::0;7870:198:50::2;8032:24;::::0;-1:-1:-1;;;8032:24:50;;18073:2:61;8032:24:50::2;::::0;::::2;18055:21:61::0;18112:2;18092:18;;;18085:30;-1:-1:-1;;;18131:18:61;;;18124:44;18185:18;;8032:24:50::2;17871:338:61::0;7870:198:50::2;2536:1:20::1;2547:20:::0;1787:1;3053:7;:22;2873:209;2547:20;7514:561:50;;;;;;:::o;8956:958::-;9180:7;2505:21:20;:19;:21::i;:::-;9160:9:50::1;2064:25;2079:9;2064:14;:25::i;:::-;9221:6:::2;:12:::0;-1:-1:-1;;;;;9204:29:50;;::::2;9221:12:::0;::::2;9204:29;9200:707;;;9530:7;::::0;9274:282:::2;::::0;-1:-1:-1;;;9274:282:50;;::::2;::::0;::::2;27307:25:61::0;;;9365:6:50::2;27348:18:61::0;;;27341:34;9394:6:50::2;27391:18:61::0;;;27384:34;27434:18;;;27427:34;;;9456:19:50::2;27477::61::0;;;27470:35;9498:9:50::2;27521:19:61::0;;;27514:35;-1:-1:-1;;;;;9530:7:50;;::::2;27565:19:61::0;;;27558:61;9274:9:50::2;::::0;:33:::2;::::0;27279:19:61;;9274:282:50::2;26848:777:61::0;9200:707:50::2;9869:7;::::0;9613:282:::2;::::0;-1:-1:-1;;;9613:282:50;;::::2;::::0;::::2;27307:25:61::0;;;9704:6:50::2;27348:18:61::0;;;27341:34;9733:6:50::2;27391:18:61::0;;;27384:34;27434:18;;;27427:34;;;9795:19:50::2;27477::61::0;;;27470:35;9837:9:50::2;27521:19:61::0;;;27514:35;-1:-1:-1;;;;;9869:7:50;;::::2;27565:19:61::0;;;27558:61;9613:9:50::2;::::0;:33:::2;::::0;27279:19:61;;9613:282:50::2;26848:777:61::0;4508:109:50;4583:26;;-1:-1:-1;;;4583:26:50;;:19;:26;;;22752:25:61;-1:-1:-1;;4583:24:50;;;;22725:18:61;;4583:26:50;22565:218:61;8547:368:50;8736:17;;:::i;:::-;2505:21:20;:19;:21::i;:::-;8717:8:50::1;2064:25;2079:9;2064:14;:25::i;:::-;8766:58:::2;::::0;;;;;;;8809:6:::2;8766:58:::0;-1:-1:-1;;;;;8766:58:50;;::::2;::::0;;::::2;::::0;;;;;;;;;;;;;;;::::2;::::0;;8817:6:::2;8766:58:::0;;::::2;::::0;;-1:-1:-1;8766:58:50;-1:-1:-1;8766:58:50;;::::2;::::0;;;;-1:-1:-1;;8766:58:50;8899:7:::2;::::0;8844:63;;-1:-1:-1;;;8844:63:50;;8766:58;;8844:9:::2;::::0;-1:-1:-1;;8844:63:50::2;::::0;8870:6;;8766:58;;8887:10;;8899:7:::2;::::0;8844:63:::2;;;:::i;:::-;;::::0;::::2;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;5422:165::-:0;5571:7;;5508:71;;-1:-1:-1;;;5508:71:50;;5534:6;5508:71;;;24014:25:61;5542:6:50;24055:18:61;;;24048:34;5550:19:50;24098:18:61;;;24091:34;-1:-1:-1;;;;;5571:7:50;;;24141:18:61;;;24134:60;-1:-1:-1;;5508:9:50;;:25;;23986:19:61;;5508:71:50;23664:536:61;7133:297:50;7257:58;;;;;;;;7300:6;7257:58;-1:-1:-1;;;;;7257:58:50;;;;;;;;;;;;;;;;;;;;;;;;7308:6;7257:58;;;;;-1:-1:-1;7257:58:50;-1:-1:-1;7257:58:50;;;;;;;-1:-1:-1;;7257:58:50;7414:7;;7335:87;;-1:-1:-1;;;7335:87:50;;-1:-1:-1;;7335:9:50;;:30;;:87;;7257:58;;7375:7;;;;7384;;7393:19;;7414:7;;;7335:87;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7328:94;7133:297;-1:-1:-1;;;;;7133:297:50:o;6022:256::-;6104:17;;:::i;:::-;6134:58;;;;;;;;6177:6;6134:58;-1:-1:-1;;;;;6134:58:50;;;;;;;;;;;;;;;;;;;;;;;;6185:6;6134:58;;;;;-1:-1:-1;6134:58:50;-1:-1:-1;6134:58:50;;;;;;;-1:-1:-1;;6134:58:50;6262:7;;6210:60;;-1:-1:-1;;;6210:60:50;;6134:58;;6210:9;;-1:-1:-1;;6210:60:50;;6245:6;;6134:58;;6262:7;;;;;6210:60;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;11408:173::-;1334:13:18;:11;:13::i;:::-;11525:48:50::1;11562:10;11525:36;:48::i;:::-;11408:173:::0;:::o;2387:294:48:-;2588:85;;-1:-1:-1;;;2588:85:48;;2616:10;2588:85;;;11018:34:61;2636:4:48;11068:18:61;;;11061:43;11120:18;;;11113:34;;;11163:18;;;11156:34;;;11239:4;11227:17;;11206:19;;;11199:46;11261:19;;;11254:35;;;11305:19;;;11298:35;;;-1:-1:-1;;;;;2588:27:48;;;;;10952:19:61;;2588:85:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2387:294;;;;;;:::o;1599:130:18:-;1513:6;;-1:-1:-1;;;;;1513:6:18;929:10:28;1662:23:18;1654:68;;;;-1:-1:-1;;;1654:68:18;;19529:2:61;1654:68:18;;;19511:21:61;;;19548:18;;;19541:30;19607:34;19587:18;;;19580:62;19659:18;;1654:68:18;19327:356:61;2580:287:20;1830:1;2712:7;;:19;;2704:63;;;;-1:-1:-1;;;2704:63:20;;22050:2:61;2704:63:20;;;22032:21:61;22089:2;22069:18;;;22062:30;22128:33;22108:18;;;22101:61;22179:18;;2704:63:20;21848:355:61;2704:63:20;1830:1;2842:7;:18;2580:287::o;11234:133:50:-;11329:9;11310:15;:28;;11302:57;;;;-1:-1:-1;;;11302:57:50;;19890:2:61;11302:57:50;;;19872:21:61;19929:2;19909:18;;;19902:30;-1:-1:-1;;;19948:18:61;;;19941:46;20004:18;;11302:57:50;19688:340:61;2873:209:20;1787:1;3053:7;:22;2873:209::o;2673:187:18:-;2765:6;;;-1:-1:-1;;;;;2781:17:18;;;-1:-1:-1;;;;;;2781:17:18;;;;;;;2813:40;;2765:6;;;2781:17;2765:6;;2813:40;;-1:-1:-1;;2813:40:18;2736:124;2673:187;:::o;18322:618:49:-;18634:7;18655:23;18684:215;18725:11;18751:12;18778:16;18809:7;-1:-1:-1;;;;;18809:19:49;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;18845:19;18879:9;18684:26;:215::i;776:69:28:-;5363:13:19;;;;;;;5355:69;;;;-1:-1:-1;;;5355:69:19;;;;;;;:::i;1104:111:18:-;5363:13:19;;;;;;;5355:69;;;;-1:-1:-1;;;5355:69:19;;;;;;;:::i;:::-;1176:32:18::1;929:10:28::0;1176:18:18::1;:32::i;1985:109:20:-:0;5363:13:19;;;;;;;5355:69;;;;-1:-1:-1;;;5355:69:19;;;;;;;:::i;973:759:34:-;1030:16;1362:48;1344:14;1338:4;1334:25;1328:4;1324:36;1321:90;1315:4;1308:104;1569:32;1552:14;1546:4;1542:25;1539:63;1533:4;1526:77;1644:4;1638;1635:1;1628:21;1616:33;-1:-1:-1;;;;;;1676:22:34;;1668:57;;;;-1:-1:-1;;;1668:57:34;;18416:2:61;1668:57:34;;;18398:21:61;18455:2;18435:18;;;18428:30;-1:-1:-1;;;18474:18:61;;;18467:52;18536:18;;1668:57:34;18214:346:61;1668:57:34;973:759;;;:::o;2321:198:18:-;1334:13;:11;:13::i;:::-;-1:-1:-1;;;;;2409:22:18;::::1;2401:73;;;::::0;-1:-1:-1;;;2401:73:18;;16267:2:61;2401:73:18::1;::::0;::::1;16249:21:61::0;16306:2;16286:18;;;16279:30;16345:34;16325:18;;;16318:62;-1:-1:-1;;;16396:18:61;;;16389:36;16442:19;;2401:73:18::1;16065:402:61::0;2401:73:18::1;2484:28;2503:8;2484:18;:28::i;19523:852:49:-:0;19829:7;19838;19858:10;19879:12;19902:16;19954:228;19996:11;20022:12;20049:16;20080:11;20106:33;20119:19;20106:12;:33::i;:::-;20154:17;;19954:27;:228::i;:::-;20295:32;;;;19931:251;;-1:-1:-1;19931:251:49;;-1:-1:-1;19931:251:49;-1:-1:-1;20255:17:49;;19931:251;;20276:15;19931:251;;20276:15;:::i;:::-;20275:52;;;;:::i;:::-;:57;;;;:::i;:::-;20353:2;;;;-1:-1:-1;19523:852:49;;-1:-1:-1;;;;;;;;;;19523:852:49:o;36204:849::-;36310:16;;;;36380:12;;;;36277:7;;36310:16;36448:15;:20;-1:-1:-1;36444:602:49;;;36498:17;;;;36572:13;;36644:7;;;36640:353;;;36796:7;36801:2;36796;:7;:::i;:::-;36770:20;36788:2;36770:15;:20;:::i;:::-;36758:7;36763:2;36758;:7;:::i;:::-;36757:34;;;;:::i;:::-;36756:48;;;;:::i;:::-;36751:53;;:2;:53;:::i;:::-;36744:60;36204:849;-1:-1:-1;;;;;;36204:849:49:o;36640:353::-;36969:7;36974:2;36969;:7;:::i;:::-;36943:20;36961:2;36943:15;:20;:::i;:::-;36931:7;36936:2;36931;:7;:::i;:::-;36930:34;;;;:::i;:::-;36929:48;;;;:::i;:::-;36924:53;;:2;:53;:::i;20770:1815::-;21296:18;;21081:7;;;;;;;;21279:36;;-1:-1:-1;;;;;21296:18:49;21279:16;:36::i;:::-;21263:52;;21326:11;21340:44;21344:5;21351:12;:32;;;21340:3;:44::i;:::-;21430:22;;21326:58;;-1:-1:-1;21397:13:49;;21413:40;;-1:-1:-1;;;;;21430:22:49;21413:16;:40::i;:::-;21397:56;;21464:11;21478:48;21482:5;21489:16;:36;;;21478:3;:48::i;:::-;21582:46;;;;;;;;21539:40;21582:46;;;;;;;;;;;;;;;;;;;;;;;;;21639:21;;;21464:62;;-1:-1:-1;21766:26:49;21464:62;21776:3;21652:8;21766:4;:26::i;:::-;21759:1;:4;;:33;;;;;21841:11;21833:1;:4;;;21819:11;:18;;;;:::i;:::-;21818:34;;;;:::i;:::-;21810:4;;:43;;;;:::i;:::-;21803:4;;;:50;21874:18;;;;21866:55;;;;-1:-1:-1;;;21866:55:49;;17019:2:61;21866:55:49;;;17001:21:61;17058:2;17038:18;;;17031:30;17097:26;17077:18;;;17070:54;17141:18;;21866:55:49;16817:348:61;21866:55:49;21943:28;21949:1;:10;;;21961:3;21966:1;:4;;;21943:5;:28::i;:::-;21934:6;;;:37;22000:21;22013:7;22000:12;:21::i;:::-;21984:13;;;:37;;;22260:6;;;;22253:4;;22245;;;;22209:18;;1842:6;;21984:37;;22260:6;;22239:10;;:3;:10;:::i;:::-;22238:19;;;;:::i;:::-;:28;;;;:::i;:::-;22237:46;;;;:::i;:::-;22236:66;;;;:::i;:::-;22230:72;;:3;:72;:::i;:::-;22209:93;;22313:18;1842:6;22373:1;:13;;;22364:1;:4;;;22356:1;:4;;;22350:3;:10;;;;:::i;:::-;22349:19;;;;:::i;:::-;22342:27;;:3;:27;:::i;:::-;22341:45;;;;:::i;:::-;22340:65;;;;:::i;:::-;22334:71;;:3;:71;:::i;:::-;22313:92;;22418:10;22444:35;22450:1;:10;;;22462;22474:1;:4;;;22444:5;:35::i;:::-;22431:48;;:10;:48;:::i;:::-;22418:61;;22508:12;:32;;;22503:1;22498:2;:6;;;;:::i;:::-;22497:43;;;;:::i;:::-;22565:6;;;;;22492:48;;-1:-1:-1;22565:6:49;;-1:-1:-1;22573:3:49;;-1:-1:-1;;;;;;;20770:1815:49;;;;;;;;;;:::o;39424:130::-;39515:31;;-1:-1:-1;;;39515:31:49;;39540:4;39515:31;;;10298:51:61;39488:7:49;;-1:-1:-1;;;;;39515:16:49;;;;;10271:18:61;;39515:31:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;33956:146::-;34038:7;34065:29;34075:19;34065:7;:29;:::i;31940:1579::-;32052:7;;32084:13;32093:4;32084:6;:13;:::i;:::-;32072:25;-1:-1:-1;32112:6:49;32108:20;;32127:1;32120:8;;;;;32108:20;32141:13;32177:1;32141:13;32202:14;2394:1;32202;:14;:::i;:::-;32189:27;;32234:9;32229:983;2343:3;32249:1;:18;32229:983;;;32302:1;32397:19;2394:1;32397:6;:19;:::i;:::-;32386:6;32391:1;32386:2;:6;:::i;:::-;32385:32;;;;:::i;:::-;32380:37;-1:-1:-1;32449:17:49;2394:1;32449:4;:17;:::i;:::-;32438:6;32443:1;32438:2;:6;:::i;:::-;32437:30;;;;:::i;:::-;32432:35;;32492:1;32484:9;;32510:11;32571:1;2394;32551:2;:15;;;;:::i;:::-;34660:3;32526:6;32531:1;32526:2;:6;:::i;:::-;32525:22;;;;:::i;:::-;:42;;;;:::i;:::-;32524:48;;;;:::i;:::-;32510:62;-1:-1:-1;32587:13:49;32663:2;32645:14;2394:1;32658;32645:14;:::i;:::-;32644:21;;;;:::i;:::-;34660:3;32625:1;32605:16;34660:3;32605:2;:16;:::i;:::-;32604:22;;;;:::i;:::-;32603:38;;;;:::i;:::-;:62;;;;:::i;:::-;32587:78;-1:-1:-1;32684:11:49;32587:78;32684:3;:11;:::i;:::-;32680:15;-1:-1:-1;33140:16:49;32680:15;33150:5;33140:9;:16::i;:::-;33136:65;;;33184:1;33177:8;;;;;;;;;;;;33136:65;32274:938;;;32269:3;;;;;:::i;:::-;;;;32229:983;;;-1:-1:-1;33482:29:49;;-1:-1:-1;;;33482:29:49;;21702:2:61;33482:29:49;;;21684:21:61;21741:2;21721:18;;;21714:30;-1:-1:-1;;;21760:18:61;;;21753:49;21819:18;;33482:29:49;21500:343:61;25792:807:49;25902:7;;25945:19;2394:1;25945:6;:19;:::i;:::-;25935:5;25939:1;;25935:5;:::i;:::-;25934:31;;;;:::i;:::-;25922:43;-1:-1:-1;25988:6:49;25976:9;26018:14;2394:1;26018;:14;:::i;:::-;26005:27;-1:-1:-1;26074:15:49;2394:1;26005:27;26074:15;:::i;:::-;34660:3;26050:5;26054:1;26050;:5;:::i;:::-;:19;;;;:::i;:::-;26049:41;;;;:::i;:::-;26045:45;-1:-1:-1;26103:9:49;26140:2;26121:15;34660:3;26121:1;:15;:::i;:::-;26120:22;;;;:::i;:::-;26115:28;;:1;:28;:::i;:::-;26103:40;-1:-1:-1;26156:13:49;26192:1;26156:13;26204:337;2343:3;26224:1;:18;26204:337;;;26272:1;26264:9;;26288:11;26310:1;26306;26302;:5;;;;:::i;:::-;:9;;;;:::i;:::-;26288:23;-1:-1:-1;26326:13:49;26354:1;26350;26342:5;:1;26346;26342:5;:::i;:::-;:9;;;;:::i;:::-;:13;;;;:::i;:::-;26326:29;-1:-1:-1;26374:11:49;26326:29;26374:3;:11;:::i;:::-;26370:15;-1:-1:-1;26469:16:49;26370:15;26479:5;26469:9;:16::i;:::-;26465:65;;;26513:1;26506:8;;;;;;;;;;;;;26465:65;26249:292;;26244:3;;;;;:::i;:::-;;;;26204:337;;;-1:-1:-1;26551:40:49;;-1:-1:-1;;;26551:40:49;;20931:2:61;26551:40:49;;;20913:21:61;20970:2;20950:18;;;20943:30;21009:32;20989:18;;;20982:60;21059:18;;26551:40:49;20729:354:61;34292:117:49;34354:7;34381:20;2394:1;34381:7;:20;:::i;2283:117:46:-;2345:4;2390:1;2370:16;2381:1;2384;2370:10;:16::i;:::-;:21;;;2283:117;-1:-1:-1;;;2283:117:46:o;2614:165::-;2679:7;2707:1;2703;:5;2699:50;;;2732:5;2736:1;2732;:5;:::i;:::-;2725:12;;;;2699:50;2766:5;2770:1;2766;:5;:::i;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:374:61:-;84:8;94:6;148:3;141:4;133:6;129:17;125:27;115:55;;166:1;163;156:12;115:55;-1:-1:-1;189:20:61;;232:18;221:30;;218:50;;;264:1;261;254:12;218:50;301:4;293:6;289:17;277:29;;361:3;354:4;344:6;341:1;337:14;329:6;325:27;321:38;318:47;315:67;;;378:1;375;368:12;315:67;14:374;;;;;:::o;393:159::-;487:6;520:2;508:15;;505:24;-1:-1:-1;502:44:61;;;542:1;539;532:12;557:464;600:5;653:3;646:4;638:6;634:17;630:27;620:55;;671:1;668;661:12;620:55;707:6;694:20;738:49;754:32;783:2;754:32;:::i;:::-;738:49;:::i;:::-;812:2;803:7;796:19;858:3;851:4;846:2;838:6;834:15;830:26;827:35;824:55;;;875:1;872;865:12;824:55;940:2;933:4;925:6;921:17;914:4;905:7;901:18;888:55;988:1;963:16;;;981:4;959:27;952:38;;;;967:7;557:464;-1:-1:-1;;;557:464:61:o;1026:247::-;1085:6;1138:2;1126:9;1117:7;1113:23;1109:32;1106:52;;;1154:1;1151;1144:12;1106:52;1193:9;1180:23;1212:31;1237:5;1212:31;:::i;1278:659::-;1380:6;1388;1396;1404;1412;1420;1473:3;1461:9;1452:7;1448:23;1444:33;1441:53;;;1490:1;1487;1480:12;1441:53;1529:9;1516:23;1548:31;1573:5;1548:31;:::i;:::-;1598:5;-1:-1:-1;1650:2:61;1635:18;;1622:32;;-1:-1:-1;1701:2:61;1686:18;;1673:32;;-1:-1:-1;1757:2:61;1742:18;;1729:32;1770:31;1729:32;1770:31;:::i;:::-;1278:659;;;;-1:-1:-1;1278:659:61;;1874:3;1859:19;;1846:33;;1926:3;1911:19;;;1898:33;;-1:-1:-1;1278:659:61;-1:-1:-1;;1278:659:61:o;1942:455::-;2039:6;2047;2100:2;2088:9;2079:7;2075:23;2071:32;2068:52;;;2116:1;2113;2106:12;2068:52;2156:9;2143:23;2189:18;2181:6;2178:30;2175:50;;;2221:1;2218;2211:12;2175:50;2260:77;2329:7;2320:6;2309:9;2305:22;2260:77;:::i;:::-;2356:8;;2234:103;;-1:-1:-1;1942:455:61;-1:-1:-1;;;;1942:455:61:o;2402:372::-;2504:6;2512;2520;2573:3;2561:9;2552:7;2548:23;2544:33;2541:53;;;2590:1;2587;2580:12;2541:53;2613;2658:7;2647:9;2613:53;:::i;:::-;2603:63;2713:2;2698:18;;2685:32;;-1:-1:-1;2764:2:61;2749:18;;;2736:32;;2402:372;-1:-1:-1;;;2402:372:61:o;2779:798::-;2872:6;2925:2;2913:9;2904:7;2900:23;2896:32;2893:52;;;2941:1;2938;2931:12;2893:52;2990:7;2983:4;2972:9;2968:20;2964:34;2954:62;;3012:1;3009;3002:12;2954:62;3045:2;3039:9;3087:2;3079:6;3075:15;3156:6;3144:10;3141:22;3120:18;3108:10;3105:34;3102:62;3099:88;;;3167:18;;:::i;:::-;3207:10;3203:2;3196:22;;3238:6;3264:9;3308:7;3303:2;3292:9;3288:18;3285:31;3282:51;;;3329:1;3326;3319:12;3282:51;3351:1;3361:185;3375:4;3372:1;3369:11;3361:185;;;3434:10;;3422:23;;3468:4;3492:12;;;;3524;;;;3395:1;3388:9;3361:185;;;-1:-1:-1;3565:6:61;;2779:798;-1:-1:-1;;;;;2779:798:61:o;3582:573::-;3674:6;3682;3690;3743:2;3731:9;3722:7;3718:23;3714:32;3711:52;;;3759:1;3756;3749:12;3711:52;3799:9;3786:23;3832:18;3824:6;3821:30;3818:50;;;3864:1;3861;3854:12;3818:50;3903:77;3972:7;3963:6;3952:9;3948:22;3903:77;:::i;:::-;3999:8;;-1:-1:-1;3877:103:61;-1:-1:-1;;4084:2:61;4069:18;;4056:32;4097:28;4056:32;4097:28;:::i;:::-;4144:5;4134:15;;;3582:573;;;;;:::o;4160:245::-;4227:6;4280:2;4268:9;4259:7;4255:23;4251:32;4248:52;;;4296:1;4293;4286:12;4248:52;4328:9;4322:16;4347:28;4369:5;4347:28;:::i;4410:1229::-;4612:6;4620;4628;4636;4644;4652;4660;4668;4721:3;4709:9;4700:7;4696:23;4692:33;4689:53;;;4738:1;4735;4728:12;4689:53;4777:9;4764:23;4796:31;4821:5;4796:31;:::i;:::-;4846:5;-1:-1:-1;4903:2:61;4888:18;;4875:32;4916:33;4875:32;4916:33;:::i;:::-;4968:7;-1:-1:-1;5026:2:61;5011:18;;4998:32;5049:18;5079:14;;;5076:34;;;5106:1;5103;5096:12;5076:34;5129:50;5171:7;5162:6;5151:9;5147:22;5129:50;:::i;:::-;5119:60;;5232:2;5221:9;5217:18;5204:32;5188:48;;5261:2;5251:8;5248:16;5245:36;;;5277:1;5274;5267:12;5245:36;;5300:52;5344:7;5333:8;5322:9;5318:24;5300:52;:::i;:::-;5290:62;;;5399:3;5388:9;5384:19;5371:33;5361:43;;5451:3;5440:9;5436:19;5423:33;5413:43;;5503:3;5492:9;5488:19;5475:33;5465:43;;5560:3;5549:9;5545:19;5532:33;5574;5599:7;5574:33;:::i;:::-;5626:7;5616:17;;;4410:1229;;;;;;;;;;;:::o;5644:331::-;5728:6;5736;5789:2;5777:9;5768:7;5764:23;5760:32;5757:52;;;5805:1;5802;5795:12;5757:52;5844:9;5831:23;5863:31;5888:5;5863:31;:::i;:::-;5913:5;5965:2;5950:18;;;;5937:32;;-1:-1:-1;;;5644:331:61:o;5980:468::-;6082:6;6090;6098;6106;6159:3;6147:9;6138:7;6134:23;6130:33;6127:53;;;6176:1;6173;6166:12;6127:53;6215:9;6202:23;6234:31;6259:5;6234:31;:::i;:::-;6284:5;6336:2;6321:18;;6308:32;;-1:-1:-1;6387:2:61;6372:18;;6359:32;;6438:2;6423:18;6410:32;;-1:-1:-1;5980:468:61;-1:-1:-1;;;5980:468:61:o;6453:636::-;6533:6;6586:2;6574:9;6565:7;6561:23;6557:32;6554:52;;;6602:1;6599;6592:12;6554:52;6635:9;6629:16;6668:18;6660:6;6657:30;6654:50;;;6700:1;6697;6690:12;6654:50;6723:22;;6776:4;6768:13;;6764:27;-1:-1:-1;6754:55:61;;6805:1;6802;6795:12;6754:55;6834:2;6828:9;6859:49;6875:32;6904:2;6875:32;:::i;6859:49::-;6931:2;6924:5;6917:17;6971:7;6966:2;6961;6957;6953:11;6949:20;6946:33;6943:53;;;6992:1;6989;6982:12;6943:53;7005:54;7056:2;7051;7044:5;7040:14;7035:2;7031;7027:11;7005:54;:::i;7094:180::-;7153:6;7206:2;7194:9;7185:7;7181:23;7177:32;7174:52;;;7222:1;7219;7212:12;7174:52;-1:-1:-1;7245:23:61;;7094:180;-1:-1:-1;7094:180:61:o;7279:184::-;7349:6;7402:2;7390:9;7381:7;7377:23;7373:32;7370:52;;;7418:1;7415;7408:12;7370:52;-1:-1:-1;7441:16:61;;7279:184;-1:-1:-1;7279:184:61:o;7468:372::-;7570:6;7578;7586;7639:3;7627:9;7618:7;7614:23;7610:33;7607:53;;;7656:1;7653;7646:12;7607:53;7692:9;7679:23;7669:33;;7721:62;7775:7;7770:2;7759:9;7755:18;7721:62;:::i;:::-;7711:72;;7830:2;7819:9;7815:18;7802:32;7792:42;;7468:372;;;;;:::o;7845:331::-;7929:6;7937;7990:2;7978:9;7969:7;7965:23;7961:32;7958:52;;;8006:1;8003;7996:12;7958:52;8042:9;8029:23;8019:33;;8102:2;8091:9;8087:18;8074:32;8115:31;8140:5;8115:31;:::i;:::-;8165:5;8155:15;;;7845:331;;;;;:::o;8181:468::-;8283:6;8291;8299;8307;8360:3;8348:9;8339:7;8335:23;8331:33;8328:53;;;8377:1;8374;8367:12;8328:53;8413:9;8400:23;8390:33;;8473:2;8462:9;8458:18;8445:32;8486:31;8511:5;8486:31;:::i;:::-;8181:468;;8536:5;;-1:-1:-1;;;;8588:2:61;8573:18;;8560:32;;8639:2;8624:18;8611:32;;8181:468::o;8654:248::-;8722:6;8730;8783:2;8771:9;8762:7;8758:23;8754:32;8751:52;;;8799:1;8796;8789:12;8751:52;-1:-1:-1;;8822:23:61;;;8892:2;8877:18;;;8864:32;;-1:-1:-1;8654:248:61:o;8907:247::-;8975:6;9028:2;9016:9;9007:7;9003:23;8999:32;8996:52;;;9044:1;9041;9034:12;8996:52;9076:9;9070:16;9095:29;9118:5;9095:29;:::i;9159:450::-;9263:5;9286:1;9296:307;9310:4;9307:1;9304:11;9296:307;;;9367:13;;9409:9;;-1:-1:-1;;;;;9405:35:61;9393:48;;9464:4;9508:11;;;9502:18;9488:12;;;9481:40;9550:4;9541:14;;;;9578:15;;;;-1:-1:-1;9323:9:61;9296:307;;9614:257;9655:3;9693:5;9687:12;9720:6;9715:3;9708:19;9736:63;9792:6;9785:4;9780:3;9776:14;9769:4;9762:5;9758:16;9736:63;:::i;:::-;9853:2;9832:15;-1:-1:-1;;9828:29:61;9819:39;;;;9860:4;9815:50;;9614:257;-1:-1:-1;;9614:257:61:o;9876:271::-;10059:6;10051;10046:3;10033:33;10015:3;10085:16;;10110:13;;;10085:16;9876:271;-1:-1:-1;9876:271:61:o;11344:800::-;11504:4;11533:2;11573;11562:9;11558:18;11603:2;11592:9;11585:21;11626:6;11661;11655:13;11692:6;11684;11677:22;11730:2;11719:9;11715:18;11708:25;;11792:2;11782:6;11779:1;11775:14;11764:9;11760:30;11756:39;11742:53;;11830:2;11822:6;11818:15;11851:1;11861:254;11875:6;11872:1;11869:13;11861:254;;;11968:2;11964:7;11952:9;11944:6;11940:22;11936:36;11931:3;11924:49;11996:39;12028:6;12019;12013:13;11996:39;:::i;:::-;11986:49;-1:-1:-1;12093:12:61;;;;12058:15;;;;11897:1;11890:9;11861:254;;;-1:-1:-1;12132:6:61;;11344:800;-1:-1:-1;;;;;;;11344:800:61:o;12149:892::-;12667:3;12652:19;;12680:54;12656:9;12716:6;12680:54;:::i;:::-;12785:4;12777:6;12771:3;12760:9;12756:19;12743:47;12824:3;12809:19;;12859:18;;;;12908:3;12893:19;;12886:35;;;;12952:3;12937:19;;12930:35;;;;-1:-1:-1;;;;;13002:32:61;12996:3;12981:19;;;12974:61;12859:18;;-1:-1:-1;;12149:892:61:o;13046:1054::-;13475:4;13504:3;13516:54;13560:9;13552:6;13516:54;:::i;:::-;13601:3;13586:19;;13579:31;;;13626:18;;13619:34;;;13672:3;-1:-1:-1;;;;;13687:31:61;;13684:51;;;13731:1;13728;13721:12;13684:51;13765:6;13762:1;13758:14;13822:6;13814;13809:2;13798:9;13794:18;13781:48;13899:1;13852:22;;;13848:31;;;;13888:13;;;13964:14;;13957:22;13951:3;13936:19;;13929:51;-1:-1:-1;14011:3:61;13996:19;;13989:35;;;;-1:-1:-1;;;;;14061:32:61;14055:3;14040:19;;;14033:61;13848:31;;-1:-1:-1;;;13046:1054:61:o;14105:494::-;14285:2;14270:18;;14274:9;14365:6;14243:4;14399:194;14413:4;14410:1;14407:11;14399:194;;;14472:13;;14460:26;;14509:4;14533:12;;;;14568:15;;;;14433:1;14426:9;14399:194;;;14403:3;;;14105:494;;;;:::o;15455:219::-;15604:2;15593:9;15586:21;15567:4;15624:44;15664:2;15653:9;15649:18;15641:6;15624:44;:::i;15679:381::-;15876:2;15865:9;15858:21;15839:4;15902:44;15942:2;15931:9;15927:18;15919:6;15902:44;:::i;:::-;15994:9;15986:6;15982:22;15977:2;15966:9;15962:18;15955:50;16022:32;16047:6;16039;16022:32;:::i;21088:407::-;21290:2;21272:21;;;21329:2;21309:18;;;21302:30;21368:34;21363:2;21348:18;;21341:62;-1:-1:-1;;;21434:2:61;21419:18;;21412:41;21485:3;21470:19;;21088:407::o;25627:693::-;26048:25;;;26035:3;26020:19;;26082:63;26141:2;26126:18;;26118:6;26082:63;:::i;:::-;26196:4;26188:6;26182:3;26171:9;26167:19;26154:47;-1:-1:-1;;;;;26281:32:61;;;;26235:3;26220:19;;;;26270:44;26281:32;;-1:-1:-1;;;25627:693:61:o;26325:518::-;26670:25;;;26657:3;26642:19;;26704:63;26763:2;26748:18;;26740:6;26704:63;:::i;:::-;-1:-1:-1;;;;;26804:32:61;;;;-1:-1:-1;26783:19:61;;;;26776:61;26804:32;;-1:-1:-1;;26325:518:61:o;28279:521::-;28356:4;28362:6;28422:11;28409:25;28516:2;28512:7;28501:8;28485:14;28481:29;28477:43;28457:18;28453:68;28443:96;;28535:1;28532;28525:12;28443:96;28562:33;;28614:20;;;-1:-1:-1;28657:18:61;28646:30;;28643:50;;;28689:1;28686;28679:12;28643:50;28722:4;28710:17;;-1:-1:-1;28753:14:61;28749:27;;;28739:38;;28736:58;;;28790:1;28787;28780:12;28805:275;28876:2;28870:9;-1:-1:-1;;;28922:13:61;;28918:27;28906:40;;28997:22;;;28976:18;28961:34;;28958:62;28955:88;;;29023:18;;:::i;:::-;29059:2;29052:22;28805:275;;-1:-1:-1;28805:275:61:o;29085:187::-;29134:4;29167:18;29159:6;29156:30;29153:56;;;29189:18;;:::i;:::-;-1:-1:-1;29255:2:61;29234:15;-1:-1:-1;;29230:29:61;29261:4;29226:40;;29085:187::o;29277:128::-;29317:3;29348:1;29344:6;29341:1;29338:13;29335:39;;;29354:18;;:::i;:::-;-1:-1:-1;29390:9:61;;29277:128::o;29410:217::-;29450:1;29476;29466:132;;29520:10;29515:3;29511:20;29508:1;29501:31;29555:4;29552:1;29545:15;29583:4;29580:1;29573:15;29466:132;-1:-1:-1;29612:9:61;;29410:217::o;29632:422::-;29721:1;29764:5;29721:1;29778:270;29799:7;29789:8;29786:21;29778:270;;;29858:4;29854:1;29850:6;29846:17;29840:4;29837:27;29834:53;;;29867:18;;:::i;:::-;29917:7;29907:8;29903:22;29900:55;;;29937:16;;;;29900:55;30016:22;;;;29976:15;;;;29778:270;;;29782:3;29632:422;;;;;:::o;30059:140::-;30117:5;30146:47;30187:4;30177:8;30173:19;30167:4;30253:5;30283:8;30273:80;;-1:-1:-1;30324:1:61;30338:5;;30273:80;30372:4;30362:76;;-1:-1:-1;30409:1:61;30423:5;;30362:76;30454:4;30472:1;30467:59;;;;30540:1;30535:130;;;;30447:218;;30467:59;30497:1;30488:10;;30511:5;;;30535:130;30572:3;30562:8;30559:17;30556:43;;;30579:18;;:::i;:::-;-1:-1:-1;;30635:1:61;30621:16;;30650:5;;30447:218;;30749:2;30739:8;30736:16;30730:3;30724:4;30721:13;30717:36;30711:2;30701:8;30698:16;30693:2;30687:4;30684:12;30680:35;30677:77;30674:159;;;-1:-1:-1;30786:19:61;;;30818:5;;30674:159;30865:34;30890:8;30884:4;30865:34;:::i;:::-;30935:6;30931:1;30927:6;30923:19;30914:7;30911:32;30908:58;;;30946:18;;:::i;:::-;30984:20;;30204:806;-1:-1:-1;;;30204:806:61:o;31015:168::-;31055:7;31121:1;31117;31113:6;31109:14;31106:1;31103:21;31098:1;31091:9;31084:17;31080:45;31077:71;;;31128:18;;:::i;:::-;-1:-1:-1;31168:9:61;;31015:168::o;31188:125::-;31228:4;31256:1;31253;31250:8;31247:34;;;31261:18;;:::i;:::-;-1:-1:-1;31298:9:61;;31188:125::o;31318:195::-;31356:4;31393;31390:1;31386:12;31425:4;31422:1;31418:12;31450:3;31445;31442:12;31439:38;;;31457:18;;:::i;:::-;31494:13;;;31318:195;-1:-1:-1;;;31318:195:61:o;31518:258::-;31590:1;31600:113;31614:6;31611:1;31608:13;31600:113;;;31690:11;;;31684:18;31671:11;;;31664:39;31636:2;31629:10;31600:113;;;31731:6;31728:1;31725:13;31722:48;;;-1:-1:-1;;31766:1:61;31748:16;;31741:27;31518:258::o;31781:135::-;31820:3;-1:-1:-1;;31841:17:61;;31838:43;;;31861:18;;:::i;:::-;-1:-1:-1;31908:1:61;31897:13;;31781:135::o;31921:127::-;31982:10;31977:3;31973:20;31970:1;31963:31;32013:4;32010:1;32003:15;32037:4;32034:1;32027:15;32053:127;32114:10;32109:3;32105:20;32102:1;32095:31;32145:4;32142:1;32135:15;32169:4;32166:1;32159:15;32185:127;32246:10;32241:3;32237:20;32234:1;32227:31;32277:4;32274:1;32267:15;32301:4;32298:1;32291:15;32317:131;-1:-1:-1;;;;;32392:31:61;;32382:42;;32372:70;;32438:1;32435;32428:12;32453:118;32539:5;32532:13;32525:21;32518:5;32515:32;32505:60;;32561:1;32558;32551:12;32576:114;32660:4;32653:5;32649:16;32642:5;32639:27;32629:55;;32680:1;32677;32670:12",
    "linkReferences": {
      "src/tenderswap/SwapUtils.sol": {
        "SwapUtils": [
          {
            "start": 1467,
            "length": 20
          },
          {
            "start": 1656,
            "length": 20
          },
          {
            "start": 1820,
            "length": 20
          },
          {
            "start": 1975,
            "length": 20
          },
          {
            "start": 2164,
            "length": 20
          },
          {
            "start": 2345,
            "length": 20
          },
          {
            "start": 2423,
            "length": 20
          },
          {
            "start": 2655,
            "length": 20
          },
          {
            "start": 4656,
            "length": 20
          },
          {
            "start": 4736,
            "length": 20
          },
          {
            "start": 4970,
            "length": 20
          },
          {
            "start": 5148,
            "length": 20
          },
          {
            "start": 5344,
            "length": 20
          },
          {
            "start": 5514,
            "length": 20
          },
          {
            "start": 5596,
            "length": 20
          },
          {
            "start": 5685,
            "length": 20
          },
          {
            "start": 5833,
            "length": 20
          },
          {
            "start": 6016,
            "length": 20
          },
          {
            "start": 6139,
            "length": 20
          },
          {
            "start": 6376,
            "length": 20
          }
        ]
      }
    }
  },
  "methodIdentifiers": {
    "addLiquidity(uint256[2],uint256,uint256)": "46eda749",
    "amplificationParams()": "256967ac",
    "calculateRemoveLiquidity(uint256)": "f2fad2b6",
    "calculateRemoveLiquidityOneToken(uint256,address)": "805d2766",
    "calculateSwap(address,uint256)": "1de8d8cb",
    "calculateTokenAmount(uint256[],bool)": "e6ab2806",
    "feeParams()": "9242164f",
    "getA()": "d46300fd",
    "getAPrecise()": "0ba81959",
    "getToken0()": "ba94a315",
    "getToken0Balance()": "c2d9ecfa",
    "getToken1()": "6f26a710",
    "getToken1Balance()": "5153786b",
    "getVirtualPrice()": "e25aa5fa",
    "initialize(address,address,string,string,uint256,uint256,uint256,address)": "afcd5f4b",
    "lpToken()": "5fcbd285",
    "multicall(bytes[])": "ac9650d8",
    "owner()": "8da5cb5b",
    "rampA(uint256,uint256)": "593d132c",
    "removeLiquidity(uint256,uint256[2],uint256)": "d6f0df62",
    "removeLiquidityImbalance(uint256[2],uint256,uint256)": "bfc65c9b",
    "removeLiquidityOneToken(uint256,address,uint256,uint256)": "ce1fdb8b",
    "renounceOwnership()": "715018a6",
    "selfPermit(address,uint256,uint256,uint8,bytes32,bytes32)": "f3995c67",
    "selfPermitIfNecessary(address,uint256,uint256,uint8,bytes32,bytes32)": "c2e3140a",
    "setAdminFee(uint256)": "8beb60b6",
    "setSwapFee(uint256)": "34e19907",
    "stopRampA()": "c4db7fa0",
    "swap(address,uint256,uint256,uint256)": "c9ec9248",
    "transferOwnership(address)": "f2fde38b"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[2]\",\"name\":\"tokenAmounts\",\"type\":\"uint256[2]\"},{\"indexed\":false,\"internalType\":\"uint256[2]\",\"name\":\"fees\",\"type\":\"uint256[2]\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"invariant\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lpTokenSupply\",\"type\":\"uint256\"}],\"name\":\"AddLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newAdminFee\",\"type\":\"uint256\"}],\"name\":\"NewAdminFee\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newSwapFee\",\"type\":\"uint256\"}],\"name\":\"NewSwapFee\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldA\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newA\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"initialTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"futureTime\",\"type\":\"uint256\"}],\"name\":\"RampA\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[2]\",\"name\":\"tokenAmounts\",\"type\":\"uint256[2]\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lpTokenSupply\",\"type\":\"uint256\"}],\"name\":\"RemoveLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[2]\",\"name\":\"tokenAmounts\",\"type\":\"uint256[2]\"},{\"indexed\":false,\"internalType\":\"uint256[2]\",\"name\":\"fees\",\"type\":\"uint256[2]\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"invariant\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lpTokenSupply\",\"type\":\"uint256\"}],\"name\":\"RemoveLiquidityImbalance\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lpTokenAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lpTokenSupply\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"contract IERC20\",\"name\":\"tokenReceived\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"receivedAmount\",\"type\":\"uint256\"}],\"name\":\"RemoveLiquidityOne\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"currentA\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"StopRampA\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract IERC20\",\"name\":\"tokenSold\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountSold\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountReceived\",\"type\":\"uint256\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256[2]\",\"name\":\"_amounts\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256\",\"name\":\"_minToMint\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"amplificationParams\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"initialA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"futureA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"initialATime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"futureATime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"calculateRemoveLiquidity\",\"outputs\":[{\"internalType\":\"uint256[2]\",\"name\":\"\",\"type\":\"uint256[2]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"contract IERC20\",\"name\":\"tokenReceive\",\"type\":\"address\"}],\"name\":\"calculateRemoveLiquidityOneToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_tokenFrom\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_dx\",\"type\":\"uint256\"}],\"name\":\"calculateSwap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bool\",\"name\":\"deposit\",\"type\":\"bool\"}],\"name\":\"calculateTokenAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeParams\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"swapFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"adminFee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getA\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAPrecise\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getToken0\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getToken0Balance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getToken1\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getToken1Balance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVirtualPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_token0\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"_token1\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"lpTokenName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"lpTokenSymbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_a\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_adminFee\",\"type\":\"uint256\"},{\"internalType\":\"contract LiquidityPoolToken\",\"name\":\"lpTokenTargetAddress\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lpToken\",\"outputs\":[{\"internalType\":\"contract LiquidityPoolToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"_data\",\"type\":\"bytes[]\"}],\"name\":\"multicall\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"futureA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"futureTime\",\"type\":\"uint256\"}],\"name\":\"rampA\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256[2]\",\"name\":\"minAmounts\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[{\"internalType\":\"uint256[2]\",\"name\":\"\",\"type\":\"uint256[2]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[2]\",\"name\":\"_amounts\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256\",\"name\":\"_maxBurnAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidityImbalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"contract IERC20\",\"name\":\"_tokenReceive\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_minAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidityOneToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"_v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"_r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_s\",\"type\":\"bytes32\"}],\"name\":\"selfPermit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"_v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"_r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_s\",\"type\":\"bytes32\"}],\"name\":\"selfPermitIfNecessary\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newAdminFee\",\"type\":\"uint256\"}],\"name\":\"setAdminFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newSwapFee\",\"type\":\"uint256\"}],\"name\":\"setSwapFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopRampA\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_tokenFrom\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_dx\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minDy\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_deadline\",\"type\":\"uint256\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwnner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"TenderSwap is a light-weight StableSwap implementation for two assets. See the Curve StableSwap paper for more details (https://curve.fi/files/stableswap-paper.pdf). that trade 1:1 with eachother (e.g. USD stablecoins or tenderToken derivatives vs their underlying assets). It supports Elastic Supply ERC20 tokens, which are tokens of which the balances can change as the total supply of the token 'rebases'.\",\"kind\":\"dev\",\"methods\":{\"addLiquidity(uint256[2],uint256,uint256)\":{\"params\":{\"_amounts\":\"the amounts of each token to add, in their native precision          according to the cardinality of the pool [token0, token1]\",\"_deadline\":\"latest timestamp to accept this transaction\",\"_minToMint\":\"the minimum LP tokens adding this amount of liquidity should mint, otherwise revert. Handy for front-running mitigation\"},\"returns\":{\"_0\":\"amount of LP token user minted and received\"}},\"calculateRemoveLiquidity(uint256)\":{\"params\":{\"amount\":\"the amount of LP tokens that would be burned on withdrawal\"},\"returns\":{\"_0\":\"array of token balances that the user will receive\"}},\"calculateRemoveLiquidityOneToken(uint256,address)\":{\"params\":{\"tokenAmount\":\"the amount of LP token to burn\",\"tokenReceive\":\"the token to receive\"},\"returns\":{\"_0\":\"calculated amount of underlying token to be received. available to withdraw\"}},\"calculateSwap(address,uint256)\":{\"params\":{\"_dx\":\"the amount of tokens the user wants to sell. If the token charges a fee on transfers, use the amount that gets transferred after the fee.\",\"_tokenFrom\":\"the token the user wants to sell\"},\"returns\":{\"_0\":\"amount of tokens the user will receive\"}},\"calculateTokenAmount(uint256[],bool)\":{\"details\":\"This shouldn't be used outside frontends for user estimates.\",\"params\":{\"amounts\":\"an array of token amounts to deposit or withdrawal, corresponding to pool cardinality of [token0, token1]. The amount should be in each pooled token's native precision.\",\"deposit\":\"whether this is a deposit or a withdrawal\"},\"returns\":{\"_0\":\"token amount the user will receive\"}},\"getA()\":{\"details\":\"See the StableSwap paper for details\",\"returns\":{\"_0\":\"the amplifaction coefficient\"}},\"getAPrecise()\":{\"details\":\"See the StableSwap paper for details\",\"returns\":{\"_0\":\"A parameter in its raw precision form\"}},\"getToken0()\":{\"details\":\"EVM return type is IERC20\",\"returns\":{\"_0\":\"contract address\"}},\"getToken0Balance()\":{\"returns\":{\"_0\":\"current balance of the pooled tendertoken\"}},\"getToken1()\":{\"details\":\"EVM return type is IERC20\",\"returns\":{\"_0\":\"contract address\"}},\"getToken1Balance()\":{\"returns\":{\"_0\":\"current balance of the pooled underlying token\"}},\"getVirtualPrice()\":{\"returns\":{\"_0\":\"the override price, scaled to the POOL_PRECISION_DECIMALS\"}},\"initialize(address,address,string,string,uint256,uint256,uint256,address)\":{\"params\":{\"_a\":\"the amplification coefficient * n * (n - 1). See the StableSwap paper for details\",\"_adminFee\":\"default adminFee to be initialized with\",\"_fee\":\"default swap fee to be initialized with\",\"_token0\":\"First token in the pool\",\"_token1\":\"Second token in the pool\",\"lpTokenName\":\"the long-form name of the token to be deployed\",\"lpTokenSymbol\":\"the short symbol for the token to be deployed\",\"lpTokenTargetAddress\":\"the address of an existing LiquidityPoolToken contract to use as a target\"},\"returns\":{\"_0\":\"true is successfully initialized\"}},\"multicall(bytes[])\":{\"details\":\"The `msg.value` should not be trusted for any method callable from multicall.\",\"params\":{\"_data\":\"The encoded function data for each of the calls to make to this contract\"},\"returns\":{\"results\":\"The results from each of the calls passed in via data\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"rampA(uint256,uint256)\":{\"params\":{\"futureA\":\"the new A to ramp towards\",\"futureTime\":\"timestamp when the new A should be reached\"}},\"removeLiquidity(uint256,uint256[2],uint256)\":{\"details\":\"Liquidity can always be removed, even when the pool is paused.\",\"params\":{\"amount\":\"the amount of LP tokens to burn\",\"deadline\":\"latest timestamp to accept this transaction\",\"minAmounts\":\"the minimum amounts of each token in the pool        acceptable for this burn. Useful as a front-running mitigation        according to the cardinality of the pool [token0, token1]\"},\"returns\":{\"_0\":\"is the amounts of tokens user received\"}},\"removeLiquidityImbalance(uint256[2],uint256,uint256)\":{\"params\":{\"_amounts\":\"how much of each token to withdraw\",\"_deadline\":\"latest timestamp to accept this transaction\",\"_maxBurnAmount\":\"the max LP token provider is willing to pay to remove liquidity. Useful as a front-running mitigation.\"},\"returns\":{\"_0\":\"amount of LP tokens burned\"}},\"removeLiquidityOneToken(uint256,address,uint256,uint256)\":{\"params\":{\"_deadline\":\"latest timestamp to accept this transaction\",\"_minAmount\":\"the minimum amount to withdraw, otherwise revert\",\"_tokenAmount\":\"the amount of the token you want to receive\",\"_tokenReceive\":\"the  token you want to receive\"},\"returns\":{\"_0\":\"amount of chosen token user received\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"selfPermit(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"The `owner` is always msg.sender and the `spender` is always address(this).\",\"params\":{\"_deadline\":\"A timestamp, the current blocktime must be less than or equal to this timestamp\",\"_r\":\"Must produce valid secp256k1 signature from the holder along with `v` and `s`\",\"_s\":\"Must produce valid secp256k1 signature from the holder along with `r` and `v`\",\"_token\":\"The address of the token spent\",\"_v\":\"Must produce valid secp256k1 signature from the holder along with `r` and `s`\",\"_value\":\"The amount that can be spent of token\"}},\"selfPermitIfNecessary(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"The `owner` is always msg.sender and the `spender` is always address(this). Can be used instead of #selfPermit to prevent calls from failing due to a frontrun of a call to #selfPermit\",\"params\":{\"_deadline\":\"A timestamp, the current blocktime must be less than or equal to this timestamp\",\"_r\":\"Must produce valid secp256k1 signature from the holder along with `v` and `s`\",\"_s\":\"Must produce valid secp256k1 signature from the holder along with `r` and `v`\",\"_token\":\"The address of the token spent\",\"_v\":\"Must produce valid secp256k1 signature from the holder along with `r` and `s`\",\"_value\":\"The amount that can be spent of token\"}},\"setAdminFee(uint256)\":{\"params\":{\"newAdminFee\":\"new admin fee to be applied on future transactions\"}},\"setSwapFee(uint256)\":{\"params\":{\"newSwapFee\":\"new swap fee to be applied on future transactions\"}},\"swap(address,uint256,uint256,uint256)\":{\"details\":\"revert is token being sold is not in the pool.\",\"params\":{\"_deadline\":\"latest timestamp to accept this transaction\",\"_dx\":\"the amount of tokens the user wants to swap from\",\"_minDy\":\"the min amount the user would like to receive, or revert\",\"_tokenFrom\":\"the token the user wants to sell\"},\"returns\":{\"_0\":\"amount of tokens received\"}},\"transferOwnership(address)\":{\"params\":{\"_newOwner\":\"address of the new owner\"}}},\"stateVariables\":{\"lpToken\":{\"return\":\"lpTokenContract Liquidity pool token contract.\",\"returns\":{\"_0\":\"lpTokenContract Liquidity pool token contract.\"}}},\"title\":\"TenderSwap\",\"version\":1},\"userdoc\":{\"events\":{\"AddLiquidity(address,uint256[2],uint256[2],uint256,uint256)\":{\"notice\":\"AddLiquidity gets emitted when liquidity is added to the pool.\"},\"NewAdminFee(uint256)\":{\"notice\":\"NewAdminFee gets emitted when the admin fee is updated.\"},\"NewSwapFee(uint256)\":{\"notice\":\"NewSwapFee gets emitted when the swap fee is updated.\"},\"RampA(uint256,uint256,uint256,uint256)\":{\"notice\":\"RampA gets emitted when A has started ramping up.\"},\"RemoveLiquidity(address,uint256[2],uint256)\":{\"notice\":\"RemoveLiquidity gets emitted when liquidity for both tokens  is removed from the pool.\"},\"RemoveLiquidityImbalance(address,uint256[2],uint256[2],uint256,uint256)\":{\"notice\":\"RemoveLiquidityImbalance gets emitted when liquidity is removed weighted differently than the pool's current balances. with different weights than that of the pool.\"},\"RemoveLiquidityOne(address,uint256,uint256,address,uint256)\":{\"notice\":\"RemoveLiquidityOne gets emitted when single-sided liquidity is removed \"},\"StopRampA(uint256,uint256)\":{\"notice\":\"StopRampA gets emitted when ramping A is stopped manually\"},\"Swap(address,address,uint256,uint256)\":{\"notice\":\"Swap gets emitted when an accounts exchanges tokens.\"}},\"kind\":\"user\",\"methods\":{\"addLiquidity(uint256[2],uint256,uint256)\":{\"notice\":\"Add liquidity to the pool with the given amounts of tokens\"},\"calculateRemoveLiquidity(uint256)\":{\"notice\":\"A simple method to calculate amount of each underlying tokens that is returned upon burning given amount of LP tokens\"},\"calculateRemoveLiquidityOneToken(uint256,address)\":{\"notice\":\"Calculate the amount of underlying token available to withdraw when withdrawing via only single token\"},\"calculateSwap(address,uint256)\":{\"notice\":\"Calculate amount of tokens you receive on swap\"},\"calculateTokenAmount(uint256[],bool)\":{\"notice\":\"A simple method to calculate prices from deposits or withdrawals, excluding fees but including slippage. This is helpful as an input into the various \\\"min\\\" parameters on calls to fight front-running\"},\"getA()\":{\"notice\":\"Return A, the amplification coefficient * n * (n - 1)\"},\"getAPrecise()\":{\"notice\":\"Return A in its raw precision form\"},\"getToken0()\":{\"notice\":\"Returns the contract address for token0\"},\"getToken0Balance()\":{\"notice\":\"Return current balance of token0 (tender) in the pool\"},\"getToken1()\":{\"notice\":\"Returns the contract address for token1\"},\"getToken1Balance()\":{\"notice\":\"Return current balance of token1 (underlying) in the pool\"},\"getVirtualPrice()\":{\"notice\":\"Get the override price, to help calculate profit\"},\"initialize(address,address,string,string,uint256,uint256,uint256,address)\":{\"notice\":\"Initializes this Swap contract with the given parameters. This will also clone a LPToken contract that represents users' LP positions. The owner of LPToken will be this contract - which means only this contract is allowed to mint/burn tokens.\"},\"lpToken()\":{\"notice\":\"Returns the liquidity pool token contract.\"},\"multicall(bytes[])\":{\"notice\":\"Call multiple functions in the current contract and return the data from all of them if they all succeed\"},\"rampA(uint256,uint256)\":{\"notice\":\"Start ramping up or down A parameter towards given futureA and futureTime Checks if the change is too rapid, and commits the new A value only when it falls under the limit range.\"},\"removeLiquidity(uint256,uint256[2],uint256)\":{\"notice\":\"Burn LP tokens to remove liquidity from the pool.\"},\"removeLiquidityImbalance(uint256[2],uint256,uint256)\":{\"notice\":\"Remove liquidity from the pool, weighted differently than the pool's current balances.\"},\"removeLiquidityOneToken(uint256,address,uint256,uint256)\":{\"notice\":\"Remove liquidity from the pool all in one token.\"},\"selfPermit(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"Permits this contract to spend a given token from `msg.sender`\"},\"selfPermitIfNecessary(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"Permits this contract to spend a given token from `msg.sender`\"},\"setAdminFee(uint256)\":{\"notice\":\"Update the admin fee. Admin fee takes portion of the swap fee.\"},\"setSwapFee(uint256)\":{\"notice\":\"Update the swap fee to be applied on swaps\"},\"stopRampA()\":{\"notice\":\"Stop ramping A immediately. Reverts if ramp A is already stopped.\"},\"swap(address,uint256,uint256,uint256)\":{\"notice\":\"Swap two tokens using this pool\"},\"transferOwnership(address)\":{\"notice\":\"Changes the owner of the contract\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/tenderswap/TenderSwap.sol\":\"TenderSwap\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a\",\"dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x037c334add4b033ad3493038c25be1682d78c00992e1acb0e2795caff3925271\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8a313cf42389440e2706837c91370323b85971c06afd6d056d21e2bc86459618\",\"dweb:/ipfs/QmT8XUrUvQ9aZaPKrqgRU2JVGWnaxBcUYJA7Q7K5KcLBSZ\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0x2b3005a0064cfc558bdf64b2bae94b565f4574a536aadd61c13838d4f2157790\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://622c3eb87563e71585c9f538d1a196fe2d154dcc5b8f335e8770a8acc95e1f3a\",\"dweb:/ipfs/QmSnDqJJLzv3mirjGB1vrk5X7hegFdS7BKpscpxyqj7sWu\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0xb1d9e69cf8073efa574b31b1f840e20709139c19bfb27e60b16393d6073f3d42\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7c39b800e55781c0f7a644ec9cc615664dbe2f009198e537e6acaad3086ba093\",\"dweb:/ipfs/Qmaugq2wsB1ASX8Kv29NwXqYhZY8HRNqcdvmBe9UUNEq2V\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75b47c3aeca7b66ea6752f8be020ec5c1c502de6ec9065272dae23d3a52196e2\",\"dweb:/ipfs/QmUebPMHv16tYKFh5BmBQkMfRFb5b8UZ2RgVwdjxCeufVF\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":{\"keccak256\":\"0xea2c6f9d434127bf36b1e3e5ebaaf6d28a64dbaeea560508e570014e905a5ad2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3483370aa549810a946ace621a225616bb6d0b9ed22c3a99bbcf80dc4866ec39\",\"dweb:/ipfs/QmdgFnm6X2oQ574eJFLghVXVckwyC3SbiAUxXs934N1qvf\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"keccak256\":\"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d\",\"dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol\":{\"keccak256\":\"0xfe1053f3a6ee4527cde96c8152b8b1dbb98774639a64e819087bc80e618d7f7f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d60039d30fc910757604a2bd75969e47f64833981e66de1f5843a671167f386b\",\"dweb:/ipfs/QmU9d5yDZQpb572GxN1L7EPocjyLjrWksoE8AFb1SEVSUb\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/draft-IERC20PermitUpgradeable.sol\":{\"keccak256\":\"0xcc70d8e2281fb3ff69e8ab242500f10142cd0a7fa8dd9e45882be270d4d09024\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17a4063bc918df0f7bb9cbf04c6f0bb4977afab3f2fc212bc138a178312a221d\",\"dweb:/ipfs/QmZMdvsHP5mDEAAdrK4bNeNh47TfmSFgN9qEBFTbie7zmm\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06\",\"dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/CountersUpgradeable.sol\":{\"keccak256\":\"0x798741e231b22b81e2dd2eddaaf8832dee4baf5cd8e2dbaa5c1dd12a1c053c4d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c41e8a7a906b8f362c8b760a44edadc61782008ea2ecf377ac5b5325bf6c3912\",\"dweb:/ipfs/QmcXr19zuH3YLzD6RZNE6UTzvsKSckdxZQnagPoDGkCHu2\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0x6b9a5d35b744b25529a2856a8093e7c03fb35a34b1c4fb5499e560f8ade140da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://187b5c3a1c9e77678732a2cc5284237f9cfca6bc28ee8bc0a0f4f951d7b3a2f8\",\"dweb:/ipfs/Qmb2KFr7WuQu7btdCiftQG64vTzrG4UyzVmo53EYHcnHYA\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/ECDSAUpgradeable.sol\":{\"keccak256\":\"0x12f297cafe6e2847ae0378502f155654d0764b532a9873c8afe4350950fa7971\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://28074f6df7132e83819042a06ef75ae53c88c53c077b8222b9772b780d58bd58\",\"dweb:/ipfs/QmXXwSxWn4XGCy218fn3f2m3UmFNUiroeQ8sCR3vzNU6Wc\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/EIP712Upgradeable.sol\":{\"keccak256\":\"0x3017aded62c4a2b9707f5f06f92934e592c1c9b6f384b91b51340a6d5f841931\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb693afc2a614ec7afee965caaf5d53c3f32644e33286f60d17ae0e9aca84d44\",\"dweb:/ipfs/QmVJy43EBWvVT5NgpsV8WJfDHtZbnqZGMhmv1WbWaV5dJV\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0xc1bd5b53319c68f84e3becd75694d941e8f4be94049903232cd8bc7c535aaa5a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://056027a78e6f4b78a39be530983551651ee5a052e786ca2c1c6a3bb1222b03b4\",\"dweb:/ipfs/QmXRUpywAqNwAfXS89vrtiE2THRM9dX9pQ4QxAkV1Wx9kt\"]},\"lib/openzeppelin-contracts/contracts/proxy/Clones.sol\":{\"keccak256\":\"0x888d64d221d52c31d015b76e50ca1af5ef8ff076550810b49cea6b01d8267a10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4da0f451fe5aefdb95204dbec4a9448a8a2b00a444864bb5dbf7162da842a0f7\",\"dweb:/ipfs/QmYciAwNiJzgGMAqSTUANwMjy5HykNUvmkQ5PQhNTRqrB5\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5a7b96e511be78d5cdf635c784e6ab8cdd38625bb8cafb8a80914a1c89cf0f6\",\"dweb:/ipfs/QmVzTCwJxQAkjRQHboT5QrvsVJGWQHgfEjeTbvyxoKBrds\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"src/tenderswap/ITenderSwap.sol\":{\"keccak256\":\"0x366fd9dda7e43599b4b4483894c113a2b04a4e4dd525716b7bbe812acee4a920\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://23aaa5abe6f8a0f5a5649de2b1f3c1cd199fcd1d383bf2ea08c3c3ee81eb236b\",\"dweb:/ipfs/QmPi1PoyhqriCPgW3j7dpNiVJBvLwGQUftHd49jumbWrrx\"]},\"src/tenderswap/LiquidityPoolToken.sol\":{\"keccak256\":\"0xe3a13689f1edd25f26d28b18ea65512344a4dd3ac0e71c59d6ac2a93ee1c2b1a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5680de49d1616e7681eab73e23a7917bd9427ff2e103f2ef311a8ca82dd68909\",\"dweb:/ipfs/QmSrvimPs5eLr14wqP4i5hxs6FN9ZNEeaHnQ9m3FBrSyde\"]},\"src/tenderswap/MathUtils.sol\":{\"keccak256\":\"0xfa5186e7f90550daaa39b77032a7d58a3a9ac953ae746effa299eec54c0ce4bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fa2fdc7c6039b08536cf7067b8f3039f143e4f0b7b65b5ee899d64274e8853ec\",\"dweb:/ipfs/QmeMSHAsGTiX8GHe3FZ74N4PbTbhSBbbhENb1F9wB3p4tU\"]},\"src/tenderswap/Multicall.sol\":{\"keccak256\":\"0xe8cfe6ad2555d1d9ba68c1827c2ae1f00575bf36ea952d9cd81fcb4ab16be79f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://86c89055c5a46ca47d046b6b7d9d7c76126dcb785b87db4f6bcdc1e0ff126382\",\"dweb:/ipfs/QmZ27vdoCVNNS6DoEzSxU4zNtdfCr9KfmenjSYrHUbdEYK\"]},\"src/tenderswap/SelfPermit.sol\":{\"keccak256\":\"0xc6f923f33a71fbeabcb6524c11ecb3dcc328b8a7fc317d3363c80995df02464b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9a82827b2c9bbf575b316ef8da6cc4ed12aacf0504fc2bc4060c6a0b366d90b7\",\"dweb:/ipfs/QmVKaFUGuHHPttWVpGZS8ADX2iWihqsJrcSuRzdvBST7Jq\"]},\"src/tenderswap/SwapUtils.sol\":{\"keccak256\":\"0x989f69862a56517a14bcb42b179eeef94b0c0b6a81fb1de70626df6fb096121d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://af7ba80a5479e8ace0b8f4b3d994ef989047bbd0f406e7df4c9e2df35395092e\",\"dweb:/ipfs/QmbBwF3Z3WpLiMZkSTRV7tRYNL8e2hPrbr7iKrdetzd1HJ\"]},\"src/tenderswap/TenderSwap.sol\":{\"keccak256\":\"0xdd36b2c2ca2adfb3301e7f0f8d661607de1b97794876261548eeb8f342c5e4f2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0d39d354caf07be5df161039a899222f08c6c8e8f2f4c3a1077628cc03bf178c\",\"dweb:/ipfs/Qmf5Mp3Rc151KnLAbC7pk9rRrzVqZ8Bea7B9JwovHUopcB\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.7+commit.e28d00a7"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "provider",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256[2]",
              "name": "tokenAmounts",
              "type": "uint256[2]",
              "indexed": false
            },
            {
              "internalType": "uint256[2]",
              "name": "fees",
              "type": "uint256[2]",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "invariant",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "lpTokenSupply",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AddLiquidity",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "newAdminFee",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "NewAdminFee",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "newSwapFee",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "NewSwapFee",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "oldA",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "newA",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "initialTime",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "futureTime",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "RampA",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "provider",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256[2]",
              "name": "tokenAmounts",
              "type": "uint256[2]",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "lpTokenSupply",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "RemoveLiquidity",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "provider",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256[2]",
              "name": "tokenAmounts",
              "type": "uint256[2]",
              "indexed": false
            },
            {
              "internalType": "uint256[2]",
              "name": "fees",
              "type": "uint256[2]",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "invariant",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "lpTokenSupply",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "RemoveLiquidityImbalance",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "provider",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "lpTokenAmount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "lpTokenSupply",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "contract IERC20",
              "name": "tokenReceived",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "receivedAmount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "RemoveLiquidityOne",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "currentA",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "time",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "StopRampA",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "buyer",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "contract IERC20",
              "name": "tokenSold",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "amountSold",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "amountReceived",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Swap",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[2]",
              "name": "_amounts",
              "type": "uint256[2]"
            },
            {
              "internalType": "uint256",
              "name": "_minToMint",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_deadline",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addLiquidity",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "amplificationParams",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "initialA",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "futureA",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "initialATime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "futureATime",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "calculateRemoveLiquidity",
          "outputs": [
            {
              "internalType": "uint256[2]",
              "name": "",
              "type": "uint256[2]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenAmount",
              "type": "uint256"
            },
            {
              "internalType": "contract IERC20",
              "name": "tokenReceive",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "calculateRemoveLiquidityOneToken",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "_tokenFrom",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_dx",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "calculateSwap",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "amounts",
              "type": "uint256[]"
            },
            {
              "internalType": "bool",
              "name": "deposit",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "calculateTokenAmount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "feeParams",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "swapFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "adminFee",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getA",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getAPrecise",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getToken0",
          "outputs": [
            {
              "internalType": "contract IERC20",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getToken0Balance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getToken1",
          "outputs": [
            {
              "internalType": "contract IERC20",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getToken1Balance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getVirtualPrice",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "_token0",
              "type": "address"
            },
            {
              "internalType": "contract IERC20",
              "name": "_token1",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "lpTokenName",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "lpTokenSymbol",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "_a",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_fee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_adminFee",
              "type": "uint256"
            },
            {
              "internalType": "contract LiquidityPoolToken",
              "name": "lpTokenTargetAddress",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "lpToken",
          "outputs": [
            {
              "internalType": "contract LiquidityPoolToken",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes[]",
              "name": "_data",
              "type": "bytes[]"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "multicall",
          "outputs": [
            {
              "internalType": "bytes[]",
              "name": "results",
              "type": "bytes[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "futureA",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "futureTime",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "rampA"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256[2]",
              "name": "minAmounts",
              "type": "uint256[2]"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "removeLiquidity",
          "outputs": [
            {
              "internalType": "uint256[2]",
              "name": "",
              "type": "uint256[2]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256[2]",
              "name": "_amounts",
              "type": "uint256[2]"
            },
            {
              "internalType": "uint256",
              "name": "_maxBurnAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_deadline",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "removeLiquidityImbalance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenAmount",
              "type": "uint256"
            },
            {
              "internalType": "contract IERC20",
              "name": "_tokenReceive",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_minAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_deadline",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "removeLiquidityOneToken",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_value",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_deadline",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "_v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "_r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "_s",
              "type": "bytes32"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "selfPermit"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_value",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_deadline",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "_v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "_r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "_s",
              "type": "bytes32"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "selfPermitIfNecessary"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "newAdminFee",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setAdminFee"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "newSwapFee",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setSwapFee"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "stopRampA"
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "_tokenFrom",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_dx",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_minDy",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_deadline",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "swap",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_newOwnner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "addLiquidity(uint256[2],uint256,uint256)": {
            "params": {
              "_amounts": "the amounts of each token to add, in their native precision          according to the cardinality of the pool [token0, token1]",
              "_deadline": "latest timestamp to accept this transaction",
              "_minToMint": "the minimum LP tokens adding this amount of liquidity should mint, otherwise revert. Handy for front-running mitigation"
            },
            "returns": {
              "_0": "amount of LP token user minted and received"
            }
          },
          "calculateRemoveLiquidity(uint256)": {
            "params": {
              "amount": "the amount of LP tokens that would be burned on withdrawal"
            },
            "returns": {
              "_0": "array of token balances that the user will receive"
            }
          },
          "calculateRemoveLiquidityOneToken(uint256,address)": {
            "params": {
              "tokenAmount": "the amount of LP token to burn",
              "tokenReceive": "the token to receive"
            },
            "returns": {
              "_0": "calculated amount of underlying token to be received. available to withdraw"
            }
          },
          "calculateSwap(address,uint256)": {
            "params": {
              "_dx": "the amount of tokens the user wants to sell. If the token charges a fee on transfers, use the amount that gets transferred after the fee.",
              "_tokenFrom": "the token the user wants to sell"
            },
            "returns": {
              "_0": "amount of tokens the user will receive"
            }
          },
          "calculateTokenAmount(uint256[],bool)": {
            "details": "This shouldn't be used outside frontends for user estimates.",
            "params": {
              "amounts": "an array of token amounts to deposit or withdrawal, corresponding to pool cardinality of [token0, token1]. The amount should be in each pooled token's native precision.",
              "deposit": "whether this is a deposit or a withdrawal"
            },
            "returns": {
              "_0": "token amount the user will receive"
            }
          },
          "getA()": {
            "details": "See the StableSwap paper for details",
            "returns": {
              "_0": "the amplifaction coefficient"
            }
          },
          "getAPrecise()": {
            "details": "See the StableSwap paper for details",
            "returns": {
              "_0": "A parameter in its raw precision form"
            }
          },
          "getToken0()": {
            "details": "EVM return type is IERC20",
            "returns": {
              "_0": "contract address"
            }
          },
          "getToken0Balance()": {
            "returns": {
              "_0": "current balance of the pooled tendertoken"
            }
          },
          "getToken1()": {
            "details": "EVM return type is IERC20",
            "returns": {
              "_0": "contract address"
            }
          },
          "getToken1Balance()": {
            "returns": {
              "_0": "current balance of the pooled underlying token"
            }
          },
          "getVirtualPrice()": {
            "returns": {
              "_0": "the override price, scaled to the POOL_PRECISION_DECIMALS"
            }
          },
          "initialize(address,address,string,string,uint256,uint256,uint256,address)": {
            "params": {
              "_a": "the amplification coefficient * n * (n - 1). See the StableSwap paper for details",
              "_adminFee": "default adminFee to be initialized with",
              "_fee": "default swap fee to be initialized with",
              "_token0": "First token in the pool",
              "_token1": "Second token in the pool",
              "lpTokenName": "the long-form name of the token to be deployed",
              "lpTokenSymbol": "the short symbol for the token to be deployed",
              "lpTokenTargetAddress": "the address of an existing LiquidityPoolToken contract to use as a target"
            },
            "returns": {
              "_0": "true is successfully initialized"
            }
          },
          "multicall(bytes[])": {
            "details": "The `msg.value` should not be trusted for any method callable from multicall.",
            "params": {
              "_data": "The encoded function data for each of the calls to make to this contract"
            },
            "returns": {
              "results": "The results from each of the calls passed in via data"
            }
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "rampA(uint256,uint256)": {
            "params": {
              "futureA": "the new A to ramp towards",
              "futureTime": "timestamp when the new A should be reached"
            }
          },
          "removeLiquidity(uint256,uint256[2],uint256)": {
            "details": "Liquidity can always be removed, even when the pool is paused.",
            "params": {
              "amount": "the amount of LP tokens to burn",
              "deadline": "latest timestamp to accept this transaction",
              "minAmounts": "the minimum amounts of each token in the pool        acceptable for this burn. Useful as a front-running mitigation        according to the cardinality of the pool [token0, token1]"
            },
            "returns": {
              "_0": "is the amounts of tokens user received"
            }
          },
          "removeLiquidityImbalance(uint256[2],uint256,uint256)": {
            "params": {
              "_amounts": "how much of each token to withdraw",
              "_deadline": "latest timestamp to accept this transaction",
              "_maxBurnAmount": "the max LP token provider is willing to pay to remove liquidity. Useful as a front-running mitigation."
            },
            "returns": {
              "_0": "amount of LP tokens burned"
            }
          },
          "removeLiquidityOneToken(uint256,address,uint256,uint256)": {
            "params": {
              "_deadline": "latest timestamp to accept this transaction",
              "_minAmount": "the minimum amount to withdraw, otherwise revert",
              "_tokenAmount": "the amount of the token you want to receive",
              "_tokenReceive": "the  token you want to receive"
            },
            "returns": {
              "_0": "amount of chosen token user received"
            }
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
          },
          "selfPermit(address,uint256,uint256,uint8,bytes32,bytes32)": {
            "details": "The `owner` is always msg.sender and the `spender` is always address(this).",
            "params": {
              "_deadline": "A timestamp, the current blocktime must be less than or equal to this timestamp",
              "_r": "Must produce valid secp256k1 signature from the holder along with `v` and `s`",
              "_s": "Must produce valid secp256k1 signature from the holder along with `r` and `v`",
              "_token": "The address of the token spent",
              "_v": "Must produce valid secp256k1 signature from the holder along with `r` and `s`",
              "_value": "The amount that can be spent of token"
            }
          },
          "selfPermitIfNecessary(address,uint256,uint256,uint8,bytes32,bytes32)": {
            "details": "The `owner` is always msg.sender and the `spender` is always address(this). Can be used instead of #selfPermit to prevent calls from failing due to a frontrun of a call to #selfPermit",
            "params": {
              "_deadline": "A timestamp, the current blocktime must be less than or equal to this timestamp",
              "_r": "Must produce valid secp256k1 signature from the holder along with `v` and `s`",
              "_s": "Must produce valid secp256k1 signature from the holder along with `r` and `v`",
              "_token": "The address of the token spent",
              "_v": "Must produce valid secp256k1 signature from the holder along with `r` and `s`",
              "_value": "The amount that can be spent of token"
            }
          },
          "setAdminFee(uint256)": {
            "params": {
              "newAdminFee": "new admin fee to be applied on future transactions"
            }
          },
          "setSwapFee(uint256)": {
            "params": {
              "newSwapFee": "new swap fee to be applied on future transactions"
            }
          },
          "swap(address,uint256,uint256,uint256)": {
            "details": "revert is token being sold is not in the pool.",
            "params": {
              "_deadline": "latest timestamp to accept this transaction",
              "_dx": "the amount of tokens the user wants to swap from",
              "_minDy": "the min amount the user would like to receive, or revert",
              "_tokenFrom": "the token the user wants to sell"
            },
            "returns": {
              "_0": "amount of tokens received"
            }
          },
          "transferOwnership(address)": {
            "params": {
              "_newOwner": "address of the new owner"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "addLiquidity(uint256[2],uint256,uint256)": {
            "notice": "Add liquidity to the pool with the given amounts of tokens"
          },
          "calculateRemoveLiquidity(uint256)": {
            "notice": "A simple method to calculate amount of each underlying tokens that is returned upon burning given amount of LP tokens"
          },
          "calculateRemoveLiquidityOneToken(uint256,address)": {
            "notice": "Calculate the amount of underlying token available to withdraw when withdrawing via only single token"
          },
          "calculateSwap(address,uint256)": {
            "notice": "Calculate amount of tokens you receive on swap"
          },
          "calculateTokenAmount(uint256[],bool)": {
            "notice": "A simple method to calculate prices from deposits or withdrawals, excluding fees but including slippage. This is helpful as an input into the various \"min\" parameters on calls to fight front-running"
          },
          "getA()": {
            "notice": "Return A, the amplification coefficient * n * (n - 1)"
          },
          "getAPrecise()": {
            "notice": "Return A in its raw precision form"
          },
          "getToken0()": {
            "notice": "Returns the contract address for token0"
          },
          "getToken0Balance()": {
            "notice": "Return current balance of token0 (tender) in the pool"
          },
          "getToken1()": {
            "notice": "Returns the contract address for token1"
          },
          "getToken1Balance()": {
            "notice": "Return current balance of token1 (underlying) in the pool"
          },
          "getVirtualPrice()": {
            "notice": "Get the override price, to help calculate profit"
          },
          "initialize(address,address,string,string,uint256,uint256,uint256,address)": {
            "notice": "Initializes this Swap contract with the given parameters. This will also clone a LPToken contract that represents users' LP positions. The owner of LPToken will be this contract - which means only this contract is allowed to mint/burn tokens."
          },
          "lpToken()": {
            "notice": "Returns the liquidity pool token contract."
          },
          "multicall(bytes[])": {
            "notice": "Call multiple functions in the current contract and return the data from all of them if they all succeed"
          },
          "rampA(uint256,uint256)": {
            "notice": "Start ramping up or down A parameter towards given futureA and futureTime Checks if the change is too rapid, and commits the new A value only when it falls under the limit range."
          },
          "removeLiquidity(uint256,uint256[2],uint256)": {
            "notice": "Burn LP tokens to remove liquidity from the pool."
          },
          "removeLiquidityImbalance(uint256[2],uint256,uint256)": {
            "notice": "Remove liquidity from the pool, weighted differently than the pool's current balances."
          },
          "removeLiquidityOneToken(uint256,address,uint256,uint256)": {
            "notice": "Remove liquidity from the pool all in one token."
          },
          "selfPermit(address,uint256,uint256,uint8,bytes32,bytes32)": {
            "notice": "Permits this contract to spend a given token from `msg.sender`"
          },
          "selfPermitIfNecessary(address,uint256,uint256,uint8,bytes32,bytes32)": {
            "notice": "Permits this contract to spend a given token from `msg.sender`"
          },
          "setAdminFee(uint256)": {
            "notice": "Update the admin fee. Admin fee takes portion of the swap fee."
          },
          "setSwapFee(uint256)": {
            "notice": "Update the swap fee to be applied on swaps"
          },
          "stopRampA()": {
            "notice": "Stop ramping A immediately. Reverts if ramp A is already stopped."
          },
          "swap(address,uint256,uint256,uint256)": {
            "notice": "Swap two tokens using this pool"
          },
          "transferOwnership(address)": {
            "notice": "Changes the owner of the contract"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        ":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/tenderswap/TenderSwap.sol": "TenderSwap"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol": {
        "keccak256": "0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888",
        "urls": [
          "bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a",
          "dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x037c334add4b033ad3493038c25be1682d78c00992e1acb0e2795caff3925271",
        "urls": [
          "bzz-raw://8a313cf42389440e2706837c91370323b85971c06afd6d056d21e2bc86459618",
          "dweb:/ipfs/QmT8XUrUvQ9aZaPKrqgRU2JVGWnaxBcUYJA7Q7K5KcLBSZ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol": {
        "keccak256": "0x2b3005a0064cfc558bdf64b2bae94b565f4574a536aadd61c13838d4f2157790",
        "urls": [
          "bzz-raw://622c3eb87563e71585c9f538d1a196fe2d154dcc5b8f335e8770a8acc95e1f3a",
          "dweb:/ipfs/QmSnDqJJLzv3mirjGB1vrk5X7hegFdS7BKpscpxyqj7sWu"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol": {
        "keccak256": "0xb1d9e69cf8073efa574b31b1f840e20709139c19bfb27e60b16393d6073f3d42",
        "urls": [
          "bzz-raw://7c39b800e55781c0f7a644ec9cc615664dbe2f009198e537e6acaad3086ba093",
          "dweb:/ipfs/Qmaugq2wsB1ASX8Kv29NwXqYhZY8HRNqcdvmBe9UUNEq2V"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/IERC20Upgradeable.sol": {
        "keccak256": "0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff",
        "urls": [
          "bzz-raw://75b47c3aeca7b66ea6752f8be020ec5c1c502de6ec9065272dae23d3a52196e2",
          "dweb:/ipfs/QmUebPMHv16tYKFh5BmBQkMfRFb5b8UZ2RgVwdjxCeufVF"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/ERC20BurnableUpgradeable.sol": {
        "keccak256": "0xea2c6f9d434127bf36b1e3e5ebaaf6d28a64dbaeea560508e570014e905a5ad2",
        "urls": [
          "bzz-raw://3483370aa549810a946ace621a225616bb6d0b9ed22c3a99bbcf80dc4866ec39",
          "dweb:/ipfs/QmdgFnm6X2oQ574eJFLghVXVckwyC3SbiAUxXs934N1qvf"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/IERC20MetadataUpgradeable.sol": {
        "keccak256": "0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb",
        "urls": [
          "bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d",
          "dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol": {
        "keccak256": "0xfe1053f3a6ee4527cde96c8152b8b1dbb98774639a64e819087bc80e618d7f7f",
        "urls": [
          "bzz-raw://d60039d30fc910757604a2bd75969e47f64833981e66de1f5843a671167f386b",
          "dweb:/ipfs/QmU9d5yDZQpb572GxN1L7EPocjyLjrWksoE8AFb1SEVSUb"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/draft-IERC20PermitUpgradeable.sol": {
        "keccak256": "0xcc70d8e2281fb3ff69e8ab242500f10142cd0a7fa8dd9e45882be270d4d09024",
        "urls": [
          "bzz-raw://17a4063bc918df0f7bb9cbf04c6f0bb4977afab3f2fc212bc138a178312a221d",
          "dweb:/ipfs/QmZMdvsHP5mDEAAdrK4bNeNh47TfmSFgN9qEBFTbie7zmm"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183",
        "urls": [
          "bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06",
          "dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/CountersUpgradeable.sol": {
        "keccak256": "0x798741e231b22b81e2dd2eddaaf8832dee4baf5cd8e2dbaa5c1dd12a1c053c4d",
        "urls": [
          "bzz-raw://c41e8a7a906b8f362c8b760a44edadc61782008ea2ecf377ac5b5325bf6c3912",
          "dweb:/ipfs/QmcXr19zuH3YLzD6RZNE6UTzvsKSckdxZQnagPoDGkCHu2"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/StringsUpgradeable.sol": {
        "keccak256": "0x6b9a5d35b744b25529a2856a8093e7c03fb35a34b1c4fb5499e560f8ade140da",
        "urls": [
          "bzz-raw://187b5c3a1c9e77678732a2cc5284237f9cfca6bc28ee8bc0a0f4f951d7b3a2f8",
          "dweb:/ipfs/Qmb2KFr7WuQu7btdCiftQG64vTzrG4UyzVmo53EYHcnHYA"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/ECDSAUpgradeable.sol": {
        "keccak256": "0x12f297cafe6e2847ae0378502f155654d0764b532a9873c8afe4350950fa7971",
        "urls": [
          "bzz-raw://28074f6df7132e83819042a06ef75ae53c88c53c077b8222b9772b780d58bd58",
          "dweb:/ipfs/QmXXwSxWn4XGCy218fn3f2m3UmFNUiroeQ8sCR3vzNU6Wc"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/EIP712Upgradeable.sol": {
        "keccak256": "0x3017aded62c4a2b9707f5f06f92934e592c1c9b6f384b91b51340a6d5f841931",
        "urls": [
          "bzz-raw://bb693afc2a614ec7afee965caaf5d53c3f32644e33286f60d17ae0e9aca84d44",
          "dweb:/ipfs/QmVJy43EBWvVT5NgpsV8WJfDHtZbnqZGMhmv1WbWaV5dJV"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/math/MathUpgradeable.sol": {
        "keccak256": "0xc1bd5b53319c68f84e3becd75694d941e8f4be94049903232cd8bc7c535aaa5a",
        "urls": [
          "bzz-raw://056027a78e6f4b78a39be530983551651ee5a052e786ca2c1c6a3bb1222b03b4",
          "dweb:/ipfs/QmXRUpywAqNwAfXS89vrtiE2THRM9dX9pQ4QxAkV1Wx9kt"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/Clones.sol": {
        "keccak256": "0x888d64d221d52c31d015b76e50ca1af5ef8ff076550810b49cea6b01d8267a10",
        "urls": [
          "bzz-raw://4da0f451fe5aefdb95204dbec4a9448a8a2b00a444864bb5dbf7162da842a0f7",
          "dweb:/ipfs/QmYciAwNiJzgGMAqSTUANwMjy5HykNUvmkQ5PQhNTRqrB5"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
        "keccak256": "0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329",
        "urls": [
          "bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95",
          "dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238",
        "urls": [
          "bzz-raw://f5a7b96e511be78d5cdf635c784e6ab8cdd38625bb8cafb8a80914a1c89cf0f6",
          "dweb:/ipfs/QmVzTCwJxQAkjRQHboT5QrvsVJGWQHgfEjeTbvyxoKBrds"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1",
        "urls": [
          "bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269",
          "dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj"
        ],
        "license": "MIT"
      },
      "src/tenderswap/ITenderSwap.sol": {
        "keccak256": "0x366fd9dda7e43599b4b4483894c113a2b04a4e4dd525716b7bbe812acee4a920",
        "urls": [
          "bzz-raw://23aaa5abe6f8a0f5a5649de2b1f3c1cd199fcd1d383bf2ea08c3c3ee81eb236b",
          "dweb:/ipfs/QmPi1PoyhqriCPgW3j7dpNiVJBvLwGQUftHd49jumbWrrx"
        ],
        "license": "MIT"
      },
      "src/tenderswap/LiquidityPoolToken.sol": {
        "keccak256": "0xe3a13689f1edd25f26d28b18ea65512344a4dd3ac0e71c59d6ac2a93ee1c2b1a",
        "urls": [
          "bzz-raw://5680de49d1616e7681eab73e23a7917bd9427ff2e103f2ef311a8ca82dd68909",
          "dweb:/ipfs/QmSrvimPs5eLr14wqP4i5hxs6FN9ZNEeaHnQ9m3FBrSyde"
        ],
        "license": "MIT"
      },
      "src/tenderswap/MathUtils.sol": {
        "keccak256": "0xfa5186e7f90550daaa39b77032a7d58a3a9ac953ae746effa299eec54c0ce4bb",
        "urls": [
          "bzz-raw://fa2fdc7c6039b08536cf7067b8f3039f143e4f0b7b65b5ee899d64274e8853ec",
          "dweb:/ipfs/QmeMSHAsGTiX8GHe3FZ74N4PbTbhSBbbhENb1F9wB3p4tU"
        ],
        "license": "MIT"
      },
      "src/tenderswap/Multicall.sol": {
        "keccak256": "0xe8cfe6ad2555d1d9ba68c1827c2ae1f00575bf36ea952d9cd81fcb4ab16be79f",
        "urls": [
          "bzz-raw://86c89055c5a46ca47d046b6b7d9d7c76126dcb785b87db4f6bcdc1e0ff126382",
          "dweb:/ipfs/QmZ27vdoCVNNS6DoEzSxU4zNtdfCr9KfmenjSYrHUbdEYK"
        ],
        "license": "MIT"
      },
      "src/tenderswap/SelfPermit.sol": {
        "keccak256": "0xc6f923f33a71fbeabcb6524c11ecb3dcc328b8a7fc317d3363c80995df02464b",
        "urls": [
          "bzz-raw://9a82827b2c9bbf575b316ef8da6cc4ed12aacf0504fc2bc4060c6a0b366d90b7",
          "dweb:/ipfs/QmVKaFUGuHHPttWVpGZS8ADX2iWihqsJrcSuRzdvBST7Jq"
        ],
        "license": "MIT"
      },
      "src/tenderswap/SwapUtils.sol": {
        "keccak256": "0x989f69862a56517a14bcb42b179eeef94b0c0b6a81fb1de70626df6fb096121d",
        "urls": [
          "bzz-raw://af7ba80a5479e8ace0b8f4b3d994ef989047bbd0f406e7df4c9e2df35395092e",
          "dweb:/ipfs/QmbBwF3Z3WpLiMZkSTRV7tRYNL8e2hPrbr7iKrdetzd1HJ"
        ],
        "license": "MIT"
      },
      "src/tenderswap/TenderSwap.sol": {
        "keccak256": "0xdd36b2c2ca2adfb3301e7f0f8d661607de1b97794876261548eeb8f342c5e4f2",
        "urls": [
          "bzz-raw://0d39d354caf07be5df161039a899222f08c6c8e8f2f4c3a1077628cc03bf178c",
          "dweb:/ipfs/Qmf5Mp3Rc151KnLAbC7pk9rRrzVqZ8Bea7B9JwovHUopcB"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/tenderswap/TenderSwap.sol",
    "id": 38137,
    "exportedSymbols": {
      "Address": [
        33173
      ],
      "AddressUpgradeable": [
        30089
      ],
      "Clones": [
        31836
      ],
      "ContextUpgradeable": [
        30131
      ],
      "CountersUpgradeable": [
        30205
      ],
      "ECDSAUpgradeable": [
        30741
      ],
      "EIP712Upgradeable": [
        30891
      ],
      "ERC20BurnableUpgradeable": [
        29553
      ],
      "ERC20PermitUpgradeable": [
        29769
      ],
      "ERC20Upgradeable": [
        29411
      ],
      "IERC20": [
        32501
      ],
      "IERC20Decimals": [
        37324
      ],
      "IERC20MetadataUpgradeable": [
        29578
      ],
      "IERC20Permit": [
        32562
      ],
      "IERC20PermitUpgradeable": [
        29805
      ],
      "IERC20Upgradeable": [
        29489
      ],
      "ITenderSwap": [
        33950
      ],
      "Initializable": [
        28726
      ],
      "LiquidityPoolToken": [
        34020
      ],
      "MathUpgradeable": [
        31756
      ],
      "MathUtils": [
        34143
      ],
      "Multicall": [
        34237
      ],
      "OwnableUpgradeable": [
        28557
      ],
      "ReentrancyGuardUpgradeable": [
        28799
      ],
      "SafeERC20": [
        32843
      ],
      "SelfPermit": [
        34360
      ],
      "StringsUpgradeable": [
        30380
      ],
      "SwapUtils": [
        37303
      ],
      "TenderSwap": [
        38136
      ]
    },
    "nodeType": "SourceUnit",
    "src": "98:11488:50",
    "nodes": [
      {
        "id": 37305,
        "nodeType": "PragmaDirective",
        "src": "98:23:50",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 37306,
        "nodeType": "ImportDirective",
        "src": "125:65:50",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 38137,
        "sourceUnit": 32844,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 37307,
        "nodeType": "ImportDirective",
        "src": "192:85:50",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 38137,
        "sourceUnit": 28800,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 37308,
        "nodeType": "ImportDirective",
        "src": "279:50:50",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/proxy/Clones.sol",
        "file": "@openzeppelin/contracts/proxy/Clones.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 38137,
        "sourceUnit": 31837,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 37309,
        "nodeType": "ImportDirective",
        "src": "331:75:50",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 38137,
        "sourceUnit": 28558,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 37311,
        "nodeType": "ImportDirective",
        "src": "410:44:50",
        "nodes": [],
        "absolutePath": "src/tenderswap/Multicall.sol",
        "file": "./Multicall.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 38137,
        "sourceUnit": 34238,
        "symbolAliases": [
          {
            "foreign": {
              "id": 37310,
              "name": "Multicall",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "419:9:50",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 37313,
        "nodeType": "ImportDirective",
        "src": "456:46:50",
        "nodes": [],
        "absolutePath": "src/tenderswap/SelfPermit.sol",
        "file": "./SelfPermit.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 38137,
        "sourceUnit": 34361,
        "symbolAliases": [
          {
            "foreign": {
              "id": 37312,
              "name": "SelfPermit",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "465:10:50",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 37314,
        "nodeType": "ImportDirective",
        "src": "506:34:50",
        "nodes": [],
        "absolutePath": "src/tenderswap/LiquidityPoolToken.sol",
        "file": "./LiquidityPoolToken.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 38137,
        "sourceUnit": 34021,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 37315,
        "nodeType": "ImportDirective",
        "src": "542:25:50",
        "nodes": [],
        "absolutePath": "src/tenderswap/SwapUtils.sol",
        "file": "./SwapUtils.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 38137,
        "sourceUnit": 37304,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 37316,
        "nodeType": "ImportDirective",
        "src": "569:27:50",
        "nodes": [],
        "absolutePath": "src/tenderswap/ITenderSwap.sol",
        "file": "./ITenderSwap.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 38137,
        "sourceUnit": 33951,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 37324,
        "nodeType": "ContractDefinition",
        "src": "641:95:50",
        "nodes": [
          {
            "id": 37323,
            "nodeType": "FunctionDefinition",
            "src": "683:50:50",
            "nodes": [],
            "functionSelector": "313ce567",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "decimals",
            "nameLocation": "692:8:50",
            "parameters": {
              "id": 37319,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "700:2:50"
            },
            "returnParameters": {
              "id": 37322,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37321,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 37323,
                  "src": "726:5:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 37320,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "726:5:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "725:7:50"
            },
            "scope": 37324,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 37317,
              "name": "IERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 32501,
              "src": "669:6:50"
            },
            "id": 37318,
            "nodeType": "InheritanceSpecifier",
            "src": "669:6:50"
          }
        ],
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          37324,
          32501
        ],
        "name": "IERC20Decimals",
        "nameLocation": "651:14:50",
        "scope": 38137,
        "usedErrors": []
      },
      {
        "id": 38136,
        "nodeType": "ContractDefinition",
        "src": "1208:10376:50",
        "nodes": [
          {
            "id": 37339,
            "nodeType": "UsingForDirective",
            "src": "1321:44:50",
            "nodes": [],
            "libraryName": {
              "id": 37336,
              "name": "SwapUtils",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 37303,
              "src": "1327:9:50"
            },
            "typeName": {
              "id": 37338,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 37337,
                "name": "SwapUtils.Amplification",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 36920,
                "src": "1341:23:50"
              },
              "referencedDeclaration": 36920,
              "src": "1341:23:50",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Amplification_$36920_storage_ptr",
                "typeString": "struct SwapUtils.Amplification"
              }
            }
          },
          {
            "id": 37343,
            "nodeType": "UsingForDirective",
            "src": "1371:42:50",
            "nodes": [],
            "libraryName": {
              "id": 37340,
              "name": "SwapUtils",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 37303,
              "src": "1377:9:50"
            },
            "typeName": {
              "id": 37342,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 37341,
                "name": "SwapUtils.PooledToken",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 34481,
                "src": "1391:21:50"
              },
              "referencedDeclaration": 34481,
              "src": "1391:21:50",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_PooledToken_$34481_storage_ptr",
                "typeString": "struct SwapUtils.PooledToken"
              }
            }
          },
          {
            "id": 37347,
            "nodeType": "UsingForDirective",
            "src": "1419:40:50",
            "nodes": [],
            "libraryName": {
              "id": 37344,
              "name": "SwapUtils",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 37303,
              "src": "1425:9:50"
            },
            "typeName": {
              "id": 37346,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 37345,
                "name": "SwapUtils.FeeParams",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 34475,
                "src": "1439:19:50"
              },
              "referencedDeclaration": 34475,
              "src": "1439:19:50",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_FeeParams_$34475_storage_ptr",
                "typeString": "struct SwapUtils.FeeParams"
              }
            }
          },
          {
            "id": 37350,
            "nodeType": "VariableDeclaration",
            "src": "1490:36:50",
            "nodes": [],
            "constant": false,
            "functionSelector": "9242164f",
            "mutability": "mutable",
            "name": "feeParams",
            "nameLocation": "1517:9:50",
            "scope": 38136,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_FeeParams_$34475_storage",
              "typeString": "struct SwapUtils.FeeParams"
            },
            "typeName": {
              "id": 37349,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 37348,
                "name": "SwapUtils.FeeParams",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 34475,
                "src": "1490:19:50"
              },
              "referencedDeclaration": 34475,
              "src": "1490:19:50",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_FeeParams_$34475_storage_ptr",
                "typeString": "struct SwapUtils.FeeParams"
              }
            },
            "visibility": "public"
          },
          {
            "id": 37353,
            "nodeType": "VariableDeclaration",
            "src": "1580:50:50",
            "nodes": [],
            "constant": false,
            "functionSelector": "256967ac",
            "mutability": "mutable",
            "name": "amplificationParams",
            "nameLocation": "1611:19:50",
            "scope": 38136,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Amplification_$36920_storage",
              "typeString": "struct SwapUtils.Amplification"
            },
            "typeName": {
              "id": 37352,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 37351,
                "name": "SwapUtils.Amplification",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 36920,
                "src": "1580:23:50"
              },
              "referencedDeclaration": 36920,
              "src": "1580:23:50",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Amplification_$36920_storage_ptr",
                "typeString": "struct SwapUtils.Amplification"
              }
            },
            "visibility": "public"
          },
          {
            "id": 37356,
            "nodeType": "VariableDeclaration",
            "src": "1659:36:50",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "token0",
            "nameLocation": "1689:6:50",
            "scope": 38136,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_PooledToken_$34481_storage",
              "typeString": "struct SwapUtils.PooledToken"
            },
            "typeName": {
              "id": 37355,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 37354,
                "name": "SwapUtils.PooledToken",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 34481,
                "src": "1659:21:50"
              },
              "referencedDeclaration": 34481,
              "src": "1659:21:50",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_PooledToken_$34481_storage_ptr",
                "typeString": "struct SwapUtils.PooledToken"
              }
            },
            "visibility": "private"
          },
          {
            "id": 37359,
            "nodeType": "VariableDeclaration",
            "src": "1702:36:50",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "token1",
            "nameLocation": "1732:6:50",
            "scope": 38136,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_PooledToken_$34481_storage",
              "typeString": "struct SwapUtils.PooledToken"
            },
            "typeName": {
              "id": 37358,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 37357,
                "name": "SwapUtils.PooledToken",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 34481,
                "src": "1702:21:50"
              },
              "referencedDeclaration": 34481,
              "src": "1702:21:50",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_PooledToken_$34481_storage_ptr",
                "typeString": "struct SwapUtils.PooledToken"
              }
            },
            "visibility": "private"
          },
          {
            "id": 37363,
            "nodeType": "VariableDeclaration",
            "src": "1777:42:50",
            "nodes": [],
            "baseFunctions": [
              33758
            ],
            "constant": false,
            "functionSelector": "5fcbd285",
            "mutability": "mutable",
            "name": "lpToken",
            "nameLocation": "1812:7:50",
            "overrides": {
              "id": 37362,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1803:8:50"
            },
            "scope": 38136,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_LiquidityPoolToken_$34020",
              "typeString": "contract LiquidityPoolToken"
            },
            "typeName": {
              "id": 37361,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 37360,
                "name": "LiquidityPoolToken",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 34020,
                "src": "1777:18:50"
              },
              "referencedDeclaration": 34020,
              "src": "1777:18:50",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_LiquidityPoolToken_$34020",
                "typeString": "contract LiquidityPoolToken"
              }
            },
            "visibility": "public"
          },
          {
            "id": 37374,
            "nodeType": "ModifierDefinition",
            "src": "2011:98:50",
            "nodes": [],
            "body": {
              "id": 37373,
              "nodeType": "Block",
              "src": "2053:56:50",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 37369,
                        "name": "_deadline",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37366,
                        "src": "2079:9:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 37368,
                      "name": "_deadlineCheck",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38117,
                      "src": "2064:14:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) view"
                      }
                    },
                    "id": 37370,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2064:25:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37371,
                  "nodeType": "ExpressionStatement",
                  "src": "2064:25:50"
                },
                {
                  "id": 37372,
                  "nodeType": "PlaceholderStatement",
                  "src": "2100:1:50"
                }
              ]
            },
            "documentation": {
              "id": 37364,
              "nodeType": "StructuredDocumentation",
              "src": "1855:150:50",
              "text": " @notice Modifier to check deadline against current timestamp\n @param _deadline latest timestamp to accept this transaction"
            },
            "name": "deadlineCheck",
            "nameLocation": "2020:13:50",
            "parameters": {
              "id": 37367,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37366,
                  "mutability": "mutable",
                  "name": "_deadline",
                  "nameLocation": "2042:9:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 37374,
                  "src": "2034:17:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37365,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2034:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2033:19:50"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 37580,
            "nodeType": "FunctionDefinition",
            "src": "2150:2285:50",
            "nodes": [],
            "body": {
              "id": 37579,
              "nodeType": "Block",
              "src": "2468:1967:50",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 37402,
                      "name": "__Context_init_unchained",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30107,
                      "src": "2479:24:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 37403,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2479:26:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37404,
                  "nodeType": "ExpressionStatement",
                  "src": "2479:26:50"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 37405,
                      "name": "__Ownable_init_unchained",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28463,
                      "src": "2516:24:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 37406,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2516:26:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37407,
                  "nodeType": "ExpressionStatement",
                  "src": "2516:26:50"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 37408,
                      "name": "__ReentrancyGuard_init_unchained",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28759,
                      "src": "2553:32:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 37409,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2553:34:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37410,
                  "nodeType": "ExpressionStatement",
                  "src": "2553:34:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_contract$_IERC20_$32501",
                          "typeString": "contract IERC20"
                        },
                        "id": 37414,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 37412,
                          "name": "_token0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37378,
                          "src": "2666:7:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$32501",
                            "typeString": "contract IERC20"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 37413,
                          "name": "_token1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37381,
                          "src": "2677:7:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$32501",
                            "typeString": "contract IERC20"
                          }
                        },
                        "src": "2666:18:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4455504c49434154455f544f4b454e53",
                        "id": 37415,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2686:18:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_30cab00532541d6359b550926045d8ba089478fba0db37af2b354c3b261cd3d3",
                          "typeString": "literal_string \"DUPLICATE_TOKENS\""
                        },
                        "value": "DUPLICATE_TOKENS"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_30cab00532541d6359b550926045d8ba089478fba0db37af2b354c3b261cd3d3",
                          "typeString": "literal_string \"DUPLICATE_TOKENS\""
                        }
                      ],
                      "id": 37411,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2658:7:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 37416,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2658:47:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37417,
                  "nodeType": "ExpressionStatement",
                  "src": "2658:47:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 37427,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 37421,
                              "name": "_token0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 37378,
                              "src": "2732:7:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$32501",
                                "typeString": "contract IERC20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$32501",
                                "typeString": "contract IERC20"
                              }
                            ],
                            "id": 37420,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2724:7:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 37419,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2724:7:50",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 37422,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2724:16:50",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 37425,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2752:1:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 37424,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2744:7:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 37423,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2744:7:50",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 37426,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2744:10:50",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2724:30:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "544f4b454e305f5a45524f41444452455353",
                        "id": 37428,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2756:20:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_623864eab762f57436b92258aed636890ec4ce7418285d24ff468f53f53db23a",
                          "typeString": "literal_string \"TOKEN0_ZEROADDRESS\""
                        },
                        "value": "TOKEN0_ZEROADDRESS"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_623864eab762f57436b92258aed636890ec4ce7418285d24ff468f53f53db23a",
                          "typeString": "literal_string \"TOKEN0_ZEROADDRESS\""
                        }
                      ],
                      "id": 37418,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2716:7:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 37429,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2716:61:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37430,
                  "nodeType": "ExpressionStatement",
                  "src": "2716:61:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 37440,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 37434,
                              "name": "_token1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 37381,
                              "src": "2804:7:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$32501",
                                "typeString": "contract IERC20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$32501",
                                "typeString": "contract IERC20"
                              }
                            ],
                            "id": 37433,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2796:7:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 37432,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2796:7:50",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 37435,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2796:16:50",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 37438,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2824:1:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 37437,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2816:7:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 37436,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2816:7:50",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 37439,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2816:10:50",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2796:30:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "544f4b454e315f5a45524f41444452455353",
                        "id": 37441,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2828:20:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a1a839a89673d037be06d675faba26ecdd5ab340f2bfdeaa0d818373a8e42eb9",
                          "typeString": "literal_string \"TOKEN1_ZEROADDRESS\""
                        },
                        "value": "TOKEN1_ZEROADDRESS"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a1a839a89673d037be06d675faba26ecdd5ab340f2bfdeaa0d818373a8e42eb9",
                          "typeString": "literal_string \"TOKEN1_ZEROADDRESS\""
                        }
                      ],
                      "id": 37431,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2788:7:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 37442,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2788:61:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37443,
                  "nodeType": "ExpressionStatement",
                  "src": "2788:61:50"
                },
                {
                  "assignments": [
                    37445
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 37445,
                      "mutability": "mutable",
                      "name": "_tenderTokenDecimals",
                      "nameLocation": "2906:20:50",
                      "nodeType": "VariableDeclaration",
                      "scope": 37579,
                      "src": "2900:26:50",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 37444,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "2900:5:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 37454,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 37449,
                                "name": "_token0",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 37378,
                                "src": "2952:7:50",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$32501",
                                  "typeString": "contract IERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IERC20_$32501",
                                  "typeString": "contract IERC20"
                                }
                              ],
                              "id": 37448,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2944:7:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 37447,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2944:7:50",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 37450,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2944:16:50",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 37446,
                          "name": "IERC20Decimals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37324,
                          "src": "2929:14:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Decimals_$37324_$",
                            "typeString": "type(contract IERC20Decimals)"
                          }
                        },
                        "id": 37451,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2929:32:50",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Decimals_$37324",
                          "typeString": "contract IERC20Decimals"
                        }
                      },
                      "id": 37452,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "decimals",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37323,
                      "src": "2929:41:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                        "typeString": "function () view external returns (uint8)"
                      }
                    },
                    "id": 37453,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2929:43:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2900:72:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 37458,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 37456,
                          "name": "_tenderTokenDecimals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37445,
                          "src": "2991:20:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 37457,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3014:1:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2991:24:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 37455,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2983:7:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 37459,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2983:33:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37460,
                  "nodeType": "ExpressionStatement",
                  "src": "2983:33:50"
                },
                {
                  "expression": {
                    "id": 37473,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 37461,
                      "name": "token0",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37356,
                      "src": "3027:6:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PooledToken_$34481_storage",
                        "typeString": "struct SwapUtils.PooledToken storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 37464,
                          "name": "_token0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37378,
                          "src": "3080:7:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$32501",
                            "typeString": "contract IERC20"
                          }
                        },
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 37471,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3130",
                            "id": 37465,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3123:2:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                },
                                "id": 37469,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 37466,
                                    "name": "SwapUtils",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 37303,
                                    "src": "3128:9:50",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_SwapUtils_$37303_$",
                                      "typeString": "type(library SwapUtils)"
                                    }
                                  },
                                  "id": 37467,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "POOL_PRECISION_DECIMALS",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 34449,
                                  "src": "3128:33:50",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "id": 37468,
                                  "name": "_tenderTokenDecimals",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 37445,
                                  "src": "3164:20:50",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                "src": "3128:56:50",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              }
                            ],
                            "id": 37470,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "3127:58:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "src": "3123:62:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IERC20_$32501",
                            "typeString": "contract IERC20"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 37462,
                          "name": "SwapUtils",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37303,
                          "src": "3036:9:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_SwapUtils_$37303_$",
                            "typeString": "type(library SwapUtils)"
                          }
                        },
                        "id": 37463,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "PooledToken",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 34481,
                        "src": "3036:21:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_PooledToken_$34481_storage_ptr_$",
                          "typeString": "type(struct SwapUtils.PooledToken storage pointer)"
                        }
                      },
                      "id": 37472,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "token",
                        "precisionMultiplier"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "3036:161:50",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PooledToken_$34481_memory_ptr",
                        "typeString": "struct SwapUtils.PooledToken memory"
                      }
                    },
                    "src": "3027:170:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PooledToken_$34481_storage",
                      "typeString": "struct SwapUtils.PooledToken storage ref"
                    }
                  },
                  "id": 37474,
                  "nodeType": "ExpressionStatement",
                  "src": "3027:170:50"
                },
                {
                  "assignments": [
                    37476
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 37476,
                      "mutability": "mutable",
                      "name": "_tokenDecimals",
                      "nameLocation": "3216:14:50",
                      "nodeType": "VariableDeclaration",
                      "scope": 37579,
                      "src": "3210:20:50",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 37475,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "3210:5:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 37485,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 37480,
                                "name": "_token1",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 37381,
                                "src": "3256:7:50",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$32501",
                                  "typeString": "contract IERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IERC20_$32501",
                                  "typeString": "contract IERC20"
                                }
                              ],
                              "id": 37479,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3248:7:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 37478,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3248:7:50",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 37481,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3248:16:50",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 37477,
                          "name": "IERC20Decimals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37324,
                          "src": "3233:14:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Decimals_$37324_$",
                            "typeString": "type(contract IERC20Decimals)"
                          }
                        },
                        "id": 37482,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3233:32:50",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Decimals_$37324",
                          "typeString": "contract IERC20Decimals"
                        }
                      },
                      "id": 37483,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "decimals",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37323,
                      "src": "3233:41:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                        "typeString": "function () view external returns (uint8)"
                      }
                    },
                    "id": 37484,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3233:43:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3210:66:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 37489,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 37487,
                          "name": "_tokenDecimals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37476,
                          "src": "3295:14:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 37488,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3312:1:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3295:18:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 37486,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3287:7:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 37490,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3287:27:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37491,
                  "nodeType": "ExpressionStatement",
                  "src": "3287:27:50"
                },
                {
                  "expression": {
                    "id": 37504,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 37492,
                      "name": "token1",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37359,
                      "src": "3325:6:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PooledToken_$34481_storage",
                        "typeString": "struct SwapUtils.PooledToken storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 37495,
                          "name": "_token1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37381,
                          "src": "3378:7:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$32501",
                            "typeString": "contract IERC20"
                          }
                        },
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 37502,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3130",
                            "id": 37496,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3421:2:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                },
                                "id": 37500,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 37497,
                                    "name": "SwapUtils",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 37303,
                                    "src": "3426:9:50",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_SwapUtils_$37303_$",
                                      "typeString": "type(library SwapUtils)"
                                    }
                                  },
                                  "id": 37498,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "POOL_PRECISION_DECIMALS",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 34449,
                                  "src": "3426:33:50",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "id": 37499,
                                  "name": "_tokenDecimals",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 37476,
                                  "src": "3462:14:50",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                "src": "3426:50:50",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              }
                            ],
                            "id": 37501,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "3425:52:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "src": "3421:56:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IERC20_$32501",
                            "typeString": "contract IERC20"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 37493,
                          "name": "SwapUtils",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37303,
                          "src": "3334:9:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_SwapUtils_$37303_$",
                            "typeString": "type(library SwapUtils)"
                          }
                        },
                        "id": 37494,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "PooledToken",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 34481,
                        "src": "3334:21:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_PooledToken_$34481_storage_ptr_$",
                          "typeString": "type(struct SwapUtils.PooledToken storage pointer)"
                        }
                      },
                      "id": 37503,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "token",
                        "precisionMultiplier"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "3334:155:50",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PooledToken_$34481_memory_ptr",
                        "typeString": "struct SwapUtils.PooledToken memory"
                      }
                    },
                    "src": "3325:164:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PooledToken_$34481_storage",
                      "typeString": "struct SwapUtils.PooledToken storage ref"
                    }
                  },
                  "id": 37505,
                  "nodeType": "ExpressionStatement",
                  "src": "3325:164:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 37510,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 37507,
                          "name": "_a",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37387,
                          "src": "3563:2:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "expression": {
                            "id": 37508,
                            "name": "SwapUtils",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37303,
                            "src": "3568:9:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_SwapUtils_$37303_$",
                              "typeString": "type(library SwapUtils)"
                            }
                          },
                          "id": 37509,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "MAX_A",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 36905,
                          "src": "3568:15:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3563:20:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5f612065786365656473206d6178696d756d",
                        "id": 37511,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3585:20:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6d10d9193d6dae542704df3b3ab8bcf0eeb6847d3d136ed4b04aee07a7f72dfe",
                          "typeString": "literal_string \"_a exceeds maximum\""
                        },
                        "value": "_a exceeds maximum"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6d10d9193d6dae542704df3b3ab8bcf0eeb6847d3d136ed4b04aee07a7f72dfe",
                          "typeString": "literal_string \"_a exceeds maximum\""
                        }
                      ],
                      "id": 37506,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3555:7:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 37512,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3555:51:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37513,
                  "nodeType": "ExpressionStatement",
                  "src": "3555:51:50"
                },
                {
                  "expression": {
                    "id": 37521,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 37514,
                        "name": "amplificationParams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37353,
                        "src": "3617:19:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Amplification_$36920_storage",
                          "typeString": "struct SwapUtils.Amplification storage ref"
                        }
                      },
                      "id": 37516,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "initialA",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36913,
                      "src": "3617:28:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 37520,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 37517,
                        "name": "_a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37387,
                        "src": "3648:2:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "expression": {
                          "id": 37518,
                          "name": "SwapUtils",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37303,
                          "src": "3653:9:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_SwapUtils_$37303_$",
                            "typeString": "type(library SwapUtils)"
                          }
                        },
                        "id": 37519,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "A_PRECISION",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 36900,
                        "src": "3653:21:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "3648:26:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3617:57:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 37522,
                  "nodeType": "ExpressionStatement",
                  "src": "3617:57:50"
                },
                {
                  "expression": {
                    "id": 37530,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 37523,
                        "name": "amplificationParams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37353,
                        "src": "3685:19:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Amplification_$36920_storage",
                          "typeString": "struct SwapUtils.Amplification storage ref"
                        }
                      },
                      "id": 37525,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "futureA",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36915,
                      "src": "3685:27:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 37529,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 37526,
                        "name": "_a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37387,
                        "src": "3715:2:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "expression": {
                          "id": 37527,
                          "name": "SwapUtils",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37303,
                          "src": "3720:9:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_SwapUtils_$37303_$",
                            "typeString": "type(library SwapUtils)"
                          }
                        },
                        "id": 37528,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "A_PRECISION",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 36900,
                        "src": "3720:21:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "3715:26:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3685:56:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 37531,
                  "nodeType": "ExpressionStatement",
                  "src": "3685:56:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 37536,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 37533,
                          "name": "_fee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37389,
                          "src": "3819:4:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "expression": {
                            "id": 37534,
                            "name": "SwapUtils",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37303,
                            "src": "3826:9:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_SwapUtils_$37303_$",
                              "typeString": "type(library SwapUtils)"
                            }
                          },
                          "id": 37535,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "MAX_SWAP_FEE",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 34459,
                          "src": "3826:22:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3819:29:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5f6665652065786365656473206d6178696d756d",
                        "id": 37537,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3850:22:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c2ec1c8b95f7fdd82a9cd723ab25579d58e30b4630228130b1c03ae94813d95b",
                          "typeString": "literal_string \"_fee exceeds maximum\""
                        },
                        "value": "_fee exceeds maximum"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c2ec1c8b95f7fdd82a9cd723ab25579d58e30b4630228130b1c03ae94813d95b",
                          "typeString": "literal_string \"_fee exceeds maximum\""
                        }
                      ],
                      "id": 37532,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3811:7:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 37538,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3811:62:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37539,
                  "nodeType": "ExpressionStatement",
                  "src": "3811:62:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 37544,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 37541,
                          "name": "_adminFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37391,
                          "src": "3892:9:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "expression": {
                            "id": 37542,
                            "name": "SwapUtils",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37303,
                            "src": "3904:9:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_SwapUtils_$37303_$",
                              "typeString": "type(library SwapUtils)"
                            }
                          },
                          "id": 37543,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "MAX_ADMIN_FEE",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 34464,
                          "src": "3904:23:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3892:35:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5f61646d696e4665652065786365656473206d6178696d756d",
                        "id": 37545,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3929:27:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5e9995c4674de2ad727ffbe3c3110784ecdbab72c3e1a2bdc6129e561bb0f370",
                          "typeString": "literal_string \"_adminFee exceeds maximum\""
                        },
                        "value": "_adminFee exceeds maximum"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5e9995c4674de2ad727ffbe3c3110784ecdbab72c3e1a2bdc6129e561bb0f370",
                          "typeString": "literal_string \"_adminFee exceeds maximum\""
                        }
                      ],
                      "id": 37540,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3884:7:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 37546,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3884:73:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37547,
                  "nodeType": "ExpressionStatement",
                  "src": "3884:73:50"
                },
                {
                  "expression": {
                    "id": 37554,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 37548,
                      "name": "feeParams",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37350,
                      "src": "3968:9:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_FeeParams_$34475_storage",
                        "typeString": "struct SwapUtils.FeeParams storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 37551,
                          "name": "_fee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37389,
                          "src": "4011:4:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 37552,
                          "name": "_adminFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37391,
                          "src": "4027:9:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 37549,
                          "name": "SwapUtils",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37303,
                          "src": "3980:9:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_SwapUtils_$37303_$",
                            "typeString": "type(library SwapUtils)"
                          }
                        },
                        "id": 37550,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "FeeParams",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 34475,
                        "src": "3980:19:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_FeeParams_$34475_storage_ptr_$",
                          "typeString": "type(struct SwapUtils.FeeParams storage pointer)"
                        }
                      },
                      "id": 37553,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "swapFee",
                        "adminFee"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "3980:59:50",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_FeeParams_$34475_memory_ptr",
                        "typeString": "struct SwapUtils.FeeParams memory"
                      }
                    },
                    "src": "3968:71:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_FeeParams_$34475_storage",
                      "typeString": "struct SwapUtils.FeeParams storage ref"
                    }
                  },
                  "id": 37555,
                  "nodeType": "ExpressionStatement",
                  "src": "3968:71:50"
                },
                {
                  "expression": {
                    "id": 37566,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 37556,
                      "name": "lpToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37363,
                      "src": "4232:7:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LiquidityPoolToken_$34020",
                        "typeString": "contract LiquidityPoolToken"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 37562,
                                  "name": "lpTokenTargetAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 37394,
                                  "src": "4282:20:50",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_LiquidityPoolToken_$34020",
                                    "typeString": "contract LiquidityPoolToken"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_LiquidityPoolToken_$34020",
                                    "typeString": "contract LiquidityPoolToken"
                                  }
                                ],
                                "id": 37561,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4274:7:50",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 37560,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4274:7:50",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 37563,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4274:29:50",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 37558,
                              "name": "Clones",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31836,
                              "src": "4261:6:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_Clones_$31836_$",
                                "typeString": "type(library Clones)"
                              }
                            },
                            "id": 37559,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "clone",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 31779,
                            "src": "4261:12:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_address_$",
                              "typeString": "function (address) returns (address)"
                            }
                          },
                          "id": 37564,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4261:43:50",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 37557,
                        "name": "LiquidityPoolToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34020,
                        "src": "4242:18:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_LiquidityPoolToken_$34020_$",
                          "typeString": "type(contract LiquidityPoolToken)"
                        }
                      },
                      "id": 37565,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4242:63:50",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LiquidityPoolToken_$34020",
                        "typeString": "contract LiquidityPoolToken"
                      }
                    },
                    "src": "4232:73:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_LiquidityPoolToken_$34020",
                      "typeString": "contract LiquidityPoolToken"
                    }
                  },
                  "id": 37567,
                  "nodeType": "ExpressionStatement",
                  "src": "4232:73:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 37571,
                            "name": "lpTokenName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37383,
                            "src": "4343:11:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 37572,
                            "name": "lpTokenSymbol",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37385,
                            "src": "4356:13:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "expression": {
                            "id": 37569,
                            "name": "lpToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37363,
                            "src": "4324:7:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LiquidityPoolToken_$34020",
                              "typeString": "contract LiquidityPoolToken"
                            }
                          },
                          "id": 37570,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "initialize",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 33996,
                          "src": "4324:18:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (string memory,string memory) external returns (bool)"
                          }
                        },
                        "id": 37573,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4324:46:50",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "636f756c64206e6f7420696e6974206c70546f6b656e20636c6f6e65",
                        "id": 37574,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4372:30:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ef06697a0ef9ea911497bdcdba4dca4da1254e21c81d969c12b4cc8c2147f5f7",
                          "typeString": "literal_string \"could not init lpToken clone\""
                        },
                        "value": "could not init lpToken clone"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ef06697a0ef9ea911497bdcdba4dca4da1254e21c81d969c12b4cc8c2147f5f7",
                          "typeString": "literal_string \"could not init lpToken clone\""
                        }
                      ],
                      "id": 37568,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4316:7:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 37575,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4316:87:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37576,
                  "nodeType": "ExpressionStatement",
                  "src": "4316:87:50"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 37577,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4423:4:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 37401,
                  "id": 37578,
                  "nodeType": "Return",
                  "src": "4416:11:50"
                }
              ]
            },
            "baseFunctions": [
              33751
            ],
            "documentation": {
              "id": 37375,
              "nodeType": "StructuredDocumentation",
              "src": "2117:27:50",
              "text": "@inheritdoc ITenderSwap"
            },
            "functionSelector": "afcd5f4b",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 37398,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 37397,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 28628,
                  "src": "2441:11:50"
                },
                "nodeType": "ModifierInvocation",
                "src": "2441:11:50"
              }
            ],
            "name": "initialize",
            "nameLocation": "2159:10:50",
            "overrides": {
              "id": 37396,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2432:8:50"
            },
            "parameters": {
              "id": 37395,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37378,
                  "mutability": "mutable",
                  "name": "_token0",
                  "nameLocation": "2187:7:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 37580,
                  "src": "2180:14:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$32501",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 37377,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 37376,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 32501,
                      "src": "2180:6:50"
                    },
                    "referencedDeclaration": 32501,
                    "src": "2180:6:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$32501",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37381,
                  "mutability": "mutable",
                  "name": "_token1",
                  "nameLocation": "2212:7:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 37580,
                  "src": "2205:14:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$32501",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 37380,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 37379,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 32501,
                      "src": "2205:6:50"
                    },
                    "referencedDeclaration": 32501,
                    "src": "2205:6:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$32501",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37383,
                  "mutability": "mutable",
                  "name": "lpTokenName",
                  "nameLocation": "2244:11:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 37580,
                  "src": "2230:25:50",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 37382,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2230:6:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37385,
                  "mutability": "mutable",
                  "name": "lpTokenSymbol",
                  "nameLocation": "2280:13:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 37580,
                  "src": "2266:27:50",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 37384,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2266:6:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37387,
                  "mutability": "mutable",
                  "name": "_a",
                  "nameLocation": "2312:2:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 37580,
                  "src": "2304:10:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37386,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2304:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37389,
                  "mutability": "mutable",
                  "name": "_fee",
                  "nameLocation": "2333:4:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 37580,
                  "src": "2325:12:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37388,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2325:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37391,
                  "mutability": "mutable",
                  "name": "_adminFee",
                  "nameLocation": "2356:9:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 37580,
                  "src": "2348:17:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37390,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2348:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37394,
                  "mutability": "mutable",
                  "name": "lpTokenTargetAddress",
                  "nameLocation": "2395:20:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 37580,
                  "src": "2376:39:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_LiquidityPoolToken_$34020",
                    "typeString": "contract LiquidityPoolToken"
                  },
                  "typeName": {
                    "id": 37393,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 37392,
                      "name": "LiquidityPoolToken",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 34020,
                      "src": "2376:18:50"
                    },
                    "referencedDeclaration": 34020,
                    "src": "2376:18:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_LiquidityPoolToken_$34020",
                      "typeString": "contract LiquidityPoolToken"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2169:253:50"
            },
            "returnParameters": {
              "id": 37401,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37400,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 37580,
                  "src": "2462:4:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 37399,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2462:4:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2461:6:50"
            },
            "scope": 38136,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 37592,
            "nodeType": "FunctionDefinition",
            "src": "4508:109:50",
            "nodes": [],
            "body": {
              "id": 37591,
              "nodeType": "Block",
              "src": "4565:52:50",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 37587,
                        "name": "amplificationParams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37353,
                        "src": "4583:19:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Amplification_$36920_storage",
                          "typeString": "struct SwapUtils.Amplification storage ref"
                        }
                      },
                      "id": 37588,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getA",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36952,
                      "src": "4583:24:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_view$_t_struct$_Amplification_$36920_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Amplification_$36920_storage_ptr_$",
                        "typeString": "function (struct SwapUtils.Amplification storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 37589,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4583:26:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 37586,
                  "id": 37590,
                  "nodeType": "Return",
                  "src": "4576:33:50"
                }
              ]
            },
            "baseFunctions": [
              33764
            ],
            "documentation": {
              "id": 37581,
              "nodeType": "StructuredDocumentation",
              "src": "4475:27:50",
              "text": "@inheritdoc ITenderSwap"
            },
            "functionSelector": "d46300fd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getA",
            "nameLocation": "4517:4:50",
            "overrides": {
              "id": 37583,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4538:8:50"
            },
            "parameters": {
              "id": 37582,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4521:2:50"
            },
            "returnParameters": {
              "id": 37586,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37585,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 37592,
                  "src": "4556:7:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37584,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4556:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4555:9:50"
            },
            "scope": 38136,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 37604,
            "nodeType": "FunctionDefinition",
            "src": "4658:123:50",
            "nodes": [],
            "body": {
              "id": 37603,
              "nodeType": "Block",
              "src": "4722:59:50",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 37599,
                        "name": "amplificationParams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37353,
                        "src": "4740:19:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Amplification_$36920_storage",
                          "typeString": "struct SwapUtils.Amplification storage ref"
                        }
                      },
                      "id": 37600,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getAPrecise",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36966,
                      "src": "4740:31:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_view$_t_struct$_Amplification_$36920_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Amplification_$36920_storage_ptr_$",
                        "typeString": "function (struct SwapUtils.Amplification storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 37601,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4740:33:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 37598,
                  "id": 37602,
                  "nodeType": "Return",
                  "src": "4733:40:50"
                }
              ]
            },
            "baseFunctions": [
              33770
            ],
            "documentation": {
              "id": 37593,
              "nodeType": "StructuredDocumentation",
              "src": "4625:27:50",
              "text": "@inheritdoc ITenderSwap"
            },
            "functionSelector": "0ba81959",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAPrecise",
            "nameLocation": "4667:11:50",
            "overrides": {
              "id": 37595,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4695:8:50"
            },
            "parameters": {
              "id": 37594,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4678:2:50"
            },
            "returnParameters": {
              "id": 37598,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37597,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 37604,
                  "src": "4713:7:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37596,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4713:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4712:9:50"
            },
            "scope": 38136,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 37616,
            "nodeType": "FunctionDefinition",
            "src": "4822:99:50",
            "nodes": [],
            "body": {
              "id": 37615,
              "nodeType": "Block",
              "src": "4883:38:50",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 37612,
                      "name": "token0",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37356,
                      "src": "4901:6:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PooledToken_$34481_storage",
                        "typeString": "struct SwapUtils.PooledToken storage ref"
                      }
                    },
                    "id": 37613,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "token",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 34478,
                    "src": "4901:12:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$32501",
                      "typeString": "contract IERC20"
                    }
                  },
                  "functionReturnParameters": 37611,
                  "id": 37614,
                  "nodeType": "Return",
                  "src": "4894:19:50"
                }
              ]
            },
            "baseFunctions": [
              33777
            ],
            "documentation": {
              "id": 37605,
              "nodeType": "StructuredDocumentation",
              "src": "4789:27:50",
              "text": "@inheritdoc ITenderSwap"
            },
            "functionSelector": "ba94a315",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getToken0",
            "nameLocation": "4831:9:50",
            "overrides": {
              "id": 37607,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4857:8:50"
            },
            "parameters": {
              "id": 37606,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4840:2:50"
            },
            "returnParameters": {
              "id": 37611,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37610,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 37616,
                  "src": "4875:6:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$32501",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 37609,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 37608,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 32501,
                      "src": "4875:6:50"
                    },
                    "referencedDeclaration": 32501,
                    "src": "4875:6:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$32501",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4874:8:50"
            },
            "scope": 38136,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 37628,
            "nodeType": "FunctionDefinition",
            "src": "4962:99:50",
            "nodes": [],
            "body": {
              "id": 37627,
              "nodeType": "Block",
              "src": "5023:38:50",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 37624,
                      "name": "token1",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37359,
                      "src": "5041:6:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PooledToken_$34481_storage",
                        "typeString": "struct SwapUtils.PooledToken storage ref"
                      }
                    },
                    "id": 37625,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "token",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 34478,
                    "src": "5041:12:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$32501",
                      "typeString": "contract IERC20"
                    }
                  },
                  "functionReturnParameters": 37623,
                  "id": 37626,
                  "nodeType": "Return",
                  "src": "5034:19:50"
                }
              ]
            },
            "baseFunctions": [
              33784
            ],
            "documentation": {
              "id": 37617,
              "nodeType": "StructuredDocumentation",
              "src": "4929:27:50",
              "text": "@inheritdoc ITenderSwap"
            },
            "functionSelector": "6f26a710",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getToken1",
            "nameLocation": "4971:9:50",
            "overrides": {
              "id": 37619,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4997:8:50"
            },
            "parameters": {
              "id": 37618,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4980:2:50"
            },
            "returnParameters": {
              "id": 37623,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37622,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 37628,
                  "src": "5015:6:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$32501",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 37621,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 37620,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 32501,
                      "src": "5015:6:50"
                    },
                    "referencedDeclaration": 32501,
                    "src": "5015:6:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$32501",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5014:8:50"
            },
            "scope": 38136,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 37640,
            "nodeType": "FunctionDefinition",
            "src": "5102:119:50",
            "nodes": [],
            "body": {
              "id": 37639,
              "nodeType": "Block",
              "src": "5171:50:50",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 37635,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37356,
                        "src": "5189:6:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PooledToken_$34481_storage",
                          "typeString": "struct SwapUtils.PooledToken storage ref"
                        }
                      },
                      "id": 37636,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getTokenBalance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37231,
                      "src": "5189:22:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_view$_t_struct$_PooledToken_$34481_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_PooledToken_$34481_storage_ptr_$",
                        "typeString": "function (struct SwapUtils.PooledToken storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 37637,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5189:24:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 37634,
                  "id": 37638,
                  "nodeType": "Return",
                  "src": "5182:31:50"
                }
              ]
            },
            "baseFunctions": [
              33790
            ],
            "documentation": {
              "id": 37629,
              "nodeType": "StructuredDocumentation",
              "src": "5069:27:50",
              "text": "@inheritdoc ITenderSwap"
            },
            "functionSelector": "c2d9ecfa",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getToken0Balance",
            "nameLocation": "5111:16:50",
            "overrides": {
              "id": 37631,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5144:8:50"
            },
            "parameters": {
              "id": 37630,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5127:2:50"
            },
            "returnParameters": {
              "id": 37634,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37633,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 37640,
                  "src": "5162:7:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37632,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5162:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5161:9:50"
            },
            "scope": 38136,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 37652,
            "nodeType": "FunctionDefinition",
            "src": "5262:119:50",
            "nodes": [],
            "body": {
              "id": 37651,
              "nodeType": "Block",
              "src": "5331:50:50",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 37647,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37359,
                        "src": "5349:6:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PooledToken_$34481_storage",
                          "typeString": "struct SwapUtils.PooledToken storage ref"
                        }
                      },
                      "id": 37648,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getTokenBalance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37231,
                      "src": "5349:22:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_view$_t_struct$_PooledToken_$34481_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_PooledToken_$34481_storage_ptr_$",
                        "typeString": "function (struct SwapUtils.PooledToken storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 37649,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5349:24:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 37646,
                  "id": 37650,
                  "nodeType": "Return",
                  "src": "5342:31:50"
                }
              ]
            },
            "baseFunctions": [
              33796
            ],
            "documentation": {
              "id": 37641,
              "nodeType": "StructuredDocumentation",
              "src": "5229:27:50",
              "text": "@inheritdoc ITenderSwap"
            },
            "functionSelector": "5153786b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getToken1Balance",
            "nameLocation": "5271:16:50",
            "overrides": {
              "id": 37643,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5304:8:50"
            },
            "parameters": {
              "id": 37642,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5287:2:50"
            },
            "returnParameters": {
              "id": 37646,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37645,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 37652,
                  "src": "5322:7:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37644,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5322:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5321:9:50"
            },
            "scope": 38136,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 37668,
            "nodeType": "FunctionDefinition",
            "src": "5422:165:50",
            "nodes": [],
            "body": {
              "id": 37667,
              "nodeType": "Block",
              "src": "5490:97:50",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 37661,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37356,
                        "src": "5534:6:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PooledToken_$34481_storage",
                          "typeString": "struct SwapUtils.PooledToken storage ref"
                        }
                      },
                      {
                        "id": 37662,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37359,
                        "src": "5542:6:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PooledToken_$34481_storage",
                          "typeString": "struct SwapUtils.PooledToken storage ref"
                        }
                      },
                      {
                        "id": 37663,
                        "name": "amplificationParams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37353,
                        "src": "5550:19:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Amplification_$36920_storage",
                          "typeString": "struct SwapUtils.Amplification storage ref"
                        }
                      },
                      {
                        "id": 37664,
                        "name": "lpToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37363,
                        "src": "5571:7:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LiquidityPoolToken_$34020",
                          "typeString": "contract LiquidityPoolToken"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_PooledToken_$34481_storage",
                          "typeString": "struct SwapUtils.PooledToken storage ref"
                        },
                        {
                          "typeIdentifier": "t_struct$_PooledToken_$34481_storage",
                          "typeString": "struct SwapUtils.PooledToken storage ref"
                        },
                        {
                          "typeIdentifier": "t_struct$_Amplification_$36920_storage",
                          "typeString": "struct SwapUtils.Amplification storage ref"
                        },
                        {
                          "typeIdentifier": "t_contract$_LiquidityPoolToken_$34020",
                          "typeString": "contract LiquidityPoolToken"
                        }
                      ],
                      "expression": {
                        "id": 37659,
                        "name": "SwapUtils",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37303,
                        "src": "5508:9:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SwapUtils_$37303_$",
                          "typeString": "type(library SwapUtils)"
                        }
                      },
                      "id": 37660,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getVirtualPrice",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 34701,
                      "src": "5508:25:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_view$_t_struct$_PooledToken_$34481_storage_ptr_$_t_struct$_PooledToken_$34481_storage_ptr_$_t_struct$_Amplification_$36920_storage_ptr_$_t_contract$_LiquidityPoolToken_$34020_$returns$_t_uint256_$",
                        "typeString": "function (struct SwapUtils.PooledToken storage pointer,struct SwapUtils.PooledToken storage pointer,struct SwapUtils.Amplification storage pointer,contract LiquidityPoolToken) view returns (uint256)"
                      }
                    },
                    "id": 37665,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5508:71:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 37658,
                  "id": 37666,
                  "nodeType": "Return",
                  "src": "5501:78:50"
                }
              ]
            },
            "baseFunctions": [
              33802
            ],
            "documentation": {
              "id": 37653,
              "nodeType": "StructuredDocumentation",
              "src": "5389:27:50",
              "text": "@inheritdoc ITenderSwap"
            },
            "functionSelector": "e25aa5fa",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getVirtualPrice",
            "nameLocation": "5431:15:50",
            "overrides": {
              "id": 37655,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5463:8:50"
            },
            "parameters": {
              "id": 37654,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5446:2:50"
            },
            "returnParameters": {
              "id": 37658,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37657,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 37668,
                  "src": "5481:7:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37656,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5481:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5480:9:50"
            },
            "scope": 38136,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 37703,
            "nodeType": "FunctionDefinition",
            "src": "5628:353:50",
            "nodes": [],
            "body": {
              "id": 37702,
              "nodeType": "Block",
              "src": "5724:257:50",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_contract$_IERC20_$32501",
                        "typeString": "contract IERC20"
                      },
                      "id": 37683,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 37680,
                        "name": "_tokenFrom",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37672,
                        "src": "5755:10:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$32501",
                          "typeString": "contract IERC20"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "id": 37681,
                          "name": "token0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37356,
                          "src": "5769:6:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PooledToken_$34481_storage",
                            "typeString": "struct SwapUtils.PooledToken storage ref"
                          }
                        },
                        "id": 37682,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "token",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 34478,
                        "src": "5769:12:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$32501",
                          "typeString": "contract IERC20"
                        }
                      },
                      "src": "5755:26:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "arguments": [
                        {
                          "id": 37694,
                          "name": "token1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37359,
                          "src": "5921:6:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PooledToken_$34481_storage",
                            "typeString": "struct SwapUtils.PooledToken storage ref"
                          }
                        },
                        {
                          "id": 37695,
                          "name": "token0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37356,
                          "src": "5929:6:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PooledToken_$34481_storage",
                            "typeString": "struct SwapUtils.PooledToken storage ref"
                          }
                        },
                        {
                          "id": 37696,
                          "name": "_dx",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37674,
                          "src": "5937:3:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 37697,
                          "name": "amplificationParams",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37353,
                          "src": "5942:19:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Amplification_$36920_storage",
                            "typeString": "struct SwapUtils.Amplification storage ref"
                          }
                        },
                        {
                          "id": 37698,
                          "name": "feeParams",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37350,
                          "src": "5963:9:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FeeParams_$34475_storage",
                            "typeString": "struct SwapUtils.FeeParams storage ref"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_PooledToken_$34481_storage",
                            "typeString": "struct SwapUtils.PooledToken storage ref"
                          },
                          {
                            "typeIdentifier": "t_struct$_PooledToken_$34481_storage",
                            "typeString": "struct SwapUtils.PooledToken storage ref"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_struct$_Amplification_$36920_storage",
                            "typeString": "struct SwapUtils.Amplification storage ref"
                          },
                          {
                            "typeIdentifier": "t_struct$_FeeParams_$34475_storage",
                            "typeString": "struct SwapUtils.FeeParams storage ref"
                          }
                        ],
                        "expression": {
                          "id": 37692,
                          "name": "SwapUtils",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37303,
                          "src": "5897:9:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_SwapUtils_$37303_$",
                            "typeString": "type(library SwapUtils)"
                          }
                        },
                        "id": 37693,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "calculateSwap",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 34733,
                        "src": "5897:23:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_delegatecall_view$_t_struct$_PooledToken_$34481_storage_ptr_$_t_struct$_PooledToken_$34481_storage_ptr_$_t_uint256_$_t_struct$_Amplification_$36920_storage_ptr_$_t_struct$_FeeParams_$34475_storage_ptr_$returns$_t_uint256_$",
                          "typeString": "function (struct SwapUtils.PooledToken storage pointer,struct SwapUtils.PooledToken storage pointer,uint256,struct SwapUtils.Amplification storage pointer,struct SwapUtils.FeeParams storage pointer) view returns (uint256)"
                        }
                      },
                      "id": 37699,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5897:76:50",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 37700,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "5755:218:50",
                    "trueExpression": {
                      "arguments": [
                        {
                          "id": 37686,
                          "name": "token0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37356,
                          "src": "5825:6:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PooledToken_$34481_storage",
                            "typeString": "struct SwapUtils.PooledToken storage ref"
                          }
                        },
                        {
                          "id": 37687,
                          "name": "token1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37359,
                          "src": "5833:6:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PooledToken_$34481_storage",
                            "typeString": "struct SwapUtils.PooledToken storage ref"
                          }
                        },
                        {
                          "id": 37688,
                          "name": "_dx",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37674,
                          "src": "5841:3:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 37689,
                          "name": "amplificationParams",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37353,
                          "src": "5846:19:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Amplification_$36920_storage",
                            "typeString": "struct SwapUtils.Amplification storage ref"
                          }
                        },
                        {
                          "id": 37690,
                          "name": "feeParams",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37350,
                          "src": "5867:9:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FeeParams_$34475_storage",
                            "typeString": "struct SwapUtils.FeeParams storage ref"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_PooledToken_$34481_storage",
                            "typeString": "struct SwapUtils.PooledToken storage ref"
                          },
                          {
                            "typeIdentifier": "t_struct$_PooledToken_$34481_storage",
                            "typeString": "struct SwapUtils.PooledToken storage ref"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_struct$_Amplification_$36920_storage",
                            "typeString": "struct SwapUtils.Amplification storage ref"
                          },
                          {
                            "typeIdentifier": "t_struct$_FeeParams_$34475_storage",
                            "typeString": "struct SwapUtils.FeeParams storage ref"
                          }
                        ],
                        "expression": {
                          "id": 37684,
                          "name": "SwapUtils",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37303,
                          "src": "5801:9:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_SwapUtils_$37303_$",
                            "typeString": "type(library SwapUtils)"
                          }
                        },
                        "id": 37685,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "calculateSwap",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 34733,
                        "src": "5801:23:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_delegatecall_view$_t_struct$_PooledToken_$34481_storage_ptr_$_t_struct$_PooledToken_$34481_storage_ptr_$_t_uint256_$_t_struct$_Amplification_$36920_storage_ptr_$_t_struct$_FeeParams_$34475_storage_ptr_$returns$_t_uint256_$",
                          "typeString": "function (struct SwapUtils.PooledToken storage pointer,struct SwapUtils.PooledToken storage pointer,uint256,struct SwapUtils.Amplification storage pointer,struct SwapUtils.FeeParams storage pointer) view returns (uint256)"
                        }
                      },
                      "id": 37691,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5801:76:50",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 37679,
                  "id": 37701,
                  "nodeType": "Return",
                  "src": "5735:238:50"
                }
              ]
            },
            "baseFunctions": [
              33813
            ],
            "documentation": {
              "id": 37669,
              "nodeType": "StructuredDocumentation",
              "src": "5595:27:50",
              "text": "@inheritdoc ITenderSwap"
            },
            "functionSelector": "1de8d8cb",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calculateSwap",
            "nameLocation": "5637:13:50",
            "overrides": {
              "id": 37676,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5697:8:50"
            },
            "parameters": {
              "id": 37675,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37672,
                  "mutability": "mutable",
                  "name": "_tokenFrom",
                  "nameLocation": "5658:10:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 37703,
                  "src": "5651:17:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$32501",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 37671,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 37670,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 32501,
                      "src": "5651:6:50"
                    },
                    "referencedDeclaration": 32501,
                    "src": "5651:6:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$32501",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37674,
                  "mutability": "mutable",
                  "name": "_dx",
                  "nameLocation": "5678:3:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 37703,
                  "src": "5670:11:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37673,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5670:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5650:32:50"
            },
            "returnParameters": {
              "id": 37679,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37678,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 37703,
                  "src": "5715:7:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37677,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5715:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5714:9:50"
            },
            "scope": 38136,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 37733,
            "nodeType": "FunctionDefinition",
            "src": "6022:256:50",
            "nodes": [],
            "body": {
              "id": 37732,
              "nodeType": "Block",
              "src": "6123:155:50",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    37720
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 37720,
                      "mutability": "mutable",
                      "name": "tokens_",
                      "nameLocation": "6166:7:50",
                      "nodeType": "VariableDeclaration",
                      "scope": 37732,
                      "src": "6134:39:50",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_PooledToken_$34481_memory_ptr_$2_memory_ptr",
                        "typeString": "struct SwapUtils.PooledToken[2]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 37718,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 37717,
                            "name": "SwapUtils.PooledToken",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 34481,
                            "src": "6134:21:50"
                          },
                          "referencedDeclaration": 34481,
                          "src": "6134:21:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PooledToken_$34481_storage_ptr",
                            "typeString": "struct SwapUtils.PooledToken"
                          }
                        },
                        "id": 37719,
                        "length": {
                          "hexValue": "32",
                          "id": 37716,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6156:1:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "nodeType": "ArrayTypeName",
                        "src": "6134:24:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_PooledToken_$34481_storage_$2_storage_ptr",
                          "typeString": "struct SwapUtils.PooledToken[2]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 37724,
                  "initialValue": {
                    "components": [
                      {
                        "id": 37721,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37356,
                        "src": "6177:6:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PooledToken_$34481_storage",
                          "typeString": "struct SwapUtils.PooledToken storage ref"
                        }
                      },
                      {
                        "id": 37722,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37359,
                        "src": "6185:6:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PooledToken_$34481_storage",
                          "typeString": "struct SwapUtils.PooledToken storage ref"
                        }
                      }
                    ],
                    "id": 37723,
                    "isConstant": false,
                    "isInlineArray": true,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "6176:16:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_PooledToken_$34481_memory_ptr_$2_memory_ptr",
                      "typeString": "struct SwapUtils.PooledToken memory[2] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6134:58:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 37727,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37706,
                        "src": "6245:6:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 37728,
                        "name": "tokens_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37720,
                        "src": "6253:7:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_PooledToken_$34481_memory_ptr_$2_memory_ptr",
                          "typeString": "struct SwapUtils.PooledToken memory[2] memory"
                        }
                      },
                      {
                        "id": 37729,
                        "name": "lpToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37363,
                        "src": "6262:7:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LiquidityPoolToken_$34020",
                          "typeString": "contract LiquidityPoolToken"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_struct$_PooledToken_$34481_memory_ptr_$2_memory_ptr",
                          "typeString": "struct SwapUtils.PooledToken memory[2] memory"
                        },
                        {
                          "typeIdentifier": "t_contract$_LiquidityPoolToken_$34020",
                          "typeString": "contract LiquidityPoolToken"
                        }
                      ],
                      "expression": {
                        "id": 37725,
                        "name": "SwapUtils",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37303,
                        "src": "6210:9:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SwapUtils_$37303_$",
                          "typeString": "type(library SwapUtils)"
                        }
                      },
                      "id": 37726,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "calculateRemoveLiquidity",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36546,
                      "src": "6210:34:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_view$_t_uint256_$_t_array$_t_struct$_PooledToken_$34481_memory_ptr_$2_memory_ptr_$_t_contract$_LiquidityPoolToken_$34020_$returns$_t_array$_t_uint256_$2_memory_ptr_$",
                        "typeString": "function (uint256,struct SwapUtils.PooledToken memory[2] memory,contract LiquidityPoolToken) view returns (uint256[2] memory)"
                      }
                    },
                    "id": 37730,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6210:60:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                      "typeString": "uint256[2] memory"
                    }
                  },
                  "functionReturnParameters": 37713,
                  "id": 37731,
                  "nodeType": "Return",
                  "src": "6203:67:50"
                }
              ]
            },
            "baseFunctions": [
              33823
            ],
            "documentation": {
              "id": 37704,
              "nodeType": "StructuredDocumentation",
              "src": "5989:27:50",
              "text": "@inheritdoc ITenderSwap"
            },
            "functionSelector": "f2fad2b6",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calculateRemoveLiquidity",
            "nameLocation": "6031:24:50",
            "overrides": {
              "id": 37708,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6086:8:50"
            },
            "parameters": {
              "id": 37707,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37706,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "6064:6:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 37733,
                  "src": "6056:14:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37705,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6056:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6055:16:50"
            },
            "returnParameters": {
              "id": 37713,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37712,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 37733,
                  "src": "6104:17:50",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 37709,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "6104:7:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 37711,
                    "length": {
                      "hexValue": "32",
                      "id": 37710,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6112:1:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "6104:10:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6103:19:50"
            },
            "scope": 38136,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 37770,
            "nodeType": "FunctionDefinition",
            "src": "6319:773:50",
            "nodes": [],
            "body": {
              "id": 37769,
              "nodeType": "Block",
              "src": "6485:607:50",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_contract$_IERC20_$32501",
                        "typeString": "contract IERC20"
                      },
                      "id": 37748,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 37745,
                        "name": "tokenReceive",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37739,
                        "src": "6516:12:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$32501",
                          "typeString": "contract IERC20"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "id": 37746,
                          "name": "token0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37356,
                          "src": "6532:6:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PooledToken_$34481_storage",
                            "typeString": "struct SwapUtils.PooledToken storage ref"
                          }
                        },
                        "id": 37747,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "token",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 34478,
                        "src": "6532:12:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$32501",
                          "typeString": "contract IERC20"
                        }
                      },
                      "src": "6516:28:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "arguments": [
                        {
                          "id": 37760,
                          "name": "tokenAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37736,
                          "src": "6892:11:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 37761,
                          "name": "token1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37359,
                          "src": "6926:6:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PooledToken_$34481_storage",
                            "typeString": "struct SwapUtils.PooledToken storage ref"
                          }
                        },
                        {
                          "id": 37762,
                          "name": "token0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37356,
                          "src": "6955:6:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PooledToken_$34481_storage",
                            "typeString": "struct SwapUtils.PooledToken storage ref"
                          }
                        },
                        {
                          "id": 37763,
                          "name": "amplificationParams",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37353,
                          "src": "6984:19:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Amplification_$36920_storage",
                            "typeString": "struct SwapUtils.Amplification storage ref"
                          }
                        },
                        {
                          "id": 37764,
                          "name": "feeParams",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37350,
                          "src": "7026:9:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FeeParams_$34475_storage",
                            "typeString": "struct SwapUtils.FeeParams storage ref"
                          }
                        },
                        {
                          "id": 37765,
                          "name": "lpToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37363,
                          "src": "7058:7:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LiquidityPoolToken_$34020",
                            "typeString": "contract LiquidityPoolToken"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_struct$_PooledToken_$34481_storage",
                            "typeString": "struct SwapUtils.PooledToken storage ref"
                          },
                          {
                            "typeIdentifier": "t_struct$_PooledToken_$34481_storage",
                            "typeString": "struct SwapUtils.PooledToken storage ref"
                          },
                          {
                            "typeIdentifier": "t_struct$_Amplification_$36920_storage",
                            "typeString": "struct SwapUtils.Amplification storage ref"
                          },
                          {
                            "typeIdentifier": "t_struct$_FeeParams_$34475_storage",
                            "typeString": "struct SwapUtils.FeeParams storage ref"
                          },
                          {
                            "typeIdentifier": "t_contract$_LiquidityPoolToken_$34020",
                            "typeString": "contract LiquidityPoolToken"
                          }
                        ],
                        "expression": {
                          "id": 37758,
                          "name": "SwapUtils",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37303,
                          "src": "6834:9:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_SwapUtils_$37303_$",
                            "typeString": "type(library SwapUtils)"
                          }
                        },
                        "id": 37759,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "calculateWithdrawOneToken",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 35816,
                        "src": "6834:35:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_struct$_PooledToken_$34481_storage_ptr_$_t_struct$_PooledToken_$34481_storage_ptr_$_t_struct$_Amplification_$36920_storage_ptr_$_t_struct$_FeeParams_$34475_storage_ptr_$_t_contract$_LiquidityPoolToken_$34020_$returns$_t_uint256_$",
                          "typeString": "function (uint256,struct SwapUtils.PooledToken storage pointer,struct SwapUtils.PooledToken storage pointer,struct SwapUtils.Amplification storage pointer,struct SwapUtils.FeeParams storage pointer,contract LiquidityPoolToken) view returns (uint256)"
                        }
                      },
                      "id": 37766,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6834:250:50",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 37767,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "6516:568:50",
                    "trueExpression": {
                      "arguments": [
                        {
                          "id": 37751,
                          "name": "tokenAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37736,
                          "src": "6622:11:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 37752,
                          "name": "token0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37356,
                          "src": "6656:6:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PooledToken_$34481_storage",
                            "typeString": "struct SwapUtils.PooledToken storage ref"
                          }
                        },
                        {
                          "id": 37753,
                          "name": "token1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37359,
                          "src": "6685:6:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PooledToken_$34481_storage",
                            "typeString": "struct SwapUtils.PooledToken storage ref"
                          }
                        },
                        {
                          "id": 37754,
                          "name": "amplificationParams",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37353,
                          "src": "6714:19:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Amplification_$36920_storage",
                            "typeString": "struct SwapUtils.Amplification storage ref"
                          }
                        },
                        {
                          "id": 37755,
                          "name": "feeParams",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37350,
                          "src": "6756:9:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FeeParams_$34475_storage",
                            "typeString": "struct SwapUtils.FeeParams storage ref"
                          }
                        },
                        {
                          "id": 37756,
                          "name": "lpToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37363,
                          "src": "6788:7:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LiquidityPoolToken_$34020",
                            "typeString": "contract LiquidityPoolToken"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_struct$_PooledToken_$34481_storage",
                            "typeString": "struct SwapUtils.PooledToken storage ref"
                          },
                          {
                            "typeIdentifier": "t_struct$_PooledToken_$34481_storage",
                            "typeString": "struct SwapUtils.PooledToken storage ref"
                          },
                          {
                            "typeIdentifier": "t_struct$_Amplification_$36920_storage",
                            "typeString": "struct SwapUtils.Amplification storage ref"
                          },
                          {
                            "typeIdentifier": "t_struct$_FeeParams_$34475_storage",
                            "typeString": "struct SwapUtils.FeeParams storage ref"
                          },
                          {
                            "typeIdentifier": "t_contract$_LiquidityPoolToken_$34020",
                            "typeString": "contract LiquidityPoolToken"
                          }
                        ],
                        "expression": {
                          "id": 37749,
                          "name": "SwapUtils",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37303,
                          "src": "6564:9:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_SwapUtils_$37303_$",
                            "typeString": "type(library SwapUtils)"
                          }
                        },
                        "id": 37750,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "calculateWithdrawOneToken",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 35816,
                        "src": "6564:35:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_struct$_PooledToken_$34481_storage_ptr_$_t_struct$_PooledToken_$34481_storage_ptr_$_t_struct$_Amplification_$36920_storage_ptr_$_t_struct$_FeeParams_$34475_storage_ptr_$_t_contract$_LiquidityPoolToken_$34020_$returns$_t_uint256_$",
                          "typeString": "function (uint256,struct SwapUtils.PooledToken storage pointer,struct SwapUtils.PooledToken storage pointer,struct SwapUtils.Amplification storage pointer,struct SwapUtils.FeeParams storage pointer,contract LiquidityPoolToken) view returns (uint256)"
                        }
                      },
                      "id": 37757,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6564:250:50",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 37744,
                  "id": 37768,
                  "nodeType": "Return",
                  "src": "6496:588:50"
                }
              ]
            },
            "baseFunctions": [
              33834
            ],
            "documentation": {
              "id": 37734,
              "nodeType": "StructuredDocumentation",
              "src": "6286:27:50",
              "text": "@inheritdoc ITenderSwap"
            },
            "functionSelector": "805d2766",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calculateRemoveLiquidityOneToken",
            "nameLocation": "6328:32:50",
            "overrides": {
              "id": 37741,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6444:8:50"
            },
            "parameters": {
              "id": 37740,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37736,
                  "mutability": "mutable",
                  "name": "tokenAmount",
                  "nameLocation": "6369:11:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 37770,
                  "src": "6361:19:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37735,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6361:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37739,
                  "mutability": "mutable",
                  "name": "tokenReceive",
                  "nameLocation": "6389:12:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 37770,
                  "src": "6382:19:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$32501",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 37738,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 37737,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 32501,
                      "src": "6382:6:50"
                    },
                    "referencedDeclaration": 32501,
                    "src": "6382:6:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$32501",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6360:42:50"
            },
            "returnParameters": {
              "id": 37744,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37743,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 37770,
                  "src": "6471:7:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37742,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6471:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6470:9:50"
            },
            "scope": 38136,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 37803,
            "nodeType": "FunctionDefinition",
            "src": "7133:297:50",
            "nodes": [],
            "body": {
              "id": 37802,
              "nodeType": "Block",
              "src": "7246:184:50",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    37788
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 37788,
                      "mutability": "mutable",
                      "name": "tokens_",
                      "nameLocation": "7289:7:50",
                      "nodeType": "VariableDeclaration",
                      "scope": 37802,
                      "src": "7257:39:50",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_PooledToken_$34481_memory_ptr_$2_memory_ptr",
                        "typeString": "struct SwapUtils.PooledToken[2]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 37786,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 37785,
                            "name": "SwapUtils.PooledToken",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 34481,
                            "src": "7257:21:50"
                          },
                          "referencedDeclaration": 34481,
                          "src": "7257:21:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PooledToken_$34481_storage_ptr",
                            "typeString": "struct SwapUtils.PooledToken"
                          }
                        },
                        "id": 37787,
                        "length": {
                          "hexValue": "32",
                          "id": 37784,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7279:1:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "nodeType": "ArrayTypeName",
                        "src": "7257:24:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_PooledToken_$34481_storage_$2_storage_ptr",
                          "typeString": "struct SwapUtils.PooledToken[2]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 37792,
                  "initialValue": {
                    "components": [
                      {
                        "id": 37789,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37356,
                        "src": "7300:6:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PooledToken_$34481_storage",
                          "typeString": "struct SwapUtils.PooledToken storage ref"
                        }
                      },
                      {
                        "id": 37790,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37359,
                        "src": "7308:6:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PooledToken_$34481_storage",
                          "typeString": "struct SwapUtils.PooledToken storage ref"
                        }
                      }
                    ],
                    "id": 37791,
                    "isConstant": false,
                    "isInlineArray": true,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "7299:16:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_PooledToken_$34481_memory_ptr_$2_memory_ptr",
                      "typeString": "struct SwapUtils.PooledToken memory[2] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7257:58:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 37795,
                        "name": "tokens_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37788,
                        "src": "7366:7:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_PooledToken_$34481_memory_ptr_$2_memory_ptr",
                          "typeString": "struct SwapUtils.PooledToken memory[2] memory"
                        }
                      },
                      {
                        "id": 37796,
                        "name": "amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37774,
                        "src": "7375:7:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        }
                      },
                      {
                        "id": 37797,
                        "name": "deposit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37776,
                        "src": "7384:7:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "id": 37798,
                        "name": "amplificationParams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37353,
                        "src": "7393:19:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Amplification_$36920_storage",
                          "typeString": "struct SwapUtils.Amplification storage ref"
                        }
                      },
                      {
                        "id": 37799,
                        "name": "lpToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37363,
                        "src": "7414:7:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LiquidityPoolToken_$34020",
                          "typeString": "contract LiquidityPoolToken"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_struct$_PooledToken_$34481_memory_ptr_$2_memory_ptr",
                          "typeString": "struct SwapUtils.PooledToken memory[2] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_struct$_Amplification_$36920_storage",
                          "typeString": "struct SwapUtils.Amplification storage ref"
                        },
                        {
                          "typeIdentifier": "t_contract$_LiquidityPoolToken_$34020",
                          "typeString": "contract LiquidityPoolToken"
                        }
                      ],
                      "expression": {
                        "id": 37793,
                        "name": "SwapUtils",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37303,
                        "src": "7335:9:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SwapUtils_$37303_$",
                          "typeString": "type(library SwapUtils)"
                        }
                      },
                      "id": 37794,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "calculateTokenAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36285,
                      "src": "7335:30:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_view$_t_array$_t_struct$_PooledToken_$34481_memory_ptr_$2_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bool_$_t_struct$_Amplification_$36920_storage_ptr_$_t_contract$_LiquidityPoolToken_$34020_$returns$_t_uint256_$",
                        "typeString": "function (struct SwapUtils.PooledToken memory[2] memory,uint256[] memory,bool,struct SwapUtils.Amplification storage pointer,contract LiquidityPoolToken) view returns (uint256)"
                      }
                    },
                    "id": 37800,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7335:87:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 37781,
                  "id": 37801,
                  "nodeType": "Return",
                  "src": "7328:94:50"
                }
              ]
            },
            "baseFunctions": [
              33845
            ],
            "documentation": {
              "id": 37771,
              "nodeType": "StructuredDocumentation",
              "src": "7100:27:50",
              "text": "@inheritdoc ITenderSwap"
            },
            "functionSelector": "e6ab2806",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calculateTokenAmount",
            "nameLocation": "7142:20:50",
            "overrides": {
              "id": 37778,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7219:8:50"
            },
            "parameters": {
              "id": 37777,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37774,
                  "mutability": "mutable",
                  "name": "amounts",
                  "nameLocation": "7182:7:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 37803,
                  "src": "7163:26:50",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 37772,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "7163:7:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 37773,
                    "nodeType": "ArrayTypeName",
                    "src": "7163:9:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37776,
                  "mutability": "mutable",
                  "name": "deposit",
                  "nameLocation": "7196:7:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 37803,
                  "src": "7191:12:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 37775,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7191:4:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7162:42:50"
            },
            "returnParameters": {
              "id": 37781,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37780,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 37803,
                  "src": "7237:7:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37779,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7237:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7236:9:50"
            },
            "scope": 38136,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 37862,
            "nodeType": "FunctionDefinition",
            "src": "7514:561:50",
            "nodes": [],
            "body": {
              "id": 37861,
              "nodeType": "Block",
              "src": "7712:363:50",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_contract$_IERC20_$32501",
                      "typeString": "contract IERC20"
                    },
                    "id": 37827,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 37824,
                      "name": "_tokenFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37807,
                      "src": "7727:10:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$32501",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 37825,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37356,
                        "src": "7741:6:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PooledToken_$34481_storage",
                          "typeString": "struct SwapUtils.PooledToken storage ref"
                        }
                      },
                      "id": 37826,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "token",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 34478,
                      "src": "7741:12:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$32501",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "7727:26:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_contract$_IERC20_$32501",
                        "typeString": "contract IERC20"
                      },
                      "id": 37842,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 37839,
                        "name": "_tokenFrom",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37807,
                        "src": "7874:10:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$32501",
                          "typeString": "contract IERC20"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "id": 37840,
                          "name": "token1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37359,
                          "src": "7888:6:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PooledToken_$34481_storage",
                            "typeString": "struct SwapUtils.PooledToken storage ref"
                          }
                        },
                        "id": 37841,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "token",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 34478,
                        "src": "7888:12:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$32501",
                          "typeString": "contract IERC20"
                        }
                      },
                      "src": "7874:26:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "id": 37858,
                      "nodeType": "Block",
                      "src": "8017:51:50",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "hexValue": "4241445f544f4b454e5f46524f4d",
                                "id": 37855,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8039:16:50",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_63ffb9653efd98ea2e7b3fcef101c528f714b1200ce3e51b6e55f401c41a3c79",
                                  "typeString": "literal_string \"BAD_TOKEN_FROM\""
                                },
                                "value": "BAD_TOKEN_FROM"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_63ffb9653efd98ea2e7b3fcef101c528f714b1200ce3e51b6e55f401c41a3c79",
                                  "typeString": "literal_string \"BAD_TOKEN_FROM\""
                                }
                              ],
                              "id": 37854,
                              "name": "revert",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                -19,
                                -19
                              ],
                              "referencedDeclaration": -19,
                              "src": "8032:6:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                "typeString": "function (string memory) pure"
                              }
                            },
                            "id": 37856,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8032:24:50",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 37857,
                          "nodeType": "ExpressionStatement",
                          "src": "8032:24:50"
                        }
                      ]
                    },
                    "id": 37859,
                    "nodeType": "IfStatement",
                    "src": "7870:198:50",
                    "trueBody": {
                      "id": 37853,
                      "nodeType": "Block",
                      "src": "7902:109:50",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 37845,
                                "name": "token1",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 37359,
                                "src": "7939:6:50",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_PooledToken_$34481_storage",
                                  "typeString": "struct SwapUtils.PooledToken storage ref"
                                }
                              },
                              {
                                "id": 37846,
                                "name": "token0",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 37356,
                                "src": "7947:6:50",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_PooledToken_$34481_storage",
                                  "typeString": "struct SwapUtils.PooledToken storage ref"
                                }
                              },
                              {
                                "id": 37847,
                                "name": "_dx",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 37809,
                                "src": "7955:3:50",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 37848,
                                "name": "_minDy",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 37811,
                                "src": "7960:6:50",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 37849,
                                "name": "amplificationParams",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 37353,
                                "src": "7968:19:50",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Amplification_$36920_storage",
                                  "typeString": "struct SwapUtils.Amplification storage ref"
                                }
                              },
                              {
                                "id": 37850,
                                "name": "feeParams",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 37350,
                                "src": "7989:9:50",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_FeeParams_$34475_storage",
                                  "typeString": "struct SwapUtils.FeeParams storage ref"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_struct$_PooledToken_$34481_storage",
                                  "typeString": "struct SwapUtils.PooledToken storage ref"
                                },
                                {
                                  "typeIdentifier": "t_struct$_PooledToken_$34481_storage",
                                  "typeString": "struct SwapUtils.PooledToken storage ref"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_struct$_Amplification_$36920_storage",
                                  "typeString": "struct SwapUtils.Amplification storage ref"
                                },
                                {
                                  "typeIdentifier": "t_struct$_FeeParams_$34475_storage",
                                  "typeString": "struct SwapUtils.FeeParams storage ref"
                                }
                              ],
                              "expression": {
                                "id": 37843,
                                "name": "SwapUtils",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 37303,
                                "src": "7924:9:50",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_SwapUtils_$37303_$",
                                  "typeString": "type(library SwapUtils)"
                                }
                              },
                              "id": 37844,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "swap",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 34627,
                              "src": "7924:14:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_delegatecall_nonpayable$_t_struct$_PooledToken_$34481_storage_ptr_$_t_struct$_PooledToken_$34481_storage_ptr_$_t_uint256_$_t_uint256_$_t_struct$_Amplification_$36920_storage_ptr_$_t_struct$_FeeParams_$34475_storage_ptr_$returns$_t_uint256_$",
                                "typeString": "function (struct SwapUtils.PooledToken storage pointer,struct SwapUtils.PooledToken storage pointer,uint256,uint256,struct SwapUtils.Amplification storage pointer,struct SwapUtils.FeeParams storage pointer) returns (uint256)"
                              }
                            },
                            "id": 37851,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7924:75:50",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "functionReturnParameters": 37823,
                          "id": 37852,
                          "nodeType": "Return",
                          "src": "7917:82:50"
                        }
                      ]
                    }
                  },
                  "id": 37860,
                  "nodeType": "IfStatement",
                  "src": "7723:345:50",
                  "trueBody": {
                    "id": 37838,
                    "nodeType": "Block",
                    "src": "7755:109:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 37830,
                              "name": "token0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 37356,
                              "src": "7792:6:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PooledToken_$34481_storage",
                                "typeString": "struct SwapUtils.PooledToken storage ref"
                              }
                            },
                            {
                              "id": 37831,
                              "name": "token1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 37359,
                              "src": "7800:6:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PooledToken_$34481_storage",
                                "typeString": "struct SwapUtils.PooledToken storage ref"
                              }
                            },
                            {
                              "id": 37832,
                              "name": "_dx",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 37809,
                              "src": "7808:3:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 37833,
                              "name": "_minDy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 37811,
                              "src": "7813:6:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 37834,
                              "name": "amplificationParams",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 37353,
                              "src": "7821:19:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Amplification_$36920_storage",
                                "typeString": "struct SwapUtils.Amplification storage ref"
                              }
                            },
                            {
                              "id": 37835,
                              "name": "feeParams",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 37350,
                              "src": "7842:9:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_FeeParams_$34475_storage",
                                "typeString": "struct SwapUtils.FeeParams storage ref"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_PooledToken_$34481_storage",
                                "typeString": "struct SwapUtils.PooledToken storage ref"
                              },
                              {
                                "typeIdentifier": "t_struct$_PooledToken_$34481_storage",
                                "typeString": "struct SwapUtils.PooledToken storage ref"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_struct$_Amplification_$36920_storage",
                                "typeString": "struct SwapUtils.Amplification storage ref"
                              },
                              {
                                "typeIdentifier": "t_struct$_FeeParams_$34475_storage",
                                "typeString": "struct SwapUtils.FeeParams storage ref"
                              }
                            ],
                            "expression": {
                              "id": 37828,
                              "name": "SwapUtils",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 37303,
                              "src": "7777:9:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_SwapUtils_$37303_$",
                                "typeString": "type(library SwapUtils)"
                              }
                            },
                            "id": 37829,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "swap",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 34627,
                            "src": "7777:14:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_delegatecall_nonpayable$_t_struct$_PooledToken_$34481_storage_ptr_$_t_struct$_PooledToken_$34481_storage_ptr_$_t_uint256_$_t_uint256_$_t_struct$_Amplification_$36920_storage_ptr_$_t_struct$_FeeParams_$34475_storage_ptr_$returns$_t_uint256_$",
                              "typeString": "function (struct SwapUtils.PooledToken storage pointer,struct SwapUtils.PooledToken storage pointer,uint256,uint256,struct SwapUtils.Amplification storage pointer,struct SwapUtils.FeeParams storage pointer) returns (uint256)"
                            }
                          },
                          "id": 37836,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7777:75:50",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 37823,
                        "id": 37837,
                        "nodeType": "Return",
                        "src": "7770:82:50"
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              33860
            ],
            "documentation": {
              "id": 37804,
              "nodeType": "StructuredDocumentation",
              "src": "7481:27:50",
              "text": "@inheritdoc ITenderSwap"
            },
            "functionSelector": "c9ec9248",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 37817,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 37816,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 28770,
                  "src": "7656:12:50"
                },
                "nodeType": "ModifierInvocation",
                "src": "7656:12:50"
              },
              {
                "arguments": [
                  {
                    "id": 37819,
                    "name": "_deadline",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 37813,
                    "src": "7683:9:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 37820,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 37818,
                  "name": "deadlineCheck",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 37374,
                  "src": "7669:13:50"
                },
                "nodeType": "ModifierInvocation",
                "src": "7669:24:50"
              }
            ],
            "name": "swap",
            "nameLocation": "7523:4:50",
            "overrides": {
              "id": 37815,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7647:8:50"
            },
            "parameters": {
              "id": 37814,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37807,
                  "mutability": "mutable",
                  "name": "_tokenFrom",
                  "nameLocation": "7545:10:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 37862,
                  "src": "7538:17:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$32501",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 37806,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 37805,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 32501,
                      "src": "7538:6:50"
                    },
                    "referencedDeclaration": 32501,
                    "src": "7538:6:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$32501",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37809,
                  "mutability": "mutable",
                  "name": "_dx",
                  "nameLocation": "7574:3:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 37862,
                  "src": "7566:11:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37808,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7566:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37811,
                  "mutability": "mutable",
                  "name": "_minDy",
                  "nameLocation": "7596:6:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 37862,
                  "src": "7588:14:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37810,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7588:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37813,
                  "mutability": "mutable",
                  "name": "_deadline",
                  "nameLocation": "7621:9:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 37862,
                  "src": "7613:17:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37812,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7613:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7527:110:50"
            },
            "returnParameters": {
              "id": 37823,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37822,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 37862,
                  "src": "7703:7:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37821,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7703:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7702:9:50"
            },
            "scope": 38136,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 37904,
            "nodeType": "FunctionDefinition",
            "src": "8116:390:50",
            "nodes": [],
            "body": {
              "id": 37903,
              "nodeType": "Block",
              "src": "8315:191:50",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    37888
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 37888,
                      "mutability": "mutable",
                      "name": "tokens_",
                      "nameLocation": "8358:7:50",
                      "nodeType": "VariableDeclaration",
                      "scope": 37903,
                      "src": "8326:39:50",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_PooledToken_$34481_memory_ptr_$2_memory_ptr",
                        "typeString": "struct SwapUtils.PooledToken[2]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 37886,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 37885,
                            "name": "SwapUtils.PooledToken",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 34481,
                            "src": "8326:21:50"
                          },
                          "referencedDeclaration": 34481,
                          "src": "8326:21:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PooledToken_$34481_storage_ptr",
                            "typeString": "struct SwapUtils.PooledToken"
                          }
                        },
                        "id": 37887,
                        "length": {
                          "hexValue": "32",
                          "id": 37884,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8348:1:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "nodeType": "ArrayTypeName",
                        "src": "8326:24:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_PooledToken_$34481_storage_$2_storage_ptr",
                          "typeString": "struct SwapUtils.PooledToken[2]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 37892,
                  "initialValue": {
                    "components": [
                      {
                        "id": 37889,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37356,
                        "src": "8369:6:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PooledToken_$34481_storage",
                          "typeString": "struct SwapUtils.PooledToken storage ref"
                        }
                      },
                      {
                        "id": 37890,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37359,
                        "src": "8377:6:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PooledToken_$34481_storage",
                          "typeString": "struct SwapUtils.PooledToken storage ref"
                        }
                      }
                    ],
                    "id": 37891,
                    "isConstant": false,
                    "isInlineArray": true,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "8368:16:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_PooledToken_$34481_memory_ptr_$2_memory_ptr",
                      "typeString": "struct SwapUtils.PooledToken memory[2] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8326:58:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 37895,
                        "name": "tokens_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37888,
                        "src": "8427:7:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_PooledToken_$34481_memory_ptr_$2_memory_ptr",
                          "typeString": "struct SwapUtils.PooledToken memory[2] memory"
                        }
                      },
                      {
                        "id": 37896,
                        "name": "_amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37867,
                        "src": "8436:8:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$2_calldata_ptr",
                          "typeString": "uint256[2] calldata"
                        }
                      },
                      {
                        "id": 37897,
                        "name": "_minToMint",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37869,
                        "src": "8446:10:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 37898,
                        "name": "amplificationParams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37353,
                        "src": "8458:19:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Amplification_$36920_storage",
                          "typeString": "struct SwapUtils.Amplification storage ref"
                        }
                      },
                      {
                        "id": 37899,
                        "name": "feeParams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37350,
                        "src": "8479:9:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_FeeParams_$34475_storage",
                          "typeString": "struct SwapUtils.FeeParams storage ref"
                        }
                      },
                      {
                        "id": 37900,
                        "name": "lpToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37363,
                        "src": "8490:7:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LiquidityPoolToken_$34020",
                          "typeString": "contract LiquidityPoolToken"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_struct$_PooledToken_$34481_memory_ptr_$2_memory_ptr",
                          "typeString": "struct SwapUtils.PooledToken memory[2] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$2_calldata_ptr",
                          "typeString": "uint256[2] calldata"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_struct$_Amplification_$36920_storage",
                          "typeString": "struct SwapUtils.Amplification storage ref"
                        },
                        {
                          "typeIdentifier": "t_struct$_FeeParams_$34475_storage",
                          "typeString": "struct SwapUtils.FeeParams storage ref"
                        },
                        {
                          "typeIdentifier": "t_contract$_LiquidityPoolToken_$34020",
                          "typeString": "contract LiquidityPoolToken"
                        }
                      ],
                      "expression": {
                        "id": 37893,
                        "name": "SwapUtils",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37303,
                        "src": "8404:9:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SwapUtils_$37303_$",
                          "typeString": "type(library SwapUtils)"
                        }
                      },
                      "id": 37894,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addLiquidity",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35161,
                      "src": "8404:22:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_nonpayable$_t_array$_t_struct$_PooledToken_$34481_memory_ptr_$2_memory_ptr_$_t_array$_t_uint256_$2_memory_ptr_$_t_uint256_$_t_struct$_Amplification_$36920_storage_ptr_$_t_struct$_FeeParams_$34475_storage_ptr_$_t_contract$_LiquidityPoolToken_$34020_$returns$_t_uint256_$",
                        "typeString": "function (struct SwapUtils.PooledToken memory[2] memory,uint256[2] memory,uint256,struct SwapUtils.Amplification storage pointer,struct SwapUtils.FeeParams storage pointer,contract LiquidityPoolToken) returns (uint256)"
                      }
                    },
                    "id": 37901,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8404:94:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 37881,
                  "id": 37902,
                  "nodeType": "Return",
                  "src": "8397:101:50"
                }
              ]
            },
            "baseFunctions": [
              33874
            ],
            "documentation": {
              "id": 37863,
              "nodeType": "StructuredDocumentation",
              "src": "8083:27:50",
              "text": "@inheritdoc ITenderSwap"
            },
            "functionSelector": "46eda749",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 37875,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 37874,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 28770,
                  "src": "8259:12:50"
                },
                "nodeType": "ModifierInvocation",
                "src": "8259:12:50"
              },
              {
                "arguments": [
                  {
                    "id": 37877,
                    "name": "_deadline",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 37871,
                    "src": "8286:9:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 37878,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 37876,
                  "name": "deadlineCheck",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 37374,
                  "src": "8272:13:50"
                },
                "nodeType": "ModifierInvocation",
                "src": "8272:24:50"
              }
            ],
            "name": "addLiquidity",
            "nameLocation": "8125:12:50",
            "overrides": {
              "id": 37873,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8250:8:50"
            },
            "parameters": {
              "id": 37872,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37867,
                  "mutability": "mutable",
                  "name": "_amounts",
                  "nameLocation": "8168:8:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 37904,
                  "src": "8148:28:50",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_calldata_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 37864,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "8148:7:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 37866,
                    "length": {
                      "hexValue": "32",
                      "id": 37865,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8156:1:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "8148:10:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37869,
                  "mutability": "mutable",
                  "name": "_minToMint",
                  "nameLocation": "8195:10:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 37904,
                  "src": "8187:18:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37868,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8187:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37871,
                  "mutability": "mutable",
                  "name": "_deadline",
                  "nameLocation": "8224:9:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 37904,
                  "src": "8216:17:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37870,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8216:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8137:103:50"
            },
            "returnParameters": {
              "id": 37881,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37880,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 37904,
                  "src": "8306:7:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37879,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8306:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8305:9:50"
            },
            "scope": 38136,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 37946,
            "nodeType": "FunctionDefinition",
            "src": "8547:368:50",
            "nodes": [],
            "body": {
              "id": 37945,
              "nodeType": "Block",
              "src": "8755:160:50",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    37932
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 37932,
                      "mutability": "mutable",
                      "name": "tokens_",
                      "nameLocation": "8798:7:50",
                      "nodeType": "VariableDeclaration",
                      "scope": 37945,
                      "src": "8766:39:50",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_PooledToken_$34481_memory_ptr_$2_memory_ptr",
                        "typeString": "struct SwapUtils.PooledToken[2]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 37930,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 37929,
                            "name": "SwapUtils.PooledToken",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 34481,
                            "src": "8766:21:50"
                          },
                          "referencedDeclaration": 34481,
                          "src": "8766:21:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PooledToken_$34481_storage_ptr",
                            "typeString": "struct SwapUtils.PooledToken"
                          }
                        },
                        "id": 37931,
                        "length": {
                          "hexValue": "32",
                          "id": 37928,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8788:1:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "nodeType": "ArrayTypeName",
                        "src": "8766:24:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_PooledToken_$34481_storage_$2_storage_ptr",
                          "typeString": "struct SwapUtils.PooledToken[2]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 37936,
                  "initialValue": {
                    "components": [
                      {
                        "id": 37933,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37356,
                        "src": "8809:6:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PooledToken_$34481_storage",
                          "typeString": "struct SwapUtils.PooledToken storage ref"
                        }
                      },
                      {
                        "id": 37934,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37359,
                        "src": "8817:6:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PooledToken_$34481_storage",
                          "typeString": "struct SwapUtils.PooledToken storage ref"
                        }
                      }
                    ],
                    "id": 37935,
                    "isConstant": false,
                    "isInlineArray": true,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "8808:16:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_PooledToken_$34481_memory_ptr_$2_memory_ptr",
                      "typeString": "struct SwapUtils.PooledToken memory[2] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8766:58:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 37939,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37907,
                        "src": "8870:6:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 37940,
                        "name": "tokens_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37932,
                        "src": "8878:7:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_PooledToken_$34481_memory_ptr_$2_memory_ptr",
                          "typeString": "struct SwapUtils.PooledToken memory[2] memory"
                        }
                      },
                      {
                        "id": 37941,
                        "name": "minAmounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37911,
                        "src": "8887:10:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$2_calldata_ptr",
                          "typeString": "uint256[2] calldata"
                        }
                      },
                      {
                        "id": 37942,
                        "name": "lpToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37363,
                        "src": "8899:7:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LiquidityPoolToken_$34020",
                          "typeString": "contract LiquidityPoolToken"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_struct$_PooledToken_$34481_memory_ptr_$2_memory_ptr",
                          "typeString": "struct SwapUtils.PooledToken memory[2] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$2_calldata_ptr",
                          "typeString": "uint256[2] calldata"
                        },
                        {
                          "typeIdentifier": "t_contract$_LiquidityPoolToken_$34020",
                          "typeString": "contract LiquidityPoolToken"
                        }
                      ],
                      "expression": {
                        "id": 37937,
                        "name": "SwapUtils",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37303,
                        "src": "8844:9:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SwapUtils_$37303_$",
                          "typeString": "type(library SwapUtils)"
                        }
                      },
                      "id": 37938,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "removeLiquidity",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35257,
                      "src": "8844:25:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_nonpayable$_t_uint256_$_t_array$_t_struct$_PooledToken_$34481_memory_ptr_$2_memory_ptr_$_t_array$_t_uint256_$2_memory_ptr_$_t_contract$_LiquidityPoolToken_$34020_$returns$_t_array$_t_uint256_$2_memory_ptr_$",
                        "typeString": "function (uint256,struct SwapUtils.PooledToken memory[2] memory,uint256[2] memory,contract LiquidityPoolToken) returns (uint256[2] memory)"
                      }
                    },
                    "id": 37943,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8844:63:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                      "typeString": "uint256[2] memory"
                    }
                  },
                  "functionReturnParameters": 37925,
                  "id": 37944,
                  "nodeType": "Return",
                  "src": "8837:70:50"
                }
              ]
            },
            "baseFunctions": [
              33890
            ],
            "documentation": {
              "id": 37905,
              "nodeType": "StructuredDocumentation",
              "src": "8514:27:50",
              "text": "@inheritdoc ITenderSwap"
            },
            "functionSelector": "d6f0df62",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 37917,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 37916,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 28770,
                  "src": "8690:12:50"
                },
                "nodeType": "ModifierInvocation",
                "src": "8690:12:50"
              },
              {
                "arguments": [
                  {
                    "id": 37919,
                    "name": "deadline",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 37913,
                    "src": "8717:8:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 37920,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 37918,
                  "name": "deadlineCheck",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 37374,
                  "src": "8703:13:50"
                },
                "nodeType": "ModifierInvocation",
                "src": "8703:23:50"
              }
            ],
            "name": "removeLiquidity",
            "nameLocation": "8556:15:50",
            "overrides": {
              "id": 37915,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8681:8:50"
            },
            "parameters": {
              "id": 37914,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37907,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "8590:6:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 37946,
                  "src": "8582:14:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37906,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8582:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37911,
                  "mutability": "mutable",
                  "name": "minAmounts",
                  "nameLocation": "8627:10:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 37946,
                  "src": "8607:30:50",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_calldata_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 37908,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "8607:7:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 37910,
                    "length": {
                      "hexValue": "32",
                      "id": 37909,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8615:1:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "8607:10:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37913,
                  "mutability": "mutable",
                  "name": "deadline",
                  "nameLocation": "8656:8:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 37946,
                  "src": "8648:16:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37912,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8648:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8571:100:50"
            },
            "returnParameters": {
              "id": 37925,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37924,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 37946,
                  "src": "8736:17:50",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 37921,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "8736:7:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 37923,
                    "length": {
                      "hexValue": "32",
                      "id": 37922,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8744:1:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "8736:10:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8735:19:50"
            },
            "scope": 38136,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 37997,
            "nodeType": "FunctionDefinition",
            "src": "8956:958:50",
            "nodes": [],
            "body": {
              "id": 37996,
              "nodeType": "Block",
              "src": "9189:725:50",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_contract$_IERC20_$32501",
                      "typeString": "contract IERC20"
                    },
                    "id": 37970,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 37967,
                      "name": "_tokenReceive",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37952,
                      "src": "9204:13:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$32501",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 37968,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37356,
                        "src": "9221:6:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PooledToken_$34481_storage",
                          "typeString": "struct SwapUtils.PooledToken storage ref"
                        }
                      },
                      "id": 37969,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "token",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 34478,
                      "src": "9221:12:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$32501",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "9204:29:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 37994,
                    "nodeType": "Block",
                    "src": "9574:333:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 37985,
                              "name": "_tokenAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 37949,
                              "src": "9669:12:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 37986,
                              "name": "token1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 37359,
                              "src": "9704:6:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PooledToken_$34481_storage",
                                "typeString": "struct SwapUtils.PooledToken storage ref"
                              }
                            },
                            {
                              "id": 37987,
                              "name": "token0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 37356,
                              "src": "9733:6:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PooledToken_$34481_storage",
                                "typeString": "struct SwapUtils.PooledToken storage ref"
                              }
                            },
                            {
                              "id": 37988,
                              "name": "_minAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 37954,
                              "src": "9762:10:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 37989,
                              "name": "amplificationParams",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 37353,
                              "src": "9795:19:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Amplification_$36920_storage",
                                "typeString": "struct SwapUtils.Amplification storage ref"
                              }
                            },
                            {
                              "id": 37990,
                              "name": "feeParams",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 37350,
                              "src": "9837:9:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_FeeParams_$34475_storage",
                                "typeString": "struct SwapUtils.FeeParams storage ref"
                              }
                            },
                            {
                              "id": 37991,
                              "name": "lpToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 37363,
                              "src": "9869:7:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_LiquidityPoolToken_$34020",
                                "typeString": "contract LiquidityPoolToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_struct$_PooledToken_$34481_storage",
                                "typeString": "struct SwapUtils.PooledToken storage ref"
                              },
                              {
                                "typeIdentifier": "t_struct$_PooledToken_$34481_storage",
                                "typeString": "struct SwapUtils.PooledToken storage ref"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_struct$_Amplification_$36920_storage",
                                "typeString": "struct SwapUtils.Amplification storage ref"
                              },
                              {
                                "typeIdentifier": "t_struct$_FeeParams_$34475_storage",
                                "typeString": "struct SwapUtils.FeeParams storage ref"
                              },
                              {
                                "typeIdentifier": "t_contract$_LiquidityPoolToken_$34020",
                                "typeString": "contract LiquidityPoolToken"
                              }
                            ],
                            "expression": {
                              "id": 37983,
                              "name": "SwapUtils",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 37303,
                              "src": "9613:9:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_SwapUtils_$37303_$",
                                "typeString": "type(library SwapUtils)"
                              }
                            },
                            "id": 37984,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "removeLiquidityOneToken",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 35348,
                            "src": "9613:33:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_delegatecall_nonpayable$_t_uint256_$_t_struct$_PooledToken_$34481_storage_ptr_$_t_struct$_PooledToken_$34481_storage_ptr_$_t_uint256_$_t_struct$_Amplification_$36920_storage_ptr_$_t_struct$_FeeParams_$34475_storage_ptr_$_t_contract$_LiquidityPoolToken_$34020_$returns$_t_uint256_$",
                              "typeString": "function (uint256,struct SwapUtils.PooledToken storage pointer,struct SwapUtils.PooledToken storage pointer,uint256,struct SwapUtils.Amplification storage pointer,struct SwapUtils.FeeParams storage pointer,contract LiquidityPoolToken) returns (uint256)"
                            }
                          },
                          "id": 37992,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9613:282:50",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 37966,
                        "id": 37993,
                        "nodeType": "Return",
                        "src": "9589:306:50"
                      }
                    ]
                  },
                  "id": 37995,
                  "nodeType": "IfStatement",
                  "src": "9200:707:50",
                  "trueBody": {
                    "id": 37982,
                    "nodeType": "Block",
                    "src": "9235:333:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 37973,
                              "name": "_tokenAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 37949,
                              "src": "9330:12:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 37974,
                              "name": "token0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 37356,
                              "src": "9365:6:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PooledToken_$34481_storage",
                                "typeString": "struct SwapUtils.PooledToken storage ref"
                              }
                            },
                            {
                              "id": 37975,
                              "name": "token1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 37359,
                              "src": "9394:6:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PooledToken_$34481_storage",
                                "typeString": "struct SwapUtils.PooledToken storage ref"
                              }
                            },
                            {
                              "id": 37976,
                              "name": "_minAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 37954,
                              "src": "9423:10:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 37977,
                              "name": "amplificationParams",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 37353,
                              "src": "9456:19:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Amplification_$36920_storage",
                                "typeString": "struct SwapUtils.Amplification storage ref"
                              }
                            },
                            {
                              "id": 37978,
                              "name": "feeParams",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 37350,
                              "src": "9498:9:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_FeeParams_$34475_storage",
                                "typeString": "struct SwapUtils.FeeParams storage ref"
                              }
                            },
                            {
                              "id": 37979,
                              "name": "lpToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 37363,
                              "src": "9530:7:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_LiquidityPoolToken_$34020",
                                "typeString": "contract LiquidityPoolToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_struct$_PooledToken_$34481_storage",
                                "typeString": "struct SwapUtils.PooledToken storage ref"
                              },
                              {
                                "typeIdentifier": "t_struct$_PooledToken_$34481_storage",
                                "typeString": "struct SwapUtils.PooledToken storage ref"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_struct$_Amplification_$36920_storage",
                                "typeString": "struct SwapUtils.Amplification storage ref"
                              },
                              {
                                "typeIdentifier": "t_struct$_FeeParams_$34475_storage",
                                "typeString": "struct SwapUtils.FeeParams storage ref"
                              },
                              {
                                "typeIdentifier": "t_contract$_LiquidityPoolToken_$34020",
                                "typeString": "contract LiquidityPoolToken"
                              }
                            ],
                            "expression": {
                              "id": 37971,
                              "name": "SwapUtils",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 37303,
                              "src": "9274:9:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_SwapUtils_$37303_$",
                                "typeString": "type(library SwapUtils)"
                              }
                            },
                            "id": 37972,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "removeLiquidityOneToken",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 35348,
                            "src": "9274:33:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_delegatecall_nonpayable$_t_uint256_$_t_struct$_PooledToken_$34481_storage_ptr_$_t_struct$_PooledToken_$34481_storage_ptr_$_t_uint256_$_t_struct$_Amplification_$36920_storage_ptr_$_t_struct$_FeeParams_$34475_storage_ptr_$_t_contract$_LiquidityPoolToken_$34020_$returns$_t_uint256_$",
                              "typeString": "function (uint256,struct SwapUtils.PooledToken storage pointer,struct SwapUtils.PooledToken storage pointer,uint256,struct SwapUtils.Amplification storage pointer,struct SwapUtils.FeeParams storage pointer,contract LiquidityPoolToken) returns (uint256)"
                            }
                          },
                          "id": 37980,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9274:282:50",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 37966,
                        "id": 37981,
                        "nodeType": "Return",
                        "src": "9250:306:50"
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              33905
            ],
            "documentation": {
              "id": 37947,
              "nodeType": "StructuredDocumentation",
              "src": "8923:27:50",
              "text": "@inheritdoc ITenderSwap"
            },
            "functionSelector": "ce1fdb8b",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 37960,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 37959,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 28770,
                  "src": "9133:12:50"
                },
                "nodeType": "ModifierInvocation",
                "src": "9133:12:50"
              },
              {
                "arguments": [
                  {
                    "id": 37962,
                    "name": "_deadline",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 37956,
                    "src": "9160:9:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 37963,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 37961,
                  "name": "deadlineCheck",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 37374,
                  "src": "9146:13:50"
                },
                "nodeType": "ModifierInvocation",
                "src": "9146:24:50"
              }
            ],
            "name": "removeLiquidityOneToken",
            "nameLocation": "8965:23:50",
            "overrides": {
              "id": 37958,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "9124:8:50"
            },
            "parameters": {
              "id": 37957,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37949,
                  "mutability": "mutable",
                  "name": "_tokenAmount",
                  "nameLocation": "9007:12:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 37997,
                  "src": "8999:20:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37948,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8999:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37952,
                  "mutability": "mutable",
                  "name": "_tokenReceive",
                  "nameLocation": "9037:13:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 37997,
                  "src": "9030:20:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$32501",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 37951,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 37950,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 32501,
                      "src": "9030:6:50"
                    },
                    "referencedDeclaration": 32501,
                    "src": "9030:6:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$32501",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37954,
                  "mutability": "mutable",
                  "name": "_minAmount",
                  "nameLocation": "9069:10:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 37997,
                  "src": "9061:18:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37953,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9061:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37956,
                  "mutability": "mutable",
                  "name": "_deadline",
                  "nameLocation": "9098:9:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 37997,
                  "src": "9090:17:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37955,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9090:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8988:126:50"
            },
            "returnParameters": {
              "id": 37966,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37965,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 37997,
                  "src": "9180:7:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37964,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9180:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9179:9:50"
            },
            "scope": 38136,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 38039,
            "nodeType": "FunctionDefinition",
            "src": "9955:552:50",
            "nodes": [],
            "body": {
              "id": 38038,
              "nodeType": "Block",
              "src": "10170:337:50",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    38023
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 38023,
                      "mutability": "mutable",
                      "name": "tokens_",
                      "nameLocation": "10213:7:50",
                      "nodeType": "VariableDeclaration",
                      "scope": 38038,
                      "src": "10181:39:50",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_PooledToken_$34481_memory_ptr_$2_memory_ptr",
                        "typeString": "struct SwapUtils.PooledToken[2]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 38021,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 38020,
                            "name": "SwapUtils.PooledToken",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 34481,
                            "src": "10181:21:50"
                          },
                          "referencedDeclaration": 34481,
                          "src": "10181:21:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PooledToken_$34481_storage_ptr",
                            "typeString": "struct SwapUtils.PooledToken"
                          }
                        },
                        "id": 38022,
                        "length": {
                          "hexValue": "32",
                          "id": 38019,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10203:1:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "nodeType": "ArrayTypeName",
                        "src": "10181:24:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_PooledToken_$34481_storage_$2_storage_ptr",
                          "typeString": "struct SwapUtils.PooledToken[2]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 38027,
                  "initialValue": {
                    "components": [
                      {
                        "id": 38024,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37356,
                        "src": "10224:6:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PooledToken_$34481_storage",
                          "typeString": "struct SwapUtils.PooledToken storage ref"
                        }
                      },
                      {
                        "id": 38025,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37359,
                        "src": "10232:6:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PooledToken_$34481_storage",
                          "typeString": "struct SwapUtils.PooledToken storage ref"
                        }
                      }
                    ],
                    "id": 38026,
                    "isConstant": false,
                    "isInlineArray": true,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "10223:16:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_PooledToken_$34481_memory_ptr_$2_memory_ptr",
                      "typeString": "struct SwapUtils.PooledToken memory[2] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10181:58:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 38030,
                        "name": "tokens_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38023,
                        "src": "10325:7:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_PooledToken_$34481_memory_ptr_$2_memory_ptr",
                          "typeString": "struct SwapUtils.PooledToken memory[2] memory"
                        }
                      },
                      {
                        "id": 38031,
                        "name": "_amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38002,
                        "src": "10351:8:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$2_calldata_ptr",
                          "typeString": "uint256[2] calldata"
                        }
                      },
                      {
                        "id": 38032,
                        "name": "_maxBurnAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38004,
                        "src": "10378:14:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 38033,
                        "name": "amplificationParams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37353,
                        "src": "10411:19:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Amplification_$36920_storage",
                          "typeString": "struct SwapUtils.Amplification storage ref"
                        }
                      },
                      {
                        "id": 38034,
                        "name": "feeParams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37350,
                        "src": "10449:9:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_FeeParams_$34475_storage",
                          "typeString": "struct SwapUtils.FeeParams storage ref"
                        }
                      },
                      {
                        "id": 38035,
                        "name": "lpToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37363,
                        "src": "10477:7:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LiquidityPoolToken_$34020",
                          "typeString": "contract LiquidityPoolToken"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_struct$_PooledToken_$34481_memory_ptr_$2_memory_ptr",
                          "typeString": "struct SwapUtils.PooledToken memory[2] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$2_calldata_ptr",
                          "typeString": "uint256[2] calldata"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_struct$_Amplification_$36920_storage",
                          "typeString": "struct SwapUtils.Amplification storage ref"
                        },
                        {
                          "typeIdentifier": "t_struct$_FeeParams_$34475_storage",
                          "typeString": "struct SwapUtils.FeeParams storage ref"
                        },
                        {
                          "typeIdentifier": "t_contract$_LiquidityPoolToken_$34020",
                          "typeString": "contract LiquidityPoolToken"
                        }
                      ],
                      "expression": {
                        "id": 38028,
                        "name": "SwapUtils",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37303,
                        "src": "10272:9:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SwapUtils_$37303_$",
                          "typeString": "type(library SwapUtils)"
                        }
                      },
                      "id": 38029,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "removeLiquidityImbalance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35777,
                      "src": "10272:34:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_nonpayable$_t_array$_t_struct$_PooledToken_$34481_memory_ptr_$2_memory_ptr_$_t_array$_t_uint256_$2_memory_ptr_$_t_uint256_$_t_struct$_Amplification_$36920_storage_ptr_$_t_struct$_FeeParams_$34475_storage_ptr_$_t_contract$_LiquidityPoolToken_$34020_$returns$_t_uint256_$",
                        "typeString": "function (struct SwapUtils.PooledToken memory[2] memory,uint256[2] memory,uint256,struct SwapUtils.Amplification storage pointer,struct SwapUtils.FeeParams storage pointer,contract LiquidityPoolToken) returns (uint256)"
                      }
                    },
                    "id": 38036,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10272:227:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 38016,
                  "id": 38037,
                  "nodeType": "Return",
                  "src": "10252:247:50"
                }
              ]
            },
            "baseFunctions": [
              33919
            ],
            "documentation": {
              "id": 37998,
              "nodeType": "StructuredDocumentation",
              "src": "9922:27:50",
              "text": "@inheritdoc ITenderSwap"
            },
            "functionSelector": "bfc65c9b",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 38010,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 38009,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 28770,
                  "src": "10114:12:50"
                },
                "nodeType": "ModifierInvocation",
                "src": "10114:12:50"
              },
              {
                "arguments": [
                  {
                    "id": 38012,
                    "name": "_deadline",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 38006,
                    "src": "10141:9:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 38013,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 38011,
                  "name": "deadlineCheck",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 37374,
                  "src": "10127:13:50"
                },
                "nodeType": "ModifierInvocation",
                "src": "10127:24:50"
              }
            ],
            "name": "removeLiquidityImbalance",
            "nameLocation": "9964:24:50",
            "overrides": {
              "id": 38008,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "10105:8:50"
            },
            "parameters": {
              "id": 38007,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38002,
                  "mutability": "mutable",
                  "name": "_amounts",
                  "nameLocation": "10019:8:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 38039,
                  "src": "9999:28:50",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_calldata_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 37999,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "9999:7:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 38001,
                    "length": {
                      "hexValue": "32",
                      "id": 38000,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10007:1:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "9999:10:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38004,
                  "mutability": "mutable",
                  "name": "_maxBurnAmount",
                  "nameLocation": "10046:14:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 38039,
                  "src": "10038:22:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 38003,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10038:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38006,
                  "mutability": "mutable",
                  "name": "_deadline",
                  "nameLocation": "10079:9:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 38039,
                  "src": "10071:17:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 38005,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10071:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9988:107:50"
            },
            "returnParameters": {
              "id": 38016,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38015,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 38039,
                  "src": "10161:7:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 38014,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10161:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10160:9:50"
            },
            "scope": 38136,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 38055,
            "nodeType": "FunctionDefinition",
            "src": "10581:123:50",
            "nodes": [],
            "body": {
              "id": 38054,
              "nodeType": "Block",
              "src": "10651:53:50",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 38051,
                        "name": "newAdminFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38042,
                        "src": "10684:11:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 38048,
                        "name": "feeParams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37350,
                        "src": "10662:9:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_FeeParams_$34475_storage",
                          "typeString": "struct SwapUtils.FeeParams storage ref"
                        }
                      },
                      "id": 38050,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setAdminFee",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37275,
                      "src": "10662:21:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_nonpayable$_t_struct$_FeeParams_$34475_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_struct$_FeeParams_$34475_storage_ptr_$",
                        "typeString": "function (struct SwapUtils.FeeParams storage pointer,uint256)"
                      }
                    },
                    "id": 38052,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10662:34:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38053,
                  "nodeType": "ExpressionStatement",
                  "src": "10662:34:50"
                }
              ]
            },
            "baseFunctions": [
              33925
            ],
            "documentation": {
              "id": 38040,
              "nodeType": "StructuredDocumentation",
              "src": "10548:27:50",
              "text": "@inheritdoc ITenderSwap"
            },
            "functionSelector": "8beb60b6",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 38046,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 38045,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 28471,
                  "src": "10641:9:50"
                },
                "nodeType": "ModifierInvocation",
                "src": "10641:9:50"
              }
            ],
            "name": "setAdminFee",
            "nameLocation": "10590:11:50",
            "overrides": {
              "id": 38044,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "10632:8:50"
            },
            "parameters": {
              "id": 38043,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38042,
                  "mutability": "mutable",
                  "name": "newAdminFee",
                  "nameLocation": "10610:11:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 38055,
                  "src": "10602:19:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 38041,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10602:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10601:21:50"
            },
            "returnParameters": {
              "id": 38047,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10651:0:50"
            },
            "scope": 38136,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 38071,
            "nodeType": "FunctionDefinition",
            "src": "10745:119:50",
            "nodes": [],
            "body": {
              "id": 38070,
              "nodeType": "Block",
              "src": "10813:51:50",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 38067,
                        "name": "newSwapFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38058,
                        "src": "10845:10:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 38064,
                        "name": "feeParams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37350,
                        "src": "10824:9:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_FeeParams_$34475_storage",
                          "typeString": "struct SwapUtils.FeeParams storage ref"
                        }
                      },
                      "id": 38066,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setSwapFee",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37302,
                      "src": "10824:20:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_nonpayable$_t_struct$_FeeParams_$34475_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_struct$_FeeParams_$34475_storage_ptr_$",
                        "typeString": "function (struct SwapUtils.FeeParams storage pointer,uint256)"
                      }
                    },
                    "id": 38068,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10824:32:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38069,
                  "nodeType": "ExpressionStatement",
                  "src": "10824:32:50"
                }
              ]
            },
            "baseFunctions": [
              33931
            ],
            "documentation": {
              "id": 38056,
              "nodeType": "StructuredDocumentation",
              "src": "10712:27:50",
              "text": "@inheritdoc ITenderSwap"
            },
            "functionSelector": "34e19907",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 38062,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 38061,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 28471,
                  "src": "10803:9:50"
                },
                "nodeType": "ModifierInvocation",
                "src": "10803:9:50"
              }
            ],
            "name": "setSwapFee",
            "nameLocation": "10754:10:50",
            "overrides": {
              "id": 38060,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "10794:8:50"
            },
            "parameters": {
              "id": 38059,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38058,
                  "mutability": "mutable",
                  "name": "newSwapFee",
                  "nameLocation": "10773:10:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 38071,
                  "src": "10765:18:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 38057,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10765:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10764:20:50"
            },
            "returnParameters": {
              "id": 38063,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10813:0:50"
            },
            "scope": 38136,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 38090,
            "nodeType": "FunctionDefinition",
            "src": "10905:145:50",
            "nodes": [],
            "body": {
              "id": 38089,
              "nodeType": "Block",
              "src": "10985:65:50",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 38085,
                        "name": "futureA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38074,
                        "src": "11022:7:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 38086,
                        "name": "futureTime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38076,
                        "src": "11031:10:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 38082,
                        "name": "amplificationParams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37353,
                        "src": "10996:19:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Amplification_$36920_storage",
                          "typeString": "struct SwapUtils.Amplification storage ref"
                        }
                      },
                      "id": 38084,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "rampA",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37162,
                      "src": "10996:25:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_nonpayable$_t_struct$_Amplification_$36920_storage_ptr_$_t_uint256_$_t_uint256_$returns$__$bound_to$_t_struct$_Amplification_$36920_storage_ptr_$",
                        "typeString": "function (struct SwapUtils.Amplification storage pointer,uint256,uint256)"
                      }
                    },
                    "id": 38087,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10996:46:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38088,
                  "nodeType": "ExpressionStatement",
                  "src": "10996:46:50"
                }
              ]
            },
            "baseFunctions": [
              33939
            ],
            "documentation": {
              "id": 38072,
              "nodeType": "StructuredDocumentation",
              "src": "10872:27:50",
              "text": "@inheritdoc ITenderSwap"
            },
            "functionSelector": "593d132c",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 38080,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 38079,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 28471,
                  "src": "10975:9:50"
                },
                "nodeType": "ModifierInvocation",
                "src": "10975:9:50"
              }
            ],
            "name": "rampA",
            "nameLocation": "10914:5:50",
            "overrides": {
              "id": 38078,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "10966:8:50"
            },
            "parameters": {
              "id": 38077,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38074,
                  "mutability": "mutable",
                  "name": "futureA",
                  "nameLocation": "10928:7:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 38090,
                  "src": "10920:15:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 38073,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10920:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38076,
                  "mutability": "mutable",
                  "name": "futureTime",
                  "nameLocation": "10945:10:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 38090,
                  "src": "10937:18:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 38075,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10937:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10919:37:50"
            },
            "returnParameters": {
              "id": 38081,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10985:0:50"
            },
            "scope": 38136,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 38103,
            "nodeType": "FunctionDefinition",
            "src": "11091:99:50",
            "nodes": [],
            "body": {
              "id": 38102,
              "nodeType": "Block",
              "src": "11140:50:50",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 38097,
                        "name": "amplificationParams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37353,
                        "src": "11151:19:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Amplification_$36920_storage",
                          "typeString": "struct SwapUtils.Amplification storage ref"
                        }
                      },
                      "id": 38099,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "stopRampA",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37217,
                      "src": "11151:29:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_nonpayable$_t_struct$_Amplification_$36920_storage_ptr_$returns$__$bound_to$_t_struct$_Amplification_$36920_storage_ptr_$",
                        "typeString": "function (struct SwapUtils.Amplification storage pointer)"
                      }
                    },
                    "id": 38100,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11151:31:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38101,
                  "nodeType": "ExpressionStatement",
                  "src": "11151:31:50"
                }
              ]
            },
            "baseFunctions": [
              33943
            ],
            "documentation": {
              "id": 38091,
              "nodeType": "StructuredDocumentation",
              "src": "11058:27:50",
              "text": "@inheritdoc ITenderSwap"
            },
            "functionSelector": "c4db7fa0",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 38095,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 38094,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 28471,
                  "src": "11130:9:50"
                },
                "nodeType": "ModifierInvocation",
                "src": "11130:9:50"
              }
            ],
            "name": "stopRampA",
            "nameLocation": "11100:9:50",
            "overrides": {
              "id": 38093,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "11121:8:50"
            },
            "parameters": {
              "id": 38092,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11109:2:50"
            },
            "returnParameters": {
              "id": 38096,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11140:0:50"
            },
            "scope": 38136,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 38117,
            "nodeType": "FunctionDefinition",
            "src": "11234:133:50",
            "nodes": [],
            "body": {
              "id": 38116,
              "nodeType": "Block",
              "src": "11291:76:50",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 38112,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 38109,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "11310:5:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 38110,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "11310:15:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 38111,
                          "name": "_deadline",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38105,
                          "src": "11329:9:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "11310:28:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "446561646c696e65206e6f74206d6574",
                        "id": 38113,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11340:18:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a167df2a4d2ab6c5ee865e91ee543461cb54682b898fb54f9c2d17424e75a781",
                          "typeString": "literal_string \"Deadline not met\""
                        },
                        "value": "Deadline not met"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a167df2a4d2ab6c5ee865e91ee543461cb54682b898fb54f9c2d17424e75a781",
                          "typeString": "literal_string \"Deadline not met\""
                        }
                      ],
                      "id": 38108,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11302:7:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 38114,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11302:57:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38115,
                  "nodeType": "ExpressionStatement",
                  "src": "11302:57:50"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_deadlineCheck",
            "nameLocation": "11243:14:50",
            "parameters": {
              "id": 38106,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38105,
                  "mutability": "mutable",
                  "name": "_deadline",
                  "nameLocation": "11266:9:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 38117,
                  "src": "11258:17:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 38104,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11258:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11257:19:50"
            },
            "returnParameters": {
              "id": 38107,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11291:0:50"
            },
            "scope": 38136,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 38135,
            "nodeType": "FunctionDefinition",
            "src": "11408:173:50",
            "nodes": [],
            "body": {
              "id": 38134,
              "nodeType": "Block",
              "src": "11514:67:50",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 38131,
                        "name": "_newOwnner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38120,
                        "src": "11562:10:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 38128,
                        "name": "OwnableUpgradeable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28557,
                        "src": "11525:18:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_OwnableUpgradeable_$28557_$",
                          "typeString": "type(contract OwnableUpgradeable)"
                        }
                      },
                      "id": 38130,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferOwnership",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28531,
                      "src": "11525:36:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 38132,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11525:48:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38133,
                  "nodeType": "ExpressionStatement",
                  "src": "11525:48:50"
                }
              ]
            },
            "baseFunctions": [
              28531,
              33949
            ],
            "documentation": {
              "id": 38118,
              "nodeType": "StructuredDocumentation",
              "src": "11375:27:50",
              "text": "@inheritdoc ITenderSwap"
            },
            "functionSelector": "f2fde38b",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 38126,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 38125,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 28471,
                  "src": "11504:9:50"
                },
                "nodeType": "ModifierInvocation",
                "src": "11504:9:50"
              }
            ],
            "name": "transferOwnership",
            "nameLocation": "11417:17:50",
            "overrides": {
              "id": 38124,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 38122,
                  "name": "OwnableUpgradeable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 28557,
                  "src": "11471:18:50"
                },
                {
                  "id": 38123,
                  "name": "ITenderSwap",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 33950,
                  "src": "11491:11:50"
                }
              ],
              "src": "11462:41:50"
            },
            "parameters": {
              "id": 38121,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38120,
                  "mutability": "mutable",
                  "name": "_newOwnner",
                  "nameLocation": "11443:10:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 38135,
                  "src": "11435:18:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 38119,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11435:7:50",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11434:20:50"
            },
            "returnParameters": {
              "id": 38127,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11514:0:50"
            },
            "scope": 38136,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 37326,
              "name": "OwnableUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 28557,
              "src": "1231:18:50"
            },
            "id": 37327,
            "nodeType": "InheritanceSpecifier",
            "src": "1231:18:50"
          },
          {
            "baseName": {
              "id": 37328,
              "name": "ReentrancyGuardUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 28799,
              "src": "1251:26:50"
            },
            "id": 37329,
            "nodeType": "InheritanceSpecifier",
            "src": "1251:26:50"
          },
          {
            "baseName": {
              "id": 37330,
              "name": "ITenderSwap",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 33950,
              "src": "1279:11:50"
            },
            "id": 37331,
            "nodeType": "InheritanceSpecifier",
            "src": "1279:11:50"
          },
          {
            "baseName": {
              "id": 37332,
              "name": "Multicall",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 34237,
              "src": "1292:9:50"
            },
            "id": 37333,
            "nodeType": "InheritanceSpecifier",
            "src": "1292:9:50"
          },
          {
            "baseName": {
              "id": 37334,
              "name": "SelfPermit",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 34360,
              "src": "1303:10:50"
            },
            "id": 37335,
            "nodeType": "InheritanceSpecifier",
            "src": "1303:10:50"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 37325,
          "nodeType": "StructuredDocumentation",
          "src": "740:464:50",
          "text": " @title TenderSwap\n @dev TenderSwap is a light-weight StableSwap implementation for two assets.\n See the Curve StableSwap paper for more details (https://curve.fi/files/stableswap-paper.pdf).\n that trade 1:1 with eachother (e.g. USD stablecoins or tenderToken derivatives vs their underlying assets).\n It supports Elastic Supply ERC20 tokens, which are tokens of which the balances can change\n as the total supply of the token 'rebases'."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          38136,
          34360,
          34275,
          34237,
          34156,
          33950,
          28799,
          28557,
          30131,
          28726
        ],
        "name": "TenderSwap",
        "nameLocation": "1217:10:50",
        "scope": 38137,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 50
}